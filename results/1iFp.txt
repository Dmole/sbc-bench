sbc-bench v0.4 -- Sun, 29 Jul 2018 13:06:42 +0000

Distributor ID:	Debian
Description:	Debian GNU/Linux 9.5 (stretch)
Release:	9.5
Codename:	stretch
Architecture:	arm64

Uptime: 13:06:42 up 9 min,  1 user,  load average: 1.50, 1.15, 0.50

Linux 4.18.0-rc5-1048-ayufan-g69e417fe38cf (rockpro64) 	07/29/18 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4.94    0.00    0.75    4.90    0.00   89.40

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           9.08       289.26       212.87     164320     120928

              total        used        free      shared  buff/cache   available
Mem:           3.8G         67M        3.5G        5.4M        262M        3.6G
Swap:            0B          0B          0B



##########################################################################

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP:  408    Measured: 406.187/406.401/406.231
Cpufreq OPP:  600    Measured: 598.060/597.985/598.175
Cpufreq OPP:  816    Measured: 814.242/814.142/813.931
Cpufreq OPP: 1008    Measured: 1006.312/1005.700/1006.178
Cpufreq OPP: 1200    Measured: 1197.785/1198.244/1198.299
Cpufreq OPP: 1416    Measured: 1414.085/1414.147/1414.286

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP:  408    Measured: 406.582/406.724/406.567
Cpufreq OPP:  600    Measured: 598.486/598.445/598.655
Cpufreq OPP:  816    Measured: 814.834/814.603/814.553
Cpufreq OPP: 1008    Measured: 1006.558/1006.594/1006.631
Cpufreq OPP: 1200    Measured: 1198.369/1198.661/1198.647
Cpufreq OPP: 1416    Measured: 1414.612/1414.612/1414.534
Cpufreq OPP: 1608    Measured: 1606.537/1606.217/1606.597
Cpufreq OPP: 1800    Measured: 1798.567/1798.547/1798.587

##########################################################################

Executing tinymembench on a little core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1811.9 MB/s (0.6%)
 C copy backwards (32 byte blocks)                    :   1775.4 MB/s (1.3%)
 C copy backwards (64 byte blocks)                    :   1782.8 MB/s (2.1%)
 C copy                                               :   1887.5 MB/s (1.6%)
 C copy prefetched (32 bytes step)                    :   1333.5 MB/s
 C copy prefetched (64 bytes step)                    :   1532.6 MB/s (0.4%)
 C 2-pass copy                                        :   1568.1 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1105.8 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   1085.4 MB/s
 C fill                                               :   8353.9 MB/s (0.1%)
 C fill (shuffle within 16 byte blocks)               :   8354.3 MB/s
 C fill (shuffle within 32 byte blocks)               :   8350.1 MB/s
 C fill (shuffle within 64 byte blocks)               :   8345.8 MB/s
 ---
 standard memcpy                                      :   1892.4 MB/s
 standard memset                                      :   8380.1 MB/s (0.1%)
 ---
 NEON LDP/STP copy                                    :   1946.9 MB/s (0.4%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1294.7 MB/s (0.5%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1604.2 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2012.5 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2016.5 MB/s (0.3%)
 NEON LD1/ST1 copy                                    :   1934.4 MB/s (0.9%)
 NEON STP fill                                        :   8381.1 MB/s (0.1%)
 NEON STNP fill                                       :   6126.9 MB/s (8.6%)
 ARM LDP/STP copy                                     :   1948.3 MB/s (0.3%)
 ARM STP fill                                         :   8383.5 MB/s (0.3%)
 ARM STNP fill                                        :   6094.0 MB/s (7.7%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.8 ns          /     8.0 ns 
    131072 :    7.4 ns          /    11.1 ns 
    262144 :    8.7 ns          /    12.2 ns 
    524288 :   10.1 ns          /    14.0 ns 
   1048576 :   84.2 ns          /   130.7 ns 
   2097152 :  124.8 ns          /   169.9 ns 
   4194304 :  151.2 ns          /   190.8 ns 
   8388608 :  164.5 ns          /   201.0 ns 
  16777216 :  172.9 ns          /   207.7 ns 
  33554432 :  178.4 ns          /   212.5 ns 
  67108864 :  181.5 ns          /   215.0 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.8 ns          /     8.0 ns 
    131072 :    7.4 ns          /    11.1 ns 
    262144 :    8.7 ns          /    12.2 ns 
    524288 :   10.1 ns          /    14.0 ns 
   1048576 :   84.2 ns          /   130.6 ns 
   2097152 :  124.4 ns          /   169.4 ns 
   4194304 :  144.4 ns          /   182.6 ns 
   8388608 :  154.8 ns          /   187.5 ns 
  16777216 :  160.2 ns          /   189.5 ns 
  33554432 :  162.9 ns          /   190.4 ns 
  67108864 :  164.2 ns          /   190.8 ns 

Executing tinymembench on a big core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   3655.5 MB/s
 C copy backwards (32 byte blocks)                    :   3654.9 MB/s
 C copy backwards (64 byte blocks)                    :   3654.8 MB/s
 C copy                                               :   3645.9 MB/s
 C copy prefetched (32 bytes step)                    :   3627.6 MB/s
 C copy prefetched (64 bytes step)                    :   3626.3 MB/s
 C 2-pass copy                                        :   3278.3 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   3369.9 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   3369.8 MB/s
 C fill                                               :   8444.9 MB/s (0.6%)
 C fill (shuffle within 16 byte blocks)               :   8470.3 MB/s
 C fill (shuffle within 32 byte blocks)               :   8486.8 MB/s
 C fill (shuffle within 64 byte blocks)               :   8495.6 MB/s
 ---
 standard memcpy                                      :   3644.7 MB/s
 standard memset                                      :   8456.0 MB/s (0.7%)
 ---
 NEON LDP/STP copy                                    :   3645.8 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   3647.7 MB/s
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   3647.0 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   3623.7 MB/s (0.5%)
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   3621.8 MB/s
 NEON LD1/ST1 copy                                    :   3644.4 MB/s
 NEON STP fill                                        :   8493.9 MB/s (1.0%)
 NEON STNP fill                                       :   8478.0 MB/s
 ARM LDP/STP copy                                     :   3646.7 MB/s
 ARM STP fill                                         :   8456.4 MB/s (0.7%)
 ARM STNP fill                                        :   8451.3 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.1 ns 
    131072 :    6.8 ns          /     9.6 ns 
    262144 :    9.8 ns          /    12.8 ns 
    524288 :   11.4 ns          /    14.6 ns 
   1048576 :   17.0 ns          /    24.5 ns 
   2097152 :   98.4 ns          /   148.9 ns 
   4194304 :  138.0 ns          /   185.8 ns 
   8388608 :  163.3 ns          /   207.7 ns 
  16777216 :  175.4 ns          /   215.2 ns 
  33554432 :  181.7 ns          /   221.7 ns 
  67108864 :  192.8 ns          /   238.5 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.1 ns 
    131072 :    6.7 ns          /     9.6 ns 
    262144 :    7.9 ns          /    10.5 ns 
    524288 :    8.5 ns          /    10.9 ns 
   1048576 :   13.4 ns          /    19.8 ns 
   2097152 :   95.1 ns          /   146.0 ns 
   4194304 :  131.5 ns          /   177.7 ns 
   8388608 :  151.9 ns          /   191.9 ns 
  16777216 :  161.9 ns          /   197.4 ns 
  33554432 :  166.7 ns          /   200.1 ns 
  67108864 :  171.8 ns          /   202.7 ns 

##########################################################################

OpenSSL (version 1.1.0f, built on 25 May 2017)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      97375.28k   306438.95k   643870.46k   922110.63k  1053660.50k  1061978.11k
aes-128-cbc     237679.32k   620833.51k  1048485.97k  1246934.36k  1343578.11k  1347949.91k
aes-192-cbc      93005.85k   275612.95k   532686.51k   713849.51k   793187.67k   795503.27k
aes-192-cbc     228913.96k   593306.75k   918365.27k  1113456.64k  1185423.36k  1187992.92k
aes-256-cbc      90695.80k   256598.83k   466724.27k   601416.70k   654322.35k   659510.61k
aes-256-cbc     252243.26k   615064.79k   880108.63k   969177.43k  1020010.50k  1021493.25k

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1413  1411  1414  1414  1413  1413  1414  1413  1413

RAM size:    3874 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        782   100    763    761  |      15600   100   1332   1330
23:        771   100    787    786  |      15358   100   1330   1329
24:        766   100    824    824  |      15091   100   1326   1325
25:        763   100    873    872  |      14887   100   1327   1325
----------------------------------  | ------------------------------
Avr:             100    812    811  |              100   1328   1327
Tot:             100   1070   1069

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1797  1798  1798  1798  1798  1798  1798  1798  1798

RAM size:    3874 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1599   100   1556   1556  |      22007   100   1877   1877
23:       1559   100   1589   1589  |      21656   100   1874   1874
24:       1540   100   1656   1656  |      21299   100   1870   1869
25:       1532   100   1750   1750  |      20987   100   1868   1868
----------------------------------  | ------------------------------
Avr:             100   1638   1638  |              100   1872   1872
Tot:             100   1755   1755

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1411  1414  1413  1414  1414  1413  1414  1414  1414

RAM size:    3874 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5197   503   1005   5056  |      96698   537   1535   8247
23:       3547   367    984   3614  |      94539   534   1531   8180
24:       4255   432   1059   4576  |      93606   539   1523   8216
25:       3809   397   1094   4349  |      89415   530   1500   7957
----------------------------------  | ------------------------------
Avr:             425   1036   4399  |              535   1523   8150
Tot:             480   1279   6274

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1797  1798  1798  1798  1798  1798  1798  1798  1798

RAM size:    3874 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4635   459    982   4509  |      97255   540   1536   8294
23:       3539   351   1027   3607  |      95632   540   1532   8275
24:       3785   391   1041   4070  |      91336   527   1520   8017
25:       5068   522   1109   5787  |      92036   541   1514   8191
----------------------------------  | ------------------------------
Avr:             431   1040   4493  |              537   1525   8194
Tot:             484   1283   6344

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq:  1797  1798  1798  1798  1798  1798  1798  1798  1798

RAM size:    3874 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3505   341   1001   3410  |      97344   540   1539   8302
23:       5194   510   1037   5293  |      92904   526   1529   8039
24:       4355   449   1043   4683  |      91234   527   1520   8008
25:       3568   367   1110   4074  |      89794   528   1514   7991
----------------------------------  | ------------------------------
Avr:             417   1048   4365  |              530   1525   8085
Tot:             473   1287   6225

Compression: 4399,4493,4365
Decompression: 8150,8194,8085
Total: 6274,6344,6225

##########################################################################

** cpuminer-multi 1.3.3 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2018-07-29 13:38:10] 6 miner threads started, using 'scrypt' algorithm.
[2018-07-29 13:38:10] CPU #4: 1.87 kH/s
[2018-07-29 13:38:10] CPU #5: 1.86 kH/s
[2018-07-29 13:38:10] CPU #1: 1.11 kH/s
[2018-07-29 13:38:10] CPU #0: 1.11 kH/s
[2018-07-29 13:38:10] CPU #3: 1.11 kH/s
[2018-07-29 13:38:10] CPU #2: 1.08 kH/s
[2018-07-29 13:38:15] Total: 8.17 kH/s
[2018-07-29 13:38:20] CPU #5: 1.88 kH/s
[2018-07-29 13:38:20] Total: 8.23 kH/s
[2018-07-29 13:38:20] CPU #4: 1.88 kH/s
[2018-07-29 13:38:20] CPU #2: 1.12 kH/s
[2018-07-29 13:38:20] CPU #0: 1.12 kH/s
[2018-07-29 13:38:20] CPU #1: 1.12 kH/s
[2018-07-29 13:38:20] CPU #3: 1.12 kH/s
[2018-07-29 13:38:25] Total: 8.23 kH/s
[2018-07-29 13:38:30] CPU #5: 1.88 kH/s
[2018-07-29 13:38:30] Total: 8.21 kH/s
[2018-07-29 13:38:30] CPU #4: 1.88 kH/s
[2018-07-29 13:38:30] CPU #2: 1.12 kH/s
[2018-07-29 13:38:30] CPU #0: 1.12 kH/s
[2018-07-29 13:38:30] CPU #1: 1.12 kH/s
[2018-07-29 13:38:30] CPU #3: 1.12 kH/s
[2018-07-29 13:38:35] Total: 8.24 kH/s
[2018-07-29 13:38:40] CPU #5: 1.88 kH/s
[2018-07-29 13:38:40] Total: 8.21 kH/s
[2018-07-29 13:38:40] CPU #4: 1.88 kH/s
[2018-07-29 13:38:40] CPU #2: 1.12 kH/s
[2018-07-29 13:38:40] CPU #0: 1.12 kH/s
[2018-07-29 13:38:40] CPU #1: 1.12 kH/s
[2018-07-29 13:38:40] CPU #3: 1.12 kH/s
[2018-07-29 13:38:45] Total: 8.24 kH/s
[2018-07-29 13:38:50] CPU #5: 1.88 kH/s
[2018-07-29 13:38:50] Total: 8.21 kH/s
[2018-07-29 13:38:50] CPU #4: 1.88 kH/s
[2018-07-29 13:38:50] CPU #2: 1.12 kH/s
[2018-07-29 13:38:50] CPU #0: 1.12 kH/s
[2018-07-29 13:38:50] CPU #1: 1.12 kH/s
[2018-07-29 13:38:50] CPU #3: 1.12 kH/s
[2018-07-29 13:38:55] Total: 8.24 kH/s
[2018-07-29 13:39:00] CPU #5: 1.88 kH/s
[2018-07-29 13:39:00] Total: 8.24 kH/s
[2018-07-29 13:39:00] CPU #4: 1.88 kH/s
[2018-07-29 13:39:00] CPU #2: 1.12 kH/s
[2018-07-29 13:39:00] CPU #1: 1.12 kH/s
[2018-07-29 13:39:00] CPU #3: 1.12 kH/s
[2018-07-29 13:39:00] CPU #0: 1.11 kH/s
[2018-07-29 13:39:05] Total: 8.22 kH/s
[2018-07-29 13:39:10] CPU #5: 1.88 kH/s
[2018-07-29 13:39:10] Total: 8.23 kH/s
[2018-07-29 13:39:10] CPU #4: 1.88 kH/s
[2018-07-29 13:39:10] CPU #2: 1.12 kH/s
[2018-07-29 13:39:10] CPU #3: 1.12 kH/s
[2018-07-29 13:39:10] CPU #0: 1.11 kH/s
[2018-07-29 13:39:10] CPU #1: 1.11 kH/s
[2018-07-29 13:39:15] Total: 8.22 kH/s
[2018-07-29 13:39:20] CPU #5: 1.88 kH/s
[2018-07-29 13:39:20] Total: 8.24 kH/s
[2018-07-29 13:39:20] CPU #4: 1.88 kH/s
[2018-07-29 13:39:20] CPU #2: 1.12 kH/s
[2018-07-29 13:39:20] CPU #0: 1.11 kH/s
[2018-07-29 13:39:20] CPU #1: 1.11 kH/s
[2018-07-29 13:39:20] CPU #3: 1.11 kH/s
[2018-07-29 13:39:25] Total: 8.21 kH/s
[2018-07-29 13:39:30] CPU #5: 1.88 kH/s
[2018-07-29 13:39:30] Total: 8.24 kH/s
[2018-07-29 13:39:30] CPU #4: 1.88 kH/s
[2018-07-29 13:39:30] CPU #2: 1.12 kH/s
[2018-07-29 13:39:30] CPU #0: 1.11 kH/s
[2018-07-29 13:39:30] CPU #1: 1.12 kH/s
[2018-07-29 13:39:30] CPU #3: 1.11 kH/s
[2018-07-29 13:39:35] Total: 8.22 kH/s
[2018-07-29 13:39:40] CPU #4: 1.88 kH/s
[2018-07-29 13:39:40] CPU #2: 1.12 kH/s
[2018-07-29 13:39:40] CPU #5: 1.88 kH/s
[2018-07-29 13:39:40] Total: 8.23 kH/s
[2018-07-29 13:39:40] CPU #0: 1.12 kH/s
[2018-07-29 13:39:40] CPU #1: 1.12 kH/s
[2018-07-29 13:39:40] CPU #3: 1.12 kH/s
[2018-07-29 13:39:45] Total: 8.24 kH/s
[2018-07-29 13:39:50] CPU #2: 1.12 kH/s
[2018-07-29 13:39:50] CPU #4: 1.88 kH/s
[2018-07-29 13:39:50] CPU #5: 1.88 kH/s
[2018-07-29 13:39:50] Total: 8.22 kH/s
[2018-07-29 13:39:50] CPU #0: 1.12 kH/s
[2018-07-29 13:39:50] CPU #1: 1.12 kH/s
[2018-07-29 13:39:50] CPU #3: 1.12 kH/s
[2018-07-29 13:39:55] Total: 8.24 kH/s
[2018-07-29 13:40:00] CPU #2: 1.12 kH/s
[2018-07-29 13:40:00] CPU #4: 1.88 kH/s
[2018-07-29 13:40:00] CPU #5: 1.88 kH/s
[2018-07-29 13:40:00] Total: 8.22 kH/s
[2018-07-29 13:40:00] CPU #0: 1.12 kH/s
[2018-07-29 13:40:00] CPU #1: 1.12 kH/s
[2018-07-29 13:40:00] CPU #3: 1.12 kH/s
[2018-07-29 13:40:05] Total: 8.24 kH/s
[2018-07-29 13:40:10] CPU #2: 1.12 kH/s
[2018-07-29 13:40:10] CPU #4: 1.88 kH/s
[2018-07-29 13:40:10] CPU #5: 1.88 kH/s
[2018-07-29 13:40:10] Total: 8.21 kH/s
[2018-07-29 13:40:10] CPU #0: 1.12 kH/s
[2018-07-29 13:40:10] CPU #1: 1.12 kH/s
[2018-07-29 13:40:10] CPU #3: 1.12 kH/s
[2018-07-29 13:40:15] Total: 8.24 kH/s
[2018-07-29 13:40:20] CPU #2: 1.12 kH/s
[2018-07-29 13:40:20] CPU #4: 1.87 kH/s
[2018-07-29 13:40:20] CPU #5: 1.88 kH/s
[2018-07-29 13:40:20] Total: 8.22 kH/s
[2018-07-29 13:40:20] CPU #0: 1.12 kH/s
[2018-07-29 13:40:20] CPU #1: 1.12 kH/s
[2018-07-29 13:40:20] CPU #3: 1.12 kH/s
[2018-07-29 13:40:25] Total: 8.24 kH/s
[2018-07-29 13:40:30] CPU #2: 1.12 kH/s
[2018-07-29 13:40:30] CPU #4: 1.87 kH/s
[2018-07-29 13:40:30] CPU #5: 1.87 kH/s
[2018-07-29 13:40:30] Total: 8.22 kH/s
[2018-07-29 13:40:30] CPU #0: 1.12 kH/s
[2018-07-29 13:40:30] CPU #1: 1.12 kH/s
[2018-07-29 13:40:30] CPU #3: 1.12 kH/s
[2018-07-29 13:40:35] Total: 8.24 kH/s
[2018-07-29 13:40:40] CPU #4: 1.88 kH/s
[2018-07-29 13:40:40] CPU #2: 1.12 kH/s
[2018-07-29 13:40:40] CPU #5: 1.88 kH/s
[2018-07-29 13:40:40] Total: 8.24 kH/s
[2018-07-29 13:40:40] CPU #0: 1.11 kH/s
[2018-07-29 13:40:40] CPU #1: 1.11 kH/s
[2018-07-29 13:40:40] CPU #3: 1.11 kH/s
[2018-07-29 13:40:45] Total: 8.22 kH/s
[2018-07-29 13:40:50] CPU #2: 1.12 kH/s
[2018-07-29 13:40:50] CPU #4: 1.86 kH/s
[2018-07-29 13:40:50] CPU #5: 1.87 kH/s
[2018-07-29 13:40:50] Total: 8.22 kH/s
[2018-07-29 13:40:50] CPU #0: 1.12 kH/s
[2018-07-29 13:40:50] CPU #1: 1.12 kH/s
[2018-07-29 13:40:50] CPU #3: 1.12 kH/s
[2018-07-29 13:40:55] Total: 8.22 kH/s
[2018-07-29 13:41:00] CPU #2: 1.12 kH/s
[2018-07-29 13:41:00] CPU #5: 1.87 kH/s
[2018-07-29 13:41:00] Total: 8.20 kH/s
[2018-07-29 13:41:00] CPU #4: 1.85 kH/s
[2018-07-29 13:41:00] CPU #1: 1.11 kH/s
[2018-07-29 13:41:00] CPU #0: 1.11 kH/s
[2018-07-29 13:41:00] CPU #3: 1.11 kH/s
[2018-07-29 13:41:05] Total: 8.21 kH/s
[2018-07-29 13:41:10] CPU #2: 1.12 kH/s
[2018-07-29 13:41:10] CPU #4: 1.88 kH/s
[2018-07-29 13:41:10] CPU #5: 1.88 kH/s
[2018-07-29 13:41:10] Total: 8.23 kH/s
[2018-07-29 13:41:10] CPU #0: 1.12 kH/s
[2018-07-29 13:41:10] CPU #1: 1.12 kH/s
[2018-07-29 13:41:10] CPU #3: 1.12 kH/s
[2018-07-29 13:41:15] Total: 8.24 kH/s
[2018-07-29 13:41:20] CPU #2: 1.12 kH/s
[2018-07-29 13:41:20] CPU #4: 1.88 kH/s
[2018-07-29 13:41:20] CPU #5: 1.88 kH/s
[2018-07-29 13:41:20] Total: 8.24 kH/s
[2018-07-29 13:41:20] CPU #0: 1.12 kH/s
[2018-07-29 13:41:20] CPU #1: 1.12 kH/s
[2018-07-29 13:41:20] CPU #3: 1.12 kH/s
[2018-07-29 13:41:25] Total: 8.22 kH/s
[2018-07-29 13:41:30] CPU #2: 1.12 kH/s
[2018-07-29 13:41:30] CPU #4: 1.88 kH/s
[2018-07-29 13:41:30] CPU #5: 1.88 kH/s
[2018-07-29 13:41:30] Total: 8.24 kH/s
[2018-07-29 13:41:30] CPU #0: 1.12 kH/s
[2018-07-29 13:41:30] CPU #1: 1.12 kH/s
[2018-07-29 13:41:30] CPU #3: 1.12 kH/s
[2018-07-29 13:41:35] Total: 8.23 kH/s
[2018-07-29 13:41:40] CPU #2: 1.12 kH/s
[2018-07-29 13:41:40] CPU #4: 1.88 kH/s
[2018-07-29 13:41:40] CPU #5: 1.88 kH/s
[2018-07-29 13:41:40] Total: 8.22 kH/s
[2018-07-29 13:41:40] CPU #0: 1.12 kH/s
[2018-07-29 13:41:40] CPU #1: 1.12 kH/s
[2018-07-29 13:41:40] CPU #3: 1.12 kH/s
[2018-07-29 13:41:45] Total: 8.23 kH/s
[2018-07-29 13:41:50] CPU #2: 1.12 kH/s
[2018-07-29 13:41:50] CPU #4: 1.88 kH/s
[2018-07-29 13:41:50] CPU #5: 1.88 kH/s
[2018-07-29 13:41:50] Total: 8.23 kH/s
[2018-07-29 13:41:50] CPU #0: 1.12 kH/s
[2018-07-29 13:41:50] CPU #1: 1.12 kH/s
[2018-07-29 13:41:50] CPU #3: 1.12 kH/s
[2018-07-29 13:41:55] Total: 8.23 kH/s
[2018-07-29 13:42:00] CPU #2: 1.12 kH/s
[2018-07-29 13:42:00] CPU #4: 1.88 kH/s
[2018-07-29 13:42:00] CPU #5: 1.88 kH/s
[2018-07-29 13:42:00] Total: 8.24 kH/s
[2018-07-29 13:42:00] CPU #0: 1.12 kH/s
[2018-07-29 13:42:00] CPU #1: 1.12 kH/s
[2018-07-29 13:42:00] CPU #3: 1.12 kH/s
[2018-07-29 13:42:05] Total: 8.24 kH/s
[2018-07-29 13:42:10] CPU #2: 1.12 kH/s
[2018-07-29 13:42:10] CPU #4: 1.87 kH/s
[2018-07-29 13:42:10] CPU #5: 1.87 kH/s
[2018-07-29 13:42:10] Total: 8.22 kH/s
[2018-07-29 13:42:10] CPU #0: 1.11 kH/s
[2018-07-29 13:42:10] CPU #1: 1.12 kH/s
[2018-07-29 13:42:10] CPU #3: 1.12 kH/s
[2018-07-29 13:42:15] Total: 8.23 kH/s
[2018-07-29 13:42:20] CPU #2: 1.12 kH/s
[2018-07-29 13:42:20] CPU #4: 1.87 kH/s
[2018-07-29 13:42:20] CPU #5: 1.87 kH/s
[2018-07-29 13:42:20] Total: 8.23 kH/s
[2018-07-29 13:42:20] CPU #0: 1.12 kH/s
[2018-07-29 13:42:20] CPU #1: 1.12 kH/s
[2018-07-29 13:42:20] CPU #3: 1.12 kH/s
[2018-07-29 13:42:25] Total: 8.24 kH/s
[2018-07-29 13:42:30] CPU #2: 1.12 kH/s
[2018-07-29 13:42:30] CPU #4: 1.88 kH/s
[2018-07-29 13:42:30] CPU #5: 1.88 kH/s
[2018-07-29 13:42:30] Total: 8.23 kH/s
[2018-07-29 13:42:30] CPU #0: 1.12 kH/s
[2018-07-29 13:42:30] CPU #3: 1.12 kH/s
[2018-07-29 13:42:30] CPU #1: 1.11 kH/s
[2018-07-29 13:42:35] Total: 8.22 kH/s
[2018-07-29 13:42:40] CPU #2: 1.12 kH/s
[2018-07-29 13:42:40] CPU #4: 1.87 kH/s
[2018-07-29 13:42:40] CPU #0: 1.12 kH/s
[2018-07-29 13:42:40] CPU #5: 1.87 kH/s
[2018-07-29 13:42:40] Total: 8.23 kH/s
[2018-07-29 13:42:40] CPU #1: 1.12 kH/s
[2018-07-29 13:42:40] CPU #3: 1.12 kH/s
[2018-07-29 13:42:45] Total: 8.23 kH/s
[2018-07-29 13:42:50] CPU #2: 1.12 kH/s
[2018-07-29 13:42:50] CPU #4: 1.87 kH/s
[2018-07-29 13:42:50] CPU #0: 1.12 kH/s
[2018-07-29 13:42:50] CPU #1: 1.12 kH/s
[2018-07-29 13:42:50] CPU #5: 1.87 kH/s
[2018-07-29 13:42:50] Total: 8.23 kH/s
[2018-07-29 13:42:50] CPU #3: 1.12 kH/s
[2018-07-29 13:42:55] Total: 8.24 kH/s
[2018-07-29 13:43:00] CPU #2: 1.12 kH/s
[2018-07-29 13:43:00] CPU #4: 1.88 kH/s
[2018-07-29 13:43:00] CPU #5: 1.88 kH/s
[2018-07-29 13:43:00] Total: 8.24 kH/s
[2018-07-29 13:43:00] CPU #0: 1.12 kH/s
[2018-07-29 13:43:00] CPU #1: 1.12 kH/s
[2018-07-29 13:43:00] CPU #3: 1.12 kH/s
[2018-07-29 13:43:05] Total: 8.23 kH/s

Total Scores: 8.24,8.23,8.22,8.21,8.20,8.17

##########################################################################

Testing clockspeeds again. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:43:01: 1800/1416MHz  6.06 100%   0%  99%   0%   0%   0%  59.4°C

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP:  408    Measured: 406.133/406.265/406.221
Cpufreq OPP:  600    Measured: 598.290/598.384/598.236
Cpufreq OPP:  816    Measured: 813.721/814.222/813.941
Cpufreq OPP: 1008    Measured: 1006.178/1006.239/1006.288
Cpufreq OPP: 1200    Measured: 1198.230/1197.799/1198.411
Cpufreq OPP: 1416    Measured: 1414.209/1414.441/1414.271

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP:  408    Measured: 406.514/406.567/406.519
Cpufreq OPP:  600    Measured: 598.662/598.730/598.933
Cpufreq OPP:  816    Measured: 814.332/814.523/814.623
Cpufreq OPP: 1008    Measured: 1006.202/1006.533/1006.545
Cpufreq OPP: 1200    Measured: 1198.536/1198.647/1198.591
Cpufreq OPP: 1416    Measured: 1414.612/1414.596/1414.534
Cpufreq OPP: 1608    Measured: 1606.537/1606.617/1606.877
Cpufreq OPP: 1800    Measured: 1798.567/1798.687/1798.547

##########################################################################

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:06:51: 1800/1416MHz  1.34  10%   0%   5%   0%   4%   0%  35.6°C
13:07:51: 1800/1416MHz  1.12  17%   0%  16%   0%   0%   0%  36.2°C
13:08:51: 1800/1416MHz  1.04  16%   0%  16%   0%   0%   0%  36.2°C
13:09:51: 1800/1416MHz  1.12  16%   0%  16%   0%   0%   0%  36.2°C
13:10:51: 1800/1416MHz  1.04  16%   0%  16%   0%   0%   0%  34.4°C
13:11:51: 1800/1416MHz  1.01  16%   0%  16%   0%   0%   0%  35.6°C
13:12:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  33.9°C
13:13:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  34.4°C
13:14:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  34.4°C
13:15:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.0°C
13:16:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.0°C
13:17:51: 1800/1416MHz  1.06  16%   0%  16%   0%   0%   0%  40.6°C
13:18:51: 1800/1416MHz  1.02  16%   0%  16%   0%   0%   0%  36.2°C
13:19:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  37.5°C
13:20:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  37.5°C
13:21:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.9°C
13:22:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  37.5°C
13:23:51: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.2°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:24:03: 1800/1416MHz  1.00  14%   0%  12%   0%   1%   0%  36.9°C
13:24:13: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.0°C
13:24:23: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  39.4°C
13:24:33: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  40.0°C
13:24:43: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.2°C
13:24:53: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.6°C
13:25:03: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  39.4°C
13:25:13: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  41.7°C
13:25:23: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.2°C
13:25:33: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.6°C
13:25:43: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  40.0°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:25:51: 1800/1416MHz  1.00  14%   0%  12%   0%   1%   0%  40.0°C
13:26:06: 1800/1416MHz  2.02  16%   0%  16%   0%   0%   0%  36.2°C
13:26:21: 1800/1416MHz  2.70  16%   0%  16%   0%   0%   0%  36.2°C
13:26:36: 1800/1416MHz  3.51  16%   0%  16%   0%   0%   0%  35.6°C
13:26:51: 1800/1416MHz  3.55  16%   0%  16%   0%   0%   0%  35.6°C
13:27:06: 1800/1416MHz  3.57  16%   0%  16%   0%   0%   0%  35.0°C
13:27:21: 1800/1416MHz  4.11  16%   0%  16%   0%   0%   0%  34.4°C
13:27:36: 1800/1416MHz  4.00  16%   0%  16%   0%   0%   0%  35.6°C
13:27:51: 1800/1416MHz  3.84  16%   0%  16%   0%   0%   0%  36.9°C
13:28:07: 1800/1416MHz  3.66  16%   0%  16%   0%   0%   0%  35.6°C
13:28:22: 1800/1416MHz  3.65  16%   0%  16%   0%   0%   0%  34.4°C
13:28:37: 1800/1416MHz  3.74  16%   0%  16%   0%   0%   0%  35.0°C
13:28:52: 1800/1416MHz  4.24  16%   0%  16%   0%   0%   0%  35.0°C
13:29:07: 1800/1416MHz  3.83  16%   0%  16%   0%   0%   0%  35.6°C
13:29:22: 1800/1416MHz  3.65  16%   0%  16%   0%   0%   0%  34.4°C
13:29:37: 1800/1416MHz  3.50  16%   0%  16%   0%   0%   0%  35.0°C
13:29:52: 1800/1416MHz  3.39  16%   0%  16%   0%   0%   0%  33.9°C
13:30:07: 1800/1416MHz  3.38  16%   0%  16%   0%   0%   0%  35.0°C
13:30:22: 1800/1416MHz  3.44  16%   0%  16%   0%   0%   0%  34.4°C
13:30:37: 1800/1416MHz  3.34  16%   0%  16%   0%   0%   0%  35.6°C
13:30:52: 1800/1416MHz  3.27  16%   0%  16%   0%   0%   0%  35.0°C
13:31:07: 1800/1416MHz  3.45  16%   0%  16%   0%   0%   0%  34.4°C
13:31:22: 1800/1416MHz  3.61  16%   0%  16%   0%   0%   0%  36.2°C
13:31:37: 1800/1416MHz  4.01  16%   0%  16%   0%   0%   0%  39.4°C
13:31:52: 1800/1416MHz  4.45  16%   0%  16%   0%   0%   0%  39.4°C
13:32:07: 1800/1416MHz  4.42  16%   0%  16%   0%   0%   0%  38.8°C
13:32:22: 1800/1416MHz  4.77  16%   0%  16%   0%   0%   0%  38.8°C
13:32:37: 1800/1416MHz  4.58  16%   0%  16%   0%   0%   0%  39.4°C
13:32:52: 1800/1416MHz  4.23  16%   0%  16%   0%   0%   0%  40.0°C
13:33:07: 1800/1416MHz  4.20  16%   0%  16%   0%   0%   0%  39.4°C
13:33:22: 1800/1416MHz  4.60  16%   0%  16%   0%   0%   0%  39.4°C
13:33:37: 1800/1416MHz  4.39  16%   0%  16%   0%   0%   0%  38.8°C
13:33:52: 1800/1416MHz  4.16  16%   0%  16%   0%   0%   0%  39.4°C
13:34:08: 1800/1416MHz  3.98  16%   0%  16%   0%   0%   0%  40.6°C
13:34:23: 1800/1416MHz  3.92  16%   0%  16%   0%   0%   0%  38.1°C
13:34:38: 1800/1416MHz  4.25  16%   0%  16%   0%   0%   0%  39.4°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:34:46: 1800/1416MHz  4.52  15%   0%  13%   0%   1%   0%  40.0°C
13:35:16: 1800/1416MHz  4.38  70%   0%  69%   0%   0%   0%  48.1°C
13:35:46: 1800/1416MHz  4.41  68%   0%  67%   0%   0%   0%  41.7°C
13:36:16: 1800/1416MHz  5.01  64%   0%  64%   0%   0%   0%  46.9°C
13:36:47: 1800/1416MHz  5.66  76%   0%  75%   0%   0%   0%  47.5°C
13:37:18: 1800/1416MHz  5.50  76%   0%  76%   0%   0%   0%  51.7°C
13:37:48: 1800/1416MHz  5.31  76%   0%  75%   0%   0%   0%  46.9°C

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
13:38:10: 1800/1416MHz  5.00  19%   0%  18%   0%   1%   0%  43.9°C
13:38:22: 1800/1416MHz  5.16 100%   0%  99%   0%   0%   0%  53.9°C
13:38:33: 1800/1416MHz  5.41 100%   0%  99%   0%   0%   0%  56.7°C
13:38:45: 1800/1416MHz  5.50 100%   0%  99%   0%   0%   0%  55.6°C
13:38:56: 1800/1416MHz  5.58 100%   0%  99%   0%   0%   0%  56.7°C
13:39:07: 1800/1416MHz  5.74 100%   0%  99%   0%   0%   0%  58.3°C
13:39:19: 1800/1416MHz  5.78 100%   0%  99%   0%   0%   0%  55.6°C
13:39:30: 1800/1416MHz  5.82 100%   0%  99%   0%   0%   0%  57.8°C
13:39:41: 1800/1416MHz  5.84 100%   0%  99%   0%   0%   0%  56.7°C
13:39:53: 1800/1416MHz  5.95 100%   0%  99%   0%   0%   0%  57.2°C
13:40:04: 1800/1416MHz  5.96 100%   0%  99%   0%   0%   0%  57.8°C
13:40:15: 1800/1416MHz  5.96 100%   0%  99%   0%   0%   0%  58.3°C
13:40:26: 1800/1416MHz  5.97 100%   0%  99%   0%   0%   0%  58.9°C
13:40:37: 1800/1416MHz  6.04 100%   0%  99%   0%   0%   0%  58.9°C
13:40:48: 1800/1416MHz  6.04 100%   0% 100%   0%   0%   0%  56.7°C
13:40:59: 1800/1416MHz  6.03 100%   0%  99%   0%   0%   0%  56.7°C
13:41:10: 1800/1416MHz  6.03 100%   0%  99%   0%   0%   0%  57.8°C
13:41:21: 1800/1416MHz  6.02 100%   0%  99%   0%   0%   0%  56.7°C
13:41:32: 1800/1416MHz  6.08 100%   0%  99%   0%   0%   0%  58.3°C
13:41:44: 1800/1416MHz  6.07 100%   0%  99%   0%   0%   0%  58.9°C
13:41:55: 1800/1416MHz  6.06 100%   0%  99%   0%   0%   0%  58.9°C
13:42:06: 1800/1416MHz  6.05 100%   0%  99%   0%   0%   0%  58.9°C
13:42:17: 1800/1416MHz  6.04 100%   0%  99%   0%   0%   0%  57.2°C
13:42:28: 1800/1416MHz  6.10 100%   0% 100%   0%   0%   0%  56.7°C
13:42:39: 1800/1416MHz  6.08 100%   0%  99%   0%   0%   0%  59.4°C
13:42:50: 1800/1416MHz  6.07 100%   0%  99%   0%   0%   0%  58.3°C
13:43:01: 1800/1416MHz  6.06 100%   0%  99%   0%   0%   0%  59.4°C

##########################################################################

Linux 4.18.0-rc5-1048-ayufan-g69e417fe38cf (rockpro64) 	07/29/18 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          27.16    0.00    0.27    1.02    0.00   71.55

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           2.22        60.77        46.62     168024     128884

              total        used        free      shared  buff/cache   available
Mem:           3.8G         67M        3.5G        5.4M        269M        3.6G
Swap:            0B          0B          0B



Architecture:          aarch64
Byte Order:            Little Endian
CPU(s):                6
On-line CPU(s) list:   0-5
Thread(s) per core:    1
Core(s) per socket:    3
Socket(s):             2
NUMA node(s):          1
Model:                 4
CPU max MHz:           1416.0000
CPU min MHz:           408.0000
BogoMIPS:              48.00
NUMA node0 CPU(s):     0-5
Flags:                 fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
