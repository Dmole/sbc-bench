sbc-bench v0.4 -- Sun, 29 Jul 2018 17:56:03 +0000

Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 9.4 (stretch)
Release:	9.4
Codename:	stretch
Architecture:	armhf

Raspberry Pi ThreadX version:
Jun  7 2018 15:31:38 
Copyright (c) 2012 Broadcom
version 4800f08a139d6ca1c5ecbee345ea6682e2160881 (clean) (release)

ThreadX configuration (/boot/config.txt):
disable_overscan=1
dtparam=audio=on

Uptime: 17:56:03 up 11 min,  1 user,  load average: 1.24, 0.99, 0.50

Linux 4.14.50-v7+ (raspberrypi) 	29/07/18 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          12.88    0.00    1.29    2.21    0.00   83.63

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          10.26       333.18       171.70     239007     123169

              total        used        free      shared  buff/cache   available
Mem:           927M        105M        482M         12M        338M        758M
Swap:           99M          0B         99M

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	0	-2

##########################################################################

Checking cpufreq OPP:

Cpufreq OPP:  600    ThreadX:  600    Measured: 587.693/587.915/585.695
Cpufreq OPP: 1400    ThreadX: 1200    Measured: 1187.159/1184.722/1186.845

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1026.9 MB/s (0.2%)
 C copy backwards (32 byte blocks)                    :   1026.4 MB/s
 C copy backwards (64 byte blocks)                    :   1029.2 MB/s (0.3%)
 C copy                                               :   1036.6 MB/s (0.1%)
 C copy prefetched (32 bytes step)                    :   1042.3 MB/s (0.8%)
 C copy prefetched (64 bytes step)                    :   1042.3 MB/s (0.7%)
 C 2-pass copy                                        :    876.7 MB/s (1.4%)
 C 2-pass copy prefetched (32 bytes step)             :    893.0 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    892.2 MB/s
 C fill                                               :   1506.3 MB/s (0.1%)
 C fill (shuffle within 16 byte blocks)               :   1506.5 MB/s (0.1%)
 C fill (shuffle within 32 byte blocks)               :   1503.9 MB/s
 C fill (shuffle within 64 byte blocks)               :   1506.5 MB/s (0.1%)
 ---
 standard memcpy                                      :   1050.1 MB/s
 standard memset                                      :   1505.7 MB/s (0.2%)
 ---
 NEON read                                            :   1770.5 MB/s (0.5%)
 NEON read prefetched (32 bytes step)                 :   1929.0 MB/s (0.8%)
 NEON read prefetched (64 bytes step)                 :   1931.6 MB/s (0.2%)
 NEON read 2 data streams                             :   1666.2 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :   1721.4 MB/s (1.3%)
 NEON read 2 data streams prefetched (64 bytes step)  :   1719.3 MB/s
 NEON copy                                            :   1028.4 MB/s (0.6%)
 NEON copy prefetched (32 bytes step)                 :   1055.0 MB/s
 NEON copy prefetched (64 bytes step)                 :   1054.1 MB/s
 NEON unrolled copy                                   :   1036.1 MB/s
 NEON unrolled copy prefetched (32 bytes step)        :   1055.0 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1055.8 MB/s
 NEON copy backwards                                  :   1028.7 MB/s (0.6%)
 NEON copy backwards prefetched (32 bytes step)       :   1035.3 MB/s
 NEON copy backwards prefetched (64 bytes step)       :   1047.8 MB/s (0.2%)
 NEON 2-pass copy                                     :    888.0 MB/s (1.4%)
 NEON 2-pass copy prefetched (32 bytes step)          :    909.4 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :    910.4 MB/s (0.1%)
 NEON unrolled 2-pass copy                            :    871.5 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :    885.8 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :    885.9 MB/s
 NEON fill                                            :   1503.2 MB/s
 NEON fill backwards                                  :   1507.0 MB/s (0.1%)
 VFP copy                                             :   1035.4 MB/s (1.9%)
 VFP 2-pass copy                                      :    865.8 MB/s (0.2%)
 ARM fill (STRD)                                      :   1503.4 MB/s (0.1%)
 ARM fill (STM with 8 registers)                      :   1506.6 MB/s (0.4%)
 ARM fill (STM with 4 registers)                      :   1504.9 MB/s (0.2%)
 ARM copy prefetched (incr pld)                       :   1054.1 MB/s
 ARM copy prefetched (wrap pld)                       :   1053.2 MB/s (0.2%)
 ARM 2-pass copy prefetched (incr pld)                :    895.5 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :    893.2 MB/s

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     61.7 MB/s
 NEON copy (from framebuffer)                         :     60.0 MB/s
 NEON 2-pass copy (from framebuffer)                  :     59.6 MB/s
 NEON unrolled copy (from framebuffer)                :     61.0 MB/s
 NEON 2-pass unrolled copy (from framebuffer)         :     59.3 MB/s
 VFP copy (from framebuffer)                          :    390.3 MB/s
 VFP 2-pass copy (from framebuffer)                   :    335.8 MB/s
 ARM copy (from framebuffer)                          :    197.1 MB/s
 ARM 2-pass copy (from framebuffer)                   :    199.4 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    5.4 ns          /     9.2 ns 
    131072 :    8.2 ns          /    13.1 ns 
    262144 :    9.7 ns          /    14.8 ns 
    524288 :   16.6 ns          /    26.3 ns 
   1048576 :   91.3 ns          /   142.7 ns 
   2097152 :  131.6 ns          /   183.6 ns 
   4194304 :  158.0 ns          /   204.8 ns 
   8388608 :  171.7 ns          /   214.3 ns 
  16777216 :  180.3 ns          /   220.5 ns 
  33554432 :  185.5 ns          /   224.7 ns 
  67108864 :  188.5 ns          /   227.2 ns 

##########################################################################

OpenSSL (version 1.1.0f, built on 25 May 2017)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      28154.44k    38730.71k    43048.96k    47101.27k    47945.05k    47966.89k
aes-128-cbc      30657.46k    42177.96k    46898.60k    48247.47k    48485.72k    48682.33k
aes-192-cbc      27716.20k    36461.08k    40091.82k    41074.35k    41230.34k    41391.45k
aes-192-cbc      27717.00k    36598.78k    39939.50k    41071.62k    41358.68k    41222.14k
aes-256-cbc      25520.30k    32838.06k    35499.78k    36392.96k    36620.97k    36640.09k
aes-256-cbc      25396.28k    32832.58k    35619.33k    36266.33k    36626.43k    36629.16k

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   989  1096  1113  1111  1113  1114  1115  1115  1114

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        572   100    557    557  |      13500   100   1153   1152
23:        560   100    572    571  |      13270   100   1148   1148
24:        545   100    586    586  |      12990   100   1141   1140
25:        505    96    603    577  |      12570   100   1119   1119
----------------------------------  | ------------------------------
Avr:              99    579    573  |              100   1140   1140
Tot:              99    860    856

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1124  1115  1196  1199  1198  1198  1198  1199  1198

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1786   327    531   1737  |      51793   369   1197   4419
23:       1733   332    532   1766  |      50063   367   1180   4332
24:       1718   339    546   1847  |      49157   367   1174   4315
25:       1681   348    552   1920  |      47016   363   1151   4184
----------------------------------  | ------------------------------
Avr:             336    540   1818  |              367   1176   4313
Tot:             352    858   3065

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1198  1199  1199  1199  1199  1199  1199  1199  1199

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1578   294    522   1536  |      51967   370   1200   4434
23:       1738   332    534   1771  |      50278   367   1186   4350
24:       1728   341    545   1859  |      47948   361   1167   4209
25:       1499   312    549   1712  |      47207   364   1153   4201
----------------------------------  | ------------------------------
Avr:             320    538   1720  |              365   1177   4299
Tot:             343    857   3009

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1198  1198  1199  1198  1199  1199  1197  1199  1198

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1813   335    526   1764  |      51075   366   1192   4358
23:       1737   332    534   1770  |      50730   370   1186   4389
24:       1727   341    545   1857  |      48712   365   1171   4276
25:       1695   350    553   1936  |      47061   363   1152   4188
----------------------------------  | ------------------------------
Avr:             339    540   1832  |              366   1175   4303
Tot:             353    858   3067

Compression: 1818,1720,1832
Decompression: 4313,4299,4303
Total: 3065,3009,3067

##########################################################################

Testing clockspeeds again. System health now:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
18:16:01: 1400/1200MHz  3.81  84%   1%  82%   0%   0%   0%  72.5°C  1.2313V

Checking cpufreq OPP:

Cpufreq OPP:  600    ThreadX:  600    Measured: 572.428/565.167/587.608
Cpufreq OPP: 1400    ThreadX: 1200    Measured: 1180.255/1187.036/1186.900

##########################################################################

System health while running tinymembench:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:56:05: 1400/1200MHz  1.24  16%   1%  12%   0%   2%   0%  61.2°C  1.2313V
17:57:05: 1400/1200MHz  1.17  27%   0%  26%   0%   0%   0%  63.4°C  1.2313V
17:58:05: 1400/1200MHz  1.21  26%   0%  26%   0%   0%   0%  63.4°C  1.2313V
17:59:05: 1400/1200MHz  1.15  27%   0%  26%   0%   0%   0%  63.4°C  1.2313V
18:00:05: 1400/1200MHz  1.13  27%   0%  26%   0%   0%   0%  62.3°C  1.2313V
18:01:05: 1400/1200MHz  1.11  26%   0%  26%   0%   0%   0%  61.2°C  1.2313V
18:02:05: 1400/1200MHz  1.04  25%   0%  25%   0%   0%   0%  61.2°C  1.2313V
18:03:06: 1400/1200MHz  1.08  26%   0%  25%   0%   0%   0%  61.2°C  1.2313V
18:04:06: 1400/1200MHz  1.03  26%   0%  25%   0%   0%   0%  61.2°C  1.2313V

System health while running OpenSSL benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
18:04:43: 1400/1200MHz  1.01  20%   0%  18%   0%   1%   0%  61.2°C  1.2313V
18:04:53: 1400/1200MHz  1.01  25%   0%  25%   0%   0%   0%  62.3°C  1.2313V
18:05:04: 1400/1200MHz  1.01  25%   0%  25%   0%   0%   0%  62.3°C  1.2313V
18:05:14: 1400/1200MHz  1.01  25%   0%  25%   0%   0%   0%  62.8°C  1.2313V
18:05:24: 1400/1200MHz  1.00  25%   0%  25%   0%   0%   0%  62.8°C  1.2313V
18:05:34: 1400/1200MHz  1.00  25%   0%  25%   0%   0%   0%  62.8°C  1.2313V
18:05:44: 1400/1200MHz  1.00  25%   0%  25%   0%   0%   0%  63.4°C  1.2313V
18:05:54: 1400/1200MHz  1.00  25%   0%  25%   0%   0%   0%  63.4°C  1.2313V
18:06:04: 1400/1200MHz  1.08  25%   0%  25%   0%   0%   0%  63.4°C  1.2313V
18:06:14: 1400/1200MHz  1.07  25%   0%  25%   0%   0%   0%  62.8°C  1.2313V
18:06:24: 1400/1200MHz  1.14  25%   0%  25%   0%   0%   0%  63.4°C  1.2313V

System health while running 7-zip single core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
18:06:31: 1400/1200MHz  1.13  21%   0%  19%   0%   1%   0%  63.4°C  1.2313V
18:06:47: 1400/1200MHz  1.33  25%   0%  24%   0%   0%   0%  62.3°C  1.2313V
18:07:02: 1400/1200MHz  2.08  25%   0%  24%   0%   0%   0%  62.3°C  1.2313V
18:07:17: 1400/1200MHz  2.28  25%   1%  24%   0%   0%   0%  62.3°C  1.2313V
18:07:32: 1400/1200MHz  2.43  25%   0%  24%   0%   0%   0%  62.3°C  1.2313V
18:07:47: 1400/1200MHz  2.78  25%   0%  24%   0%   0%   0%  62.3°C  1.2313V
18:08:02: 1400/1200MHz  2.81  25%   0%  24%   0%   0%   0%  61.8°C  1.2313V
18:08:17: 1400/1200MHz  2.63  25%   0%  24%   0%   0%   0%  61.8°C  1.2313V
18:08:32: 1400/1200MHz  2.71  25%   0%  24%   0%   0%   0%  61.2°C  1.2313V
18:08:47: 1400/1200MHz  2.56  25%   0%  23%   0%   0%   0%  62.3°C  1.2313V
18:09:02: 1400/1200MHz  2.81  25%   0%  24%   0%   0%   0%  61.8°C  1.2313V
18:09:17: 1400/1200MHz  2.91  25%   0%  24%   0%   0%   0%  61.2°C  1.2313V
18:09:32: 1400/1200MHz  2.71  25%   0%  24%   0%   0%   0%  61.8°C  1.2313V
18:09:48: 1400/1200MHz  2.77  25%   0%  24%   0%   0%   0%  62.3°C  1.2313V
18:10:03: 1400/1200MHz  2.60  25%   0%  24%   0%   0%   0%  61.2°C  1.2313V
18:10:18: 1400/1200MHz  2.46  25%   0%  24%   0%   0%   0%  61.8°C  1.2313V
18:10:33: 1400/1200MHz  2.43  25%   0%  24%   0%   0%   0%  61.2°C  1.2313V
18:10:48: 1400/1200MHz  2.49  25%   1%  24%   0%   0%   0%  61.2°C  1.2313V
18:11:19: 1400/1200MHz  2.75  54%   1%  20%   0%  33%   0%  61.2°C  1.2313V

System health while running 7-zip multi core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
18:11:28: 1400/1200MHz  3.64  22%   0%  19%   0%   1%   0%  62.3°C  1.2313V
18:11:58: 1400/1200MHz  3.32  77%   1%  74%   0%   0%   0%  67.1°C  1.2313V
18:12:29: 1400/1200MHz  3.33  82%   1%  81%   0%   0%   0%  68.2°C  1.2313V
18:12:59: 1400/1200MHz  3.79  90%   1%  89%   0%   0%   0%  69.3°C  1.2313V
18:13:29: 1400/1200MHz  3.68  76%   1%  75%   0%   0%   0%  70.9°C  1.2313V
18:13:59: 1400/1200MHz  3.56  81%   1%  79%   0%   0%   0%  70.4°C  1.2313V
18:14:29: 1400/1200MHz  3.67  84%   1%  82%   0%   0%   0%  70.9°C  1.2313V
18:14:59: 1400/1200MHz  3.54  71%   1%  70%   0%   0%   0%  70.9°C  1.2313V
18:15:30: 1400/1200MHz  3.97  87%   1%  85%   0%   0%   0%  73.1°C  1.2313V
18:16:01: 1400/1200MHz  3.81  84%   1%  82%   0%   0%   0%  72.5°C  1.2313V

##########################################################################

Linux 4.14.50-v7+ (raspberrypi) 	29/07/18 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          28.99    0.02    0.98    1.40    0.00   68.61

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           5.06       151.64       118.32     292699     228381

              total        used        free      shared  buff/cache   available
Mem:           927M         66M        816M        1.2M         44M        814M
Swap:           99M         81M         18M

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	83548	-2

Architecture:          armv7l
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    1
Core(s) per socket:    4
Socket(s):             1
Model:                 4
Model name:            ARMv7 Processor rev 4 (v7l)
CPU max MHz:           1400.0000
CPU min MHz:           600.0000
BogoMIPS:              89.60
Flags:                 half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32
