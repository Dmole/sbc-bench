sbc-bench v0.4 -- Sun, 29 Jul 2018 17:20:29 +0000

Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 9.4 (stretch)
Release:	9.4
Codename:	stretch
Architecture:	armhf

Raspberry Pi ThreadX version:
Jun  7 2018 15:31:38 
Copyright (c) 2012 Broadcom
version 4800f08a139d6ca1c5ecbee345ea6682e2160881 (clean) (release)

ThreadX configuration (/boot/config.txt):
disable_overscan=1
arm_freq=1570
over_voltage=4
core_freq=500
gpu_freq=500
sdram_freq=510
over_voltage_sdram=2
dtparam=audio=on

Uptime: 17:20:30 up 17 min,  1 user,  load average: 1.16, 1.09, 0.60

Linux 4.14.50-v7+ (raspberrypi) 	29/07/18 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           8.91    0.00    1.09    2.26    0.00   87.73

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           9.72       263.63       177.00     282895     189937

              total        used        free      shared  buff/cache   available
Mem:           927M        112M        403M         13M        410M        746M
Swap:           99M          0B         99M

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	0	-2

##########################################################################

Checking cpufreq OPP:

Cpufreq OPP:  600    ThreadX:  600    Measured: 583.943/586.214/581.094
Cpufreq OPP: 1570    ThreadX: 1200    Measured: 1186.900/1187.992/1186.941

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1203.1 MB/s (3.2%)
 C copy backwards (32 byte blocks)                    :   1206.9 MB/s (0.1%)
 C copy backwards (64 byte blocks)                    :   1216.6 MB/s (0.1%)
 C copy                                               :   1208.1 MB/s (0.2%)
 C copy prefetched (32 bytes step)                    :   1224.6 MB/s
 C copy prefetched (64 bytes step)                    :   1225.7 MB/s (0.1%)
 C 2-pass copy                                        :   1026.9 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1053.4 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   1053.7 MB/s (1.3%)
 C fill                                               :   1792.1 MB/s (0.2%)
 C fill (shuffle within 16 byte blocks)               :   1791.6 MB/s (0.2%)
 C fill (shuffle within 32 byte blocks)               :   1792.5 MB/s (0.2%)
 C fill (shuffle within 64 byte blocks)               :   1791.9 MB/s (0.2%)
 ---
 standard memcpy                                      :   1227.2 MB/s (0.1%)
 standard memset                                      :   1787.2 MB/s
 ---
 NEON read                                            :   2163.0 MB/s (16.7%)
 NEON read prefetched (32 bytes step)                 :   2450.9 MB/s (0.4%)
 NEON read prefetched (64 bytes step)                 :   2447.9 MB/s (1.5%)
 NEON read 2 data streams                             :   1921.3 MB/s (0.1%)
 NEON read 2 data streams prefetched (32 bytes step)  :   2122.4 MB/s (0.1%)
 NEON read 2 data streams prefetched (64 bytes step)  :   2097.1 MB/s
 NEON copy                                            :   1208.8 MB/s (0.4%)
 NEON copy prefetched (32 bytes step)                 :   1233.6 MB/s
 NEON copy prefetched (64 bytes step)                 :   1232.6 MB/s
 NEON unrolled copy                                   :   1212.3 MB/s (0.1%)
 NEON unrolled copy prefetched (32 bytes step)        :   1232.6 MB/s (0.6%)
 NEON unrolled copy prefetched (64 bytes step)        :   1232.1 MB/s (1.2%)
 NEON copy backwards                                  :   1215.6 MB/s (0.3%)
 NEON copy backwards prefetched (32 bytes step)       :   1232.7 MB/s (0.1%)
 NEON copy backwards prefetched (64 bytes step)       :   1231.8 MB/s
 NEON 2-pass copy                                     :   1040.8 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1062.5 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   1073.4 MB/s
 NEON unrolled 2-pass copy                            :   1024.3 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1064.5 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1067.0 MB/s
 NEON fill                                            :   1793.7 MB/s (0.2%)
 NEON fill backwards                                  :   1792.5 MB/s
 VFP copy                                             :   1211.2 MB/s (1.1%)
 VFP 2-pass copy                                      :   1020.1 MB/s (0.2%)
 ARM fill (STRD)                                      :   1790.1 MB/s (0.2%)
 ARM fill (STM with 8 registers)                      :   1793.2 MB/s (0.2%)
 ARM fill (STM with 4 registers)                      :   1792.5 MB/s (0.4%)
 ARM copy prefetched (incr pld)                       :   1230.7 MB/s
 ARM copy prefetched (wrap pld)                       :   1228.4 MB/s (0.1%)
 ARM 2-pass copy prefetched (incr pld)                :   1059.4 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :   1054.5 MB/s

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     69.3 MB/s
 NEON copy (from framebuffer)                         :     66.9 MB/s
 NEON 2-pass copy (from framebuffer)                  :     66.8 MB/s
 NEON unrolled copy (from framebuffer)                :     67.4 MB/s (0.4%)
 NEON 2-pass unrolled copy (from framebuffer)         :     66.5 MB/s
 VFP copy (from framebuffer)                          :    404.7 MB/s
 VFP 2-pass copy (from framebuffer)                   :    374.3 MB/s
 ARM copy (from framebuffer)                          :    209.3 MB/s (0.2%)
 ARM 2-pass copy (from framebuffer)                   :    222.4 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    5.4 ns          /     9.2 ns 
    131072 :    8.2 ns          /    13.0 ns 
    262144 :    9.7 ns          /    14.8 ns 
    524288 :   15.6 ns          /    25.1 ns 
   1048576 :   83.6 ns          /   129.6 ns 
   2097152 :  120.2 ns          /   166.4 ns 
   4194304 :  143.7 ns          /   187.0 ns 
   8388608 :  155.9 ns          /   196.2 ns 
  16777216 :  163.5 ns          /   202.3 ns 
  33554432 :  168.6 ns          /   206.6 ns 
  67108864 :  171.6 ns          /   209.3 ns 

##########################################################################

OpenSSL (version 1.1.0f, built on 25 May 2017)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      30523.86k    38819.78k    44861.18k    47951.87k    48646.83k    48676.86k
aes-128-cbc      30553.23k    41643.63k    46294.36k    47598.25k    47783.94k    47950.51k
aes-192-cbc      27694.22k    36458.41k    40087.72k    41062.40k    41224.87k    41385.98k
aes-192-cbc      27719.81k    36599.30k    39942.83k    41063.08k    41366.87k    41243.99k
aes-256-cbc      25528.73k    32838.19k    35489.62k    36386.82k    36618.24k    36629.16k
aes-256-cbc      25413.10k    32836.31k    35617.71k    36262.23k    36615.51k    36612.78k

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1014  1091  1117  1115  1096  1120  1116  1115  1118

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        597   100    581    581  |      13821   100   1180   1179
23:        586   100    597    597  |      13503   100   1168   1168
24:        546   100    588    588  |      11250   100    988    988
25:        444    99    512    507  |      12772   100   1137   1137
----------------------------------  | ------------------------------
Avr:             100    570    568  |              100   1118   1118
Tot:             100    844    843

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1131  1139  1196  1199  1197  1199  1195  1198  1199

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1646   290    551   1602  |      53178   372   1221   4537
23:       1637   297    562   1668  |      51782   370   1211   4480
24:       1825   338    581   1963  |      50488   370   1198   4432
25:       1771   343    589   2022  |      47663   362   1173   4242
----------------------------------  | ------------------------------
Avr:             317    571   1814  |              368   1201   4423
Tot:             343    886   3118

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1198  1199  1198  1199  1198  1196  1199  1199  1199

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1854   322    560   1804  |      53163   371   1223   4536
23:       1829   329    567   1864  |      51724   370   1211   4475
24:       1596   300    571   1716  |      50557   370   1199   4438
25:       1580   309    583   1804  |      48616   368   1175   4327
----------------------------------  | ------------------------------
Avr:             315    570   1797  |              370   1202   4444
Tot:             342    886   3121

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_GB.UTF-8,Utf16=on,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1197  1198  1199  1198  1198  1199  1198  1198  1199

RAM size:     927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1667   294    551   1622  |      53114   371   1222   4532
23:       1819   327    567   1854  |      51294   368   1205   4438
24:       1798   334    579   1934  |      50570   370   1199   4439
25:       1763   342    588   2013  |      48391   367   1175   4307
----------------------------------  | ------------------------------
Avr:             324    571   1856  |              369   1200   4429
Tot:             347    886   3142

Compression: 1814,1797,1856
Decompression: 4423,4444,4429
Total: 3118,3121,3142

##########################################################################

Testing clockspeeds again. System health now:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:40:04: 1570/1200MHz  3.41  90%   1%  88%   0%   0%   0%  75.2°C  1.3312V

Checking cpufreq OPP:

Cpufreq OPP:  600    ThreadX:  600    Measured: 571.747/597.418/563.326
Cpufreq OPP: 1570    ThreadX: 1200    Measured: 1187.541/1187.787/1188.620

##########################################################################

System health while running tinymembench:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:20:31: 1570/1200MHz  1.16  12%   1%   8%   0%   2%   0%  61.2°C  1.3312V
17:21:32: 1570/1200MHz  1.17  27%   0%  26%   0%   0%   0%  64.5°C  1.3312V
17:22:32: 1570/1200MHz  1.23  27%   0%  27%   0%   0%   0%  64.5°C  1.3312V
17:23:32: 1570/1200MHz  1.14  26%   0%  26%   0%   0%   0%  64.5°C  1.3312V
17:24:32: 1570/1200MHz  1.08  26%   0%  26%   0%   0%   0%  64.5°C  1.3312V
17:25:32: 1570/1200MHz  1.15  26%   0%  26%   0%   0%   0%  62.8°C  1.3312V
17:26:32: 1570/1200MHz  1.13  25%   0%  25%   0%   0%   0%  62.8°C  1.3312V
17:27:32: 1570/1200MHz  1.13  25%   0%  25%   0%   0%   0%  62.3°C  1.3312V

System health while running OpenSSL benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:28:28: 1570/1200MHz  1.05  16%   0%  14%   0%   1%   0%  62.3°C  1.3312V
17:28:38: 1570/1200MHz  1.04  26%   0%  25%   0%   0%   0%  63.4°C  1.3312V
17:28:48: 1570/1200MHz  1.03  25%   0%  25%   0%   0%   0%  62.8°C  1.3312V
17:28:58: 1570/1200MHz  1.03  25%   0%  25%   0%   0%   0%  63.4°C  1.3312V
17:29:08: 1570/1200MHz  1.02  25%   0%  25%   0%   0%   0%  63.4°C  1.3312V
17:29:18: 1570/1200MHz  1.02  25%   0%  25%   0%   0%   0%  64.5°C  1.3312V
17:29:28: 1570/1200MHz  1.02  26%   0%  25%   0%   0%   0%  64.5°C  1.3312V
17:29:38: 1570/1200MHz  1.09  26%   0%  25%   0%   0%   0%  64.5°C  1.3312V
17:29:48: 1570/1200MHz  1.08  25%   0%  25%   0%   0%   0%  63.9°C  1.3312V
17:29:58: 1570/1200MHz  1.07  25%   0%  25%   0%   0%   0%  63.4°C  1.3312V
17:30:08: 1570/1200MHz  1.06  25%   0%  25%   0%   0%   0%  64.5°C  1.3312V

System health while running 7-zip single core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:30:16: 1570/1200MHz  1.05  17%   0%  14%   0%   1%   0%  64.5°C  1.3312V
17:30:31: 1570/1200MHz  1.39  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:30:46: 1570/1200MHz  2.04  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:31:01: 1570/1200MHz  2.18  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:31:16: 1570/1200MHz  2.14  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:31:31: 1570/1200MHz  2.56  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:31:46: 1570/1200MHz  2.67  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:32:01: 1570/1200MHz  2.60  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:32:16: 1570/1200MHz  2.68  25%   0%  24%   0%   0%   0%  63.4°C  1.3312V
17:32:31: 1570/1200MHz  2.84  35%   2%  31%   0%   0%   0%  63.9°C  1.3312V
17:32:47: 1570/1200MHz  3.32  38%   0%  36%   1%   0%   0%  64.5°C  1.3312V
17:33:02: 1570/1200MHz  3.18  40%   1%  37%   1%   0%   0%  65.0°C  1.3312V
17:33:17: 1570/1200MHz  3.15  40%   0%  37%   2%   0%   0%  65.0°C  1.3312V
17:33:32: 1570/1200MHz  3.42  44%   1%  39%   4%   0%   0%  65.0°C  1.3312V
17:33:47: 1570/1200MHz  3.49  43%   1%  37%   4%   0%   0%  65.5°C  1.3312V
17:34:02: 1570/1200MHz  3.62  42%   1%  38%   1%   0%   0%  65.5°C  1.3312V
17:34:17: 1570/1200MHz  3.40  41%   1%  39%   1%   0%   0%  65.5°C  1.3312V
17:34:32: 1570/1200MHz  3.47  43%   1%  38%   2%   0%   0%  66.1°C  1.3312V
17:34:47: 1570/1200MHz  3.50  31%   1%  29%   0%   0%   0%  64.5°C  1.3312V
17:35:07: 1570/1200MHz  3.40  34%   0%  24%   0%   9%   0%  64.5°C  1.3312V
17:35:22: 1570/1200MHz  4.29  49%   1%  21%   0%  25%   0%  64.5°C  1.3312V

System health while running 7-zip multi core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp   VCore
17:35:30: 1570/1200MHz  4.26  20%   0%  17%   0%   1%   0%  64.5°C  1.3312V
17:36:00: 1570/1200MHz  3.92  72%   1%  71%   0%   0%   0%  69.3°C  1.3312V
17:36:30: 1570/1200MHz  3.56  82%   1%  81%   0%   0%   0%  70.9°C  1.3312V
17:37:01: 1570/1200MHz  3.88  89%   1%  87%   0%   0%   0%  73.1°C  1.3312V
17:37:31: 1570/1200MHz  3.63  75%   1%  74%   0%   0%   0%  72.5°C  1.3312V
17:38:01: 1570/1200MHz  3.37  75%   1%  73%   0%   0%   0%  73.1°C  1.3312V
17:38:31: 1570/1200MHz  3.56  82%   1%  80%   0%   0%   0%  72.5°C  1.3312V
17:39:03: 1570/1200MHz  3.41  73%   1%  72%   0%   0%   0%  74.1°C  1.3312V
17:39:33: 1570/1200MHz  3.32  79%   1%  77%   0%   0%   0%  74.1°C  1.3312V
17:40:04: 1570/1200MHz  3.41  90%   1%  88%   0%   0%   0%  75.2°C  1.3312V

##########################################################################

Linux 4.14.50-v7+ (raspberrypi) 	29/07/18 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          25.05    0.16    0.99    1.35    0.00   72.45

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           5.37       147.31       116.45     331923     262405

              total        used        free      shared  buff/cache   available
Mem:           927M         67M        818M        2.0M         41M        813M
Swap:           99M         67M         32M

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	69376	-2

Architecture:          armv7l
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    1
Core(s) per socket:    4
Socket(s):             1
Model:                 4
Model name:            ARMv7 Processor rev 4 (v7l)
CPU max MHz:           1570.0000
CPU min MHz:           600.0000
BogoMIPS:              100.48
Flags:                 half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32
