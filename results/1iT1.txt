sbc-bench v0.4.6  (Wed, 01 Aug 2018 03:51:21 +0000)

Distributor ID:	Debian
Description:	Debian GNU/Linux 9.5 (stretch)
Release:	9.5
Codename:	stretch

Armbian release info:
BOARD=nanopik2-s905
BOARD_NAME="Nanopi K2"
BOARDFAMILY=meson64
VERSION=5.53
LINUXFAMILY=meson64
BRANCH=default
ARCH=arm64
IMAGE_TYPE=stable
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image

Uptime: 03:51:22 up 7 min,  1 user,  load average: 1.05, 0.64, 0.28

Linux 4.14.56-meson64 (nanopik2) 	08/01/2018 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          12.47    0.01    1.91    0.78    0.00   84.83

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          25.58       463.27      1619.69     208005     727224
zram0             1.12         1.63         2.86        732       1284
zram1             0.67         2.65         0.01       1192          4
zram2             0.67         2.65         0.01       1192          4
zram3             0.67         2.65         0.01       1192          4
zram4             0.67         2.65         0.01       1192          4

              total        used        free      shared  buff/cache   available
Mem:           1.9G         66M        1.5G        3.0M        389M        1.8G
Swap:          988M          0B        988M

Filename				Type		Size	Used	Priority
/dev/zram1                             	partition	253076	0	5
/dev/zram2                             	partition	253076	0	5
/dev/zram3                             	partition	253076	0	5
/dev/zram4                             	partition	253076	0	5

##########################################################################

Checking cpufreq OPP:

Cpufreq OPP:  100    Measured: 59.180/59.809/59.271
Cpufreq OPP:  250    Measured: 208.666/208.536/208.608
Cpufreq OPP:  500    Measured: 457.369/456.712/456.855
Cpufreq OPP:  667    Measured: 621.810/622.367/622.235
Cpufreq OPP: 1000    Measured: 951.608/951.236/951.641
Cpufreq OPP: 1200    Measured: 1148.028/1148.896/1148.692
Cpufreq OPP: 1296    Measured: 1244.045/1244.105/1244.330
Cpufreq OPP: 1416    Measured: 1364.260/1363.180/1363.051
Cpufreq OPP: 1536    Measured: 1480.799/1481.155/1480.714
Cpufreq OPP: 1752    Measured: 1481.104/1480.867/1480.408
Cpufreq OPP: 2016    Measured: 1481.053/1481.495/1480.476

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1580.6 MB/s (0.7%)
 C copy backwards (32 byte blocks)                    :   1593.9 MB/s (0.5%)
 C copy backwards (64 byte blocks)                    :   1594.5 MB/s (0.5%)
 C copy                                               :   1578.0 MB/s (0.6%)
 C copy prefetched (32 bytes step)                    :   1171.0 MB/s
 C copy prefetched (64 bytes step)                    :   1292.7 MB/s
 C 2-pass copy                                        :   1458.8 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1042.2 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    896.9 MB/s
 C fill                                               :   3870.1 MB/s
 C fill (shuffle within 16 byte blocks)               :   3871.0 MB/s
 C fill (shuffle within 32 byte blocks)               :   3870.1 MB/s (0.2%)
 C fill (shuffle within 64 byte blocks)               :   3870.9 MB/s (0.2%)
 ---
 standard memcpy                                      :   1655.6 MB/s (0.3%)
 standard memset                                      :   3871.9 MB/s
 ---
 NEON LDP/STP copy                                    :   1628.9 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1032.0 MB/s (0.4%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1365.2 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1914.6 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1916.0 MB/s (0.2%)
 NEON LD1/ST1 copy                                    :   1627.9 MB/s (0.2%)
 NEON STP fill                                        :   3872.0 MB/s
 NEON STNP fill                                       :   2416.6 MB/s
 ARM LDP/STP copy                                     :   1623.8 MB/s
 ARM STP fill                                         :   3870.9 MB/s
 ARM STNP fill                                        :   2430.8 MB/s (0.2%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :    216.0 MB/s (0.3%)
 NEON LDP/STP 2-pass copy (from framebuffer)          :    212.8 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :     57.7 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :     57.2 MB/s
 ARM LDP/STP copy (from framebuffer)                  :    112.9 MB/s
 ARM LDP/STP 2-pass copy (from framebuffer)           :    111.9 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    4.5 ns          /     7.6 ns 
    131072 :    6.9 ns          /    10.6 ns 
    262144 :    8.1 ns          /    11.7 ns 
    524288 :   14.3 ns          /    20.9 ns 
   1048576 :   77.2 ns          /   117.7 ns 
   2097152 :  107.8 ns          /   147.4 ns 
   4194304 :  129.1 ns          /   165.9 ns 
   8388608 :  140.2 ns          /   173.5 ns 
  16777216 :  147.9 ns          /   179.7 ns 
  33554432 :  153.5 ns          /   184.1 ns 
  67108864 :  157.1 ns          /   188.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    4.5 ns          /     7.6 ns 
    131072 :    6.9 ns          /    10.5 ns 
    262144 :    8.1 ns          /    11.7 ns 
    524288 :   14.3 ns          /    20.7 ns 
   1048576 :   76.7 ns          /   117.3 ns 
   2097152 :  106.5 ns          /   146.5 ns 
   4194304 :  121.4 ns          /   156.3 ns 
   8388608 :  128.5 ns          /   160.1 ns 
  16777216 :  132.1 ns          /   158.0 ns 
  33554432 :  134.0 ns          /   160.1 ns 
  67108864 :  135.1 ns          /   161.5 ns 

##########################################################################

OpenSSL (version 1.1.0f, built on 25 May 2017)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      43698.13k    60922.73k    68095.40k    70148.78k    70765.23k    70757.03k
aes-128-cbc      42351.29k    59077.03k    66016.43k    68022.61k    68537.00k    68583.42k
aes-192-cbc      38940.22k    52282.47k    57490.69k    58957.48k    59356.50k    59315.54k
aes-192-cbc      37777.80k    50727.04k    55740.07k    57179.48k    57597.95k    57551.53k
aes-256-cbc      35240.40k    45816.23k    49748.05k    50850.13k    51153.58k    51134.46k
aes-256-cbc      34175.30k    44439.91k    48259.16k    49291.26k    49624.41k    49599.83k

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1514  1520  1524  1524  1524  1524  1524  1524  1524

RAM size:    1977 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        798   100    777    777  |      16520   100   1409   1409
23:        778   100    793    793  |      16153   100   1398   1398
24:        752   100    809    809  |      15770   100   1384   1384
25:        723   100    826    826  |      15280   100   1360   1360
----------------------------------  | ------------------------------
Avr:             100    801    801  |              100   1388   1388
Tot:             100   1095   1095

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1514  1519  1524  1524  1524  1524  1524  1524  1524

RAM size:    1977 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2375   329    703   2311  |      63654   385   1411   5431
23:       2246   321    713   2289  |      61689   382   1397   5338
24:       2327   343    729   2503  |      60811   386   1384   5338
25:       2292   356    735   2617  |      58582   384   1357   5214
----------------------------------  | ------------------------------
Avr:             337    720   2430  |              384   1387   5330
Tot:             361   1054   3880

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1524  1523  1525  1525  1525  1525  1525  1525  1525

RAM size:    1977 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2276   310    714   2214  |      63521   384   1410   5419
23:       2237   317    720   2280  |      62174   385   1398   5380
24:       2228   329    728   2396  |      60562   384   1384   5317
25:       2198   342    734   2511  |      58081   382   1354   5169
----------------------------------  | ------------------------------
Avr:             325    724   2350  |              384   1386   5321
Tot:             354   1055   3836

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1477  1479  1479  1480  1479  1479  1479  1480  1480

RAM size:    1977 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2386   329    706   2322  |      63736   386   1410   5438
23:       2233   319    714   2275  |      62102   384   1398   5373
24:       2219   328    727   2387  |      60582   385   1383   5318
25:       2173   338    735   2482  |      58573   384   1357   5213
----------------------------------  | ------------------------------
Avr:             328    721   2366  |              385   1387   5336
Tot:             357   1054   3851

Compression: 2430,2350,2366
Decompression: 5330,5321,5336
Total: 3880,3836,3851

##########################################################################

** cpuminer-multi 1.3.3 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2018-08-01 04:09:25] 4 miner threads started, using 'scrypt' algorithm.
[2018-08-01 04:09:25] CPU #2: 1.16 kH/s
[2018-08-01 04:09:25] CPU #3: 1.16 kH/s
[2018-08-01 04:09:25] CPU #0: 1.12 kH/s
[2018-08-01 04:09:25] CPU #1: 1.12 kH/s
[2018-08-01 04:09:30] Total: 4.61 kH/s
[2018-08-01 04:09:35] CPU #0: 1.16 kH/s
[2018-08-01 04:09:35] CPU #3: 1.17 kH/s
[2018-08-01 04:09:35] Total: 4.62 kH/s
[2018-08-01 04:09:35] CPU #2: 1.16 kH/s
[2018-08-01 04:09:35] CPU #1: 1.13 kH/s
[2018-08-01 04:09:40] Total: 4.62 kH/s
[2018-08-01 04:09:45] CPU #0: 1.16 kH/s
[2018-08-01 04:09:45] CPU #3: 1.17 kH/s
[2018-08-01 04:09:45] Total: 4.60 kH/s
[2018-08-01 04:09:45] CPU #2: 1.16 kH/s
[2018-08-01 04:09:45] CPU #1: 1.13 kH/s
[2018-08-01 04:09:50] Total: 4.62 kH/s
[2018-08-01 04:09:55] CPU #0: 1.16 kH/s
[2018-08-01 04:09:55] CPU #3: 1.17 kH/s
[2018-08-01 04:09:55] Total: 4.61 kH/s
[2018-08-01 04:09:55] CPU #2: 1.16 kH/s
[2018-08-01 04:09:55] CPU #1: 1.11 kH/s
[2018-08-01 04:10:00] Total: 4.60 kH/s
[2018-08-01 04:10:05] CPU #0: 1.16 kH/s
[2018-08-01 04:10:05] CPU #3: 1.17 kH/s
[2018-08-01 04:10:05] Total: 4.62 kH/s
[2018-08-01 04:10:05] CPU #2: 1.16 kH/s
[2018-08-01 04:10:05] CPU #1: 1.11 kH/s
[2018-08-01 04:10:10] Total: 4.61 kH/s
[2018-08-01 04:10:15] CPU #0: 1.16 kH/s
[2018-08-01 04:10:15] CPU #3: 1.17 kH/s
[2018-08-01 04:10:15] Total: 4.61 kH/s
[2018-08-01 04:10:15] CPU #2: 1.16 kH/s
[2018-08-01 04:10:15] CPU #1: 1.12 kH/s
[2018-08-01 04:10:20] Total: 4.61 kH/s
[2018-08-01 04:10:25] CPU #0: 1.16 kH/s
[2018-08-01 04:10:25] CPU #3: 1.17 kH/s
[2018-08-01 04:10:25] Total: 4.60 kH/s
[2018-08-01 04:10:25] CPU #2: 1.16 kH/s
[2018-08-01 04:10:25] CPU #1: 1.12 kH/s
[2018-08-01 04:10:30] Total: 4.62 kH/s
[2018-08-01 04:10:35] CPU #0: 1.16 kH/s
[2018-08-01 04:10:35] CPU #3: 1.17 kH/s
[2018-08-01 04:10:35] Total: 4.62 kH/s
[2018-08-01 04:10:35] CPU #2: 1.16 kH/s
[2018-08-01 04:10:35] CPU #1: 1.11 kH/s
[2018-08-01 04:10:40] Total: 4.60 kH/s
[2018-08-01 04:10:45] CPU #0: 1.16 kH/s
[2018-08-01 04:10:45] CPU #3: 1.17 kH/s
[2018-08-01 04:10:45] Total: 4.62 kH/s
[2018-08-01 04:10:45] CPU #2: 1.16 kH/s
[2018-08-01 04:10:45] CPU #1: 1.12 kH/s
[2018-08-01 04:10:50] Total: 4.61 kH/s
[2018-08-01 04:10:55] CPU #0: 1.16 kH/s
[2018-08-01 04:10:55] CPU #3: 1.17 kH/s
[2018-08-01 04:10:55] Total: 4.61 kH/s
[2018-08-01 04:10:55] CPU #2: 1.16 kH/s
[2018-08-01 04:10:55] CPU #1: 1.12 kH/s
[2018-08-01 04:11:00] Total: 4.61 kH/s
[2018-08-01 04:11:05] CPU #0: 1.16 kH/s
[2018-08-01 04:11:05] CPU #3: 1.17 kH/s
[2018-08-01 04:11:05] Total: 4.60 kH/s
[2018-08-01 04:11:05] CPU #2: 1.16 kH/s
[2018-08-01 04:11:05] CPU #1: 1.13 kH/s
[2018-08-01 04:11:10] Total: 4.62 kH/s
[2018-08-01 04:11:15] CPU #0: 1.16 kH/s
[2018-08-01 04:11:15] CPU #3: 1.17 kH/s
[2018-08-01 04:11:15] Total: 4.62 kH/s
[2018-08-01 04:11:15] CPU #2: 1.16 kH/s
[2018-08-01 04:11:15] CPU #1: 1.11 kH/s
[2018-08-01 04:11:20] Total: 4.60 kH/s
[2018-08-01 04:11:25] CPU #0: 1.16 kH/s
[2018-08-01 04:11:25] CPU #3: 1.17 kH/s
[2018-08-01 04:11:25] Total: 4.62 kH/s
[2018-08-01 04:11:25] CPU #2: 1.16 kH/s
[2018-08-01 04:11:25] CPU #1: 1.12 kH/s
[2018-08-01 04:11:30] Total: 4.61 kH/s
[2018-08-01 04:11:35] CPU #0: 1.16 kH/s
[2018-08-01 04:11:35] CPU #3: 1.17 kH/s
[2018-08-01 04:11:35] Total: 4.61 kH/s
[2018-08-01 04:11:35] CPU #2: 1.16 kH/s
[2018-08-01 04:11:35] CPU #1: 1.13 kH/s
[2018-08-01 04:11:40] Total: 4.62 kH/s
[2018-08-01 04:11:45] CPU #0: 1.16 kH/s
[2018-08-01 04:11:45] CPU #3: 1.17 kH/s
[2018-08-01 04:11:45] Total: 4.60 kH/s
[2018-08-01 04:11:45] CPU #2: 1.16 kH/s
[2018-08-01 04:11:45] CPU #1: 1.12 kH/s
[2018-08-01 04:11:50] Total: 4.62 kH/s
[2018-08-01 04:11:55] CPU #0: 1.16 kH/s
[2018-08-01 04:11:55] CPU #3: 1.17 kH/s
[2018-08-01 04:11:55] Total: 4.61 kH/s
[2018-08-01 04:11:55] CPU #2: 1.16 kH/s
[2018-08-01 04:11:55] CPU #1: 1.10 kH/s
[2018-08-01 04:12:00] Total: 4.60 kH/s
[2018-08-01 04:12:05] CPU #0: 1.16 kH/s
[2018-08-01 04:12:05] CPU #3: 1.17 kH/s
[2018-08-01 04:12:05] Total: 4.62 kH/s
[2018-08-01 04:12:05] CPU #2: 1.16 kH/s
[2018-08-01 04:12:05] CPU #1: 1.12 kH/s
[2018-08-01 04:12:10] Total: 4.61 kH/s
[2018-08-01 04:12:15] CPU #0: 1.16 kH/s
[2018-08-01 04:12:15] CPU #3: 1.17 kH/s
[2018-08-01 04:12:15] Total: 4.61 kH/s
[2018-08-01 04:12:15] CPU #2: 1.16 kH/s
[2018-08-01 04:12:15] CPU #1: 1.12 kH/s
[2018-08-01 04:12:20] Total: 4.62 kH/s
[2018-08-01 04:12:25] CPU #0: 1.16 kH/s
[2018-08-01 04:12:25] CPU #3: 1.17 kH/s
[2018-08-01 04:12:25] Total: 4.60 kH/s
[2018-08-01 04:12:25] CPU #2: 1.16 kH/s
[2018-08-01 04:12:25] CPU #1: 1.13 kH/s
[2018-08-01 04:12:30] Total: 4.62 kH/s
[2018-08-01 04:12:35] CPU #0: 1.16 kH/s
[2018-08-01 04:12:35] CPU #3: 1.17 kH/s
[2018-08-01 04:12:35] Total: 4.62 kH/s
[2018-08-01 04:12:35] CPU #2: 1.16 kH/s
[2018-08-01 04:12:35] CPU #1: 1.11 kH/s
[2018-08-01 04:12:40] Total: 4.60 kH/s
[2018-08-01 04:12:45] CPU #0: 1.16 kH/s
[2018-08-01 04:12:45] CPU #3: 1.17 kH/s
[2018-08-01 04:12:45] Total: 4.62 kH/s
[2018-08-01 04:12:45] CPU #2: 1.16 kH/s
[2018-08-01 04:12:45] CPU #1: 1.12 kH/s
[2018-08-01 04:12:50] Total: 4.61 kH/s
[2018-08-01 04:12:55] CPU #0: 1.16 kH/s
[2018-08-01 04:12:55] CPU #3: 1.17 kH/s
[2018-08-01 04:12:55] Total: 4.61 kH/s
[2018-08-01 04:12:55] CPU #2: 1.16 kH/s
[2018-08-01 04:12:55] CPU #1: 1.13 kH/s
[2018-08-01 04:13:00] Total: 4.61 kH/s
[2018-08-01 04:13:05] CPU #0: 1.16 kH/s
[2018-08-01 04:13:05] CPU #3: 1.17 kH/s
[2018-08-01 04:13:05] Total: 4.60 kH/s
[2018-08-01 04:13:05] CPU #2: 1.16 kH/s
[2018-08-01 04:13:05] CPU #1: 1.12 kH/s
[2018-08-01 04:13:10] Total: 4.62 kH/s
[2018-08-01 04:13:15] CPU #0: 1.16 kH/s
[2018-08-01 04:13:15] CPU #3: 1.17 kH/s
[2018-08-01 04:13:15] Total: 4.62 kH/s
[2018-08-01 04:13:15] CPU #2: 1.16 kH/s
[2018-08-01 04:13:15] CPU #1: 1.11 kH/s
[2018-08-01 04:13:20] Total: 4.60 kH/s
[2018-08-01 04:13:25] CPU #0: 1.16 kH/s
[2018-08-01 04:13:25] CPU #3: 1.17 kH/s
[2018-08-01 04:13:25] Total: 4.62 kH/s
[2018-08-01 04:13:25] CPU #2: 1.16 kH/s
[2018-08-01 04:13:25] CPU #1: 1.12 kH/s
[2018-08-01 04:13:30] Total: 4.61 kH/s
[2018-08-01 04:13:35] CPU #0: 1.16 kH/s
[2018-08-01 04:13:35] CPU #3: 1.17 kH/s
[2018-08-01 04:13:35] Total: 4.61 kH/s
[2018-08-01 04:13:35] CPU #2: 1.16 kH/s
[2018-08-01 04:13:35] CPU #1: 1.13 kH/s
[2018-08-01 04:13:40] Total: 4.62 kH/s
[2018-08-01 04:13:45] CPU #0: 1.16 kH/s
[2018-08-01 04:13:45] CPU #3: 1.17 kH/s
[2018-08-01 04:13:45] Total: 4.60 kH/s
[2018-08-01 04:13:45] CPU #2: 1.16 kH/s
[2018-08-01 04:13:45] CPU #1: 1.12 kH/s
[2018-08-01 04:13:50] Total: 4.62 kH/s
[2018-08-01 04:13:55] CPU #0: 1.16 kH/s
[2018-08-01 04:13:55] CPU #3: 1.17 kH/s
[2018-08-01 04:13:55] Total: 4.62 kH/s
[2018-08-01 04:13:55] CPU #2: 1.16 kH/s
[2018-08-01 04:13:55] CPU #1: 1.11 kH/s
[2018-08-01 04:14:00] Total: 4.60 kH/s
[2018-08-01 04:14:05] CPU #0: 1.16 kH/s
[2018-08-01 04:14:05] CPU #3: 1.17 kH/s
[2018-08-01 04:14:05] Total: 4.62 kH/s
[2018-08-01 04:14:05] CPU #2: 1.16 kH/s
[2018-08-01 04:14:05] CPU #1: 1.12 kH/s
[2018-08-01 04:14:10] Total: 4.61 kH/s
[2018-08-01 04:14:15] CPU #0: 1.16 kH/s
[2018-08-01 04:14:15] CPU #3: 1.17 kH/s
[2018-08-01 04:14:15] Total: 4.61 kH/s
[2018-08-01 04:14:15] CPU #2: 1.16 kH/s
[2018-08-01 04:14:15] CPU #1: 1.12 kH/s
[2018-08-01 04:14:20] Total: 4.62 kH/s

Total Scores: 4.62,4.61,4.60

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:14:20: 2016MHz  4.21 100%   0%  99%   0%   0%   0%  60.0°C

Checking cpufreq OPP:

Cpufreq OPP:  100    Measured: 58.702/58.964/58.974
Cpufreq OPP:  250    Measured: 208.032/207.875/208.025
Cpufreq OPP:  500    Measured: 456.303/456.436/456.628
Cpufreq OPP:  667    Measured: 621.533/622.308/621.723
Cpufreq OPP: 1000    Measured: 952.156/951.575/952.145
Cpufreq OPP: 1200    Measured: 1148.053/1148.692/1148.232
Cpufreq OPP: 1296    Measured: 1244.240/1243.311/1244.435
Cpufreq OPP: 1416    Measured: 1363.180/1362.547/1362.547
Cpufreq OPP: 1536    Measured: 1481.733/1481.546/1481.495
Cpufreq OPP: 1752    Measured: 1480.544/1480.340/1480.340
Cpufreq OPP: 2016    Measured: 1480.748/1481.461/1480.816

##########################################################################

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
03:51:29: 2016MHz  1.04  15%   1%  12%   0%   0%   0%  42.0°C
03:52:29: 2016MHz  1.01  25%   0%  25%   0%   0%   0%  48.0°C
03:53:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  45.0°C
03:54:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  43.0°C
03:55:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C
03:56:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C
03:57:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  43.0°C
03:58:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  43.0°C
03:59:29: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  43.0°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
03:59:45: 2016MHz  1.00  20%   0%  19%   0%   0%   0%  44.0°C
03:59:55: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C
04:00:05: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  45.0°C
04:00:15: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  46.0°C
04:00:25: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C
04:00:35: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  45.0°C
04:00:45: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  46.0°C
04:00:55: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  46.0°C
04:01:05: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  44.0°C
04:01:15: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  46.0°C
04:01:25: 2016MHz  1.00  25%   0%  25%   0%   0%   0%  46.0°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:01:33: 2016MHz  1.00  21%   0%  19%   0%   0%   0%  44.0°C
04:01:48: 2016MHz  1.38  25%   0%  24%   0%   0%   0%  43.0°C
04:02:03: 2016MHz  1.96  25%   0%  25%   0%   0%   0%  43.0°C
04:02:18: 2016MHz  2.12  25%   0%  24%   0%   0%   0%  43.0°C
04:02:33: 2016MHz  2.47  25%   0%  24%   0%   0%   0%  43.0°C
04:02:48: 2016MHz  2.65  25%   0%  24%   0%   0%   0%  43.0°C
04:03:03: 2016MHz  2.51  25%   0%  24%   0%   0%   0%  43.0°C
04:03:18: 2016MHz  2.54  25%   0%  24%   0%   0%   0%  43.0°C
04:03:33: 2016MHz  2.73  25%   0%  24%   0%   0%   0%  43.0°C
04:03:48: 2016MHz  2.71  25%   0%  24%   0%   0%   0%  43.0°C
04:04:04: 2016MHz  2.92  25%   0%  24%   0%   0%   0%  44.0°C
04:04:19: 2016MHz  2.95  25%   0%  24%   0%   0%   0%  43.0°C
04:04:34: 2016MHz  2.95  25%   0%  24%   0%   0%   0%  43.0°C
04:04:49: 2016MHz  2.98  25%   0%  24%   0%   0%   0%  43.0°C
04:05:04: 2016MHz  2.89  25%   0%  24%   0%   0%   0%  43.0°C
04:05:19: 2016MHz  2.86  25%   0%  24%   0%   0%   0%  43.0°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:05:32: 2016MHz  3.03  21%   0%  20%   0%   0%   0%  43.0°C
04:06:02: 2016MHz  3.48  78%   1%  77%   0%   0%   0%  53.0°C
04:06:32: 2016MHz  3.76  86%   1%  84%   0%   0%   0%  55.0°C
04:07:02: 2016MHz  3.76  84%   1%  82%   0%   0%   0%  54.0°C
04:07:32: 2016MHz  3.59  82%   1%  81%   0%   0%   0%  54.0°C
04:08:05: 2016MHz  3.85  86%   1%  85%   0%   0%   0%  56.0°C
04:08:36: 2016MHz  3.95  79%   1%  77%   0%   0%   0%  55.0°C
04:09:06: 2016MHz  4.06  82%   1%  81%   0%   0%   0%  55.0°C

System health while running cpuminer:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:09:26: 2016MHz  4.09  31%   0%  30%   0%   0%   0%  54.0°C
04:09:39: 2016MHz  4.08  99%   0%  99%   0%   0%   0%  59.0°C
04:09:53: 2016MHz  4.13 100%   0%  99%   0%   0%   0%  60.0°C
04:10:06: 2016MHz  4.17 100%   0%  99%   0%   0%   0%  60.0°C
04:10:19: 2016MHz  4.14 100%   0%  99%   0%   0%   0%  60.0°C
04:10:33: 2016MHz  4.18 100%   0%  99%   0%   0%   0%  60.0°C
04:10:46: 2016MHz  4.21 100%   0%  99%   0%   0%   0%  60.0°C
04:10:59: 2016MHz  4.17 100%   0%  99%   0%   0%   0%  60.0°C
04:11:13: 2016MHz  4.20 100%   0%  99%   0%   0%   0%  60.0°C
04:11:26: 2016MHz  4.29 100%   0%  99%   0%   0%   0%  60.0°C
04:11:40: 2016MHz  4.25 100%   0%  99%   0%   0%   0%  60.0°C
04:11:53: 2016MHz  4.26 100%   0%  99%   0%   0%   0%  61.0°C
04:12:06: 2016MHz  4.27 100%   0%  99%   0%   0%   0%  61.0°C
04:12:20: 2016MHz  4.23 100%   0%  99%   0%   0%   0%  60.0°C
04:12:33: 2016MHz  4.24 100%   0%  99%   0%   0%   0%  60.0°C
04:12:46: 2016MHz  4.26 100%   0%  99%   0%   0%   0%  60.0°C
04:13:00: 2016MHz  4.22 100%   0%  99%   0%   0%   0%  61.0°C
04:13:13: 2016MHz  4.24 100%   0%  99%   0%   0%   0%  61.0°C
04:13:26: 2016MHz  4.25 100%   0%  99%   0%   0%   0%  61.0°C
04:13:40: 2016MHz  4.21 100%   0%  99%   0%   0%   0%  60.0°C
04:13:53: 2016MHz  4.23 100%   0%  99%   0%   0%   0%  61.0°C
04:14:06: 2016MHz  4.25 100%   0%  99%   0%   0%   0%  61.0°C
04:14:20: 2016MHz  4.21 100%   0%  99%   0%   0%   0%  60.0°C

##########################################################################

Linux 4.14.56-meson64 (nanopik2) 	08/01/2018 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          41.51    0.02    0.78    0.19    0.00   57.51

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           6.30       113.70       395.98     209149     728420
zram0             0.33         0.40         0.92        732       1688
zram1             0.16         0.65         0.00       1192          4
zram2             0.16         0.65         0.00       1192          4
zram3             0.16         0.65         0.00       1192          4
zram4             0.16         0.65         0.00       1192          4

              total        used        free      shared  buff/cache   available
Mem:           1.9G         67M        1.5G        3.0M        390M        1.8G
Swap:          988M          0B        988M

Filename				Type		Size	Used	Priority
/dev/zram1                             	partition	253076	0	5
/dev/zram2                             	partition	253076	0	5
/dev/zram3                             	partition	253076	0	5
/dev/zram4                             	partition	253076	0	5

Architecture:          aarch64
Byte Order:            Little Endian
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    1
Core(s) per socket:    4
Socket(s):             1
Model:                 4
CPU max MHz:           2016.0000
CPU min MHz:           100.0000
BogoMIPS:              48.00
L1d cache:             unknown size
L1i cache:             unknown size
L2 cache:              unknown size
Flags:                 fp asimd evtstrm crc32 cpuid
