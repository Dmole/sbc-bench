Distributor ID:	Debian
Description:	Debian GNU/Linux 9.5 (stretch)
Release:	9.5
Codename:	stretch
Architecture:	armhf

Uptime: 14:32:16 up 8 min,  1 user,  load average: 0.15, 0.18, 0.14

Linux 4.4.132-1075-rockchip-ayufan-ga83beded8524 (rock64) 	07/27/18 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           1.23    0.00    1.01    1.69    0.00   96.06

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mtdblock0         0.05         0.22         0.00        108          0
mmcblk1          10.30       350.45        64.31     175956      32288

              total        used        free      shared  buff/cache   available
Mem:           1.9G         71M        1.6G         37M        227M        1.8G
Swap:            0B          0B          0B

Filename				Type		Size	Used	Priority

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1401.1 MB/s (0.7%)
 C copy backwards (32 byte blocks)                    :   1438.0 MB/s (1.2%)
 C copy backwards (64 byte blocks)                    :   1390.0 MB/s (0.6%)
 C copy                                               :   1371.1 MB/s (0.7%)
 C copy prefetched (32 bytes step)                    :   1535.9 MB/s (0.8%)
 C copy prefetched (64 bytes step)                    :   1517.2 MB/s (0.5%)
 C 2-pass copy                                        :   1537.6 MB/s (0.9%)
 C 2-pass copy prefetched (32 bytes step)             :   1658.4 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   1627.7 MB/s
 C fill                                               :   5665.1 MB/s
 C fill (shuffle within 16 byte blocks)               :   5665.6 MB/s (1.4%)
 C fill (shuffle within 32 byte blocks)               :   5663.4 MB/s
 C fill (shuffle within 64 byte blocks)               :   5665.0 MB/s (0.9%)
 ---
 standard memcpy                                      :   1428.0 MB/s
 standard memset                                      :   3622.0 MB/s (0.3%)
 ---
 NEON read                                            :   2733.9 MB/s (0.5%)
 NEON read prefetched (32 bytes step)                 :   4173.5 MB/s (2.7%)
 NEON read prefetched (64 bytes step)                 :   4394.4 MB/s (0.6%)
 NEON read 2 data streams                             :   2411.8 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :   2791.4 MB/s (1.2%)
 NEON read 2 data streams prefetched (64 bytes step)  :   2841.4 MB/s
 NEON copy                                            :   1456.1 MB/s (1.1%)
 NEON copy prefetched (32 bytes step)                 :   1511.0 MB/s (0.5%)
 NEON copy prefetched (64 bytes step)                 :   1511.2 MB/s (0.5%)
 NEON unrolled copy                                   :   1602.3 MB/s (0.2%)
 NEON unrolled copy prefetched (32 bytes step)        :   1890.7 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1889.9 MB/s (1.9%)
 NEON copy backwards                                  :   1510.4 MB/s
 NEON copy backwards prefetched (32 bytes step)       :   1566.3 MB/s (0.6%)
 NEON copy backwards prefetched (64 bytes step)       :   1561.0 MB/s (0.8%)
 NEON 2-pass copy                                     :   1751.5 MB/s (0.2%)
 NEON 2-pass copy prefetched (32 bytes step)          :   1807.9 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   1814.1 MB/s (1.1%)
 NEON unrolled 2-pass copy                            :   1635.5 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1547.4 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1691.4 MB/s (0.4%)
 NEON fill                                            :   5667.5 MB/s
 NEON fill backwards                                  :   5677.8 MB/s (0.9%)
 VFP copy                                             :   1578.0 MB/s (0.5%)
 VFP 2-pass copy                                      :   1727.9 MB/s (1.6%)
 ARM fill (STRD)                                      :   3622.3 MB/s (0.2%)
 ARM fill (STM with 8 registers)                      :   5662.4 MB/s (1.3%)
 ARM fill (STM with 4 registers)                      :   5308.2 MB/s
 ARM copy prefetched (incr pld)                       :   1508.0 MB/s
 ARM copy prefetched (wrap pld)                       :   1524.1 MB/s (0.5%)
 ARM 2-pass copy prefetched (incr pld)                :   1561.5 MB/s (0.6%)
 ARM 2-pass copy prefetched (wrap pld)                :   1548.6 MB/s

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     82.3 MB/s
 NEON copy (from framebuffer)                         :     79.8 MB/s (0.4%)
 NEON 2-pass copy (from framebuffer)                  :     80.8 MB/s
 NEON unrolled copy (from framebuffer)                :     80.5 MB/s
 NEON 2-pass unrolled copy (from framebuffer)         :     79.2 MB/s
 VFP copy (from framebuffer)                          :    555.7 MB/s
 VFP 2-pass copy (from framebuffer)                   :    524.8 MB/s (0.9%)
 ARM copy (from framebuffer)                          :    271.3 MB/s
 ARM 2-pass copy (from framebuffer)                   :    275.0 MB/s (0.2%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    5.0 ns          /     8.5 ns 
    131072 :    7.6 ns          /    11.9 ns 
    262144 :   11.8 ns          /    17.3 ns 
    524288 :   67.6 ns          /   106.2 ns 
   1048576 :  101.8 ns          /   143.6 ns 
   2097152 :  120.1 ns          /   159.1 ns 
   4194304 :  133.8 ns          /   171.2 ns 
   8388608 :  141.3 ns          /   178.6 ns 
  16777216 :  147.0 ns          /   183.1 ns 
  33554432 :  151.1 ns          /   188.0 ns 
  67108864 :  170.9 ns          /   224.2 ns 

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1363  1379  1379  1380  1380  1380  1380  1380  1380

RAM size:    1927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        725   100    707    705  |      15266   100   1304   1303
23:        702   100    716    716  |      14967   100   1298   1295
24:        680   100    732    732  |      14658   100   1288   1287
25:        654   100    748    747  |      14189   100   1264   1263
----------------------------------  | ------------------------------
Avr:             100    726    725  |              100   1288   1287
Tot:             100   1007   1006

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1379  1380  1380  1380  1380  1380  1381  1380  1376

RAM size:    1927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2074   327    618   2018  |      61986   398   1330   5288
23:       2042   334    623   2081  |      59739   394   1312   5169
24:       2018   345    629   2170  |      56553   382   1298   4965
25:       1986   355    638   2268  |      56058   394   1266   4989
----------------------------------  | ------------------------------
Avr:             340    627   2134  |              392   1302   5103
Tot:             366    964   3619

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1379  1380  1380  1380  1380  1380  1380  1378  1379

RAM size:    1927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2047   324    615   1992  |      61585   395   1331   5254
23:       2046   334    624   2085  |      58194   383   1316   5035
24:       1998   343    626   2149  |      58508   395   1300   5136
25:       1971   354    636   2251  |      56607   397   1268   5038
----------------------------------  | ------------------------------
Avr:             339    625   2119  |              392   1304   5116
Tot:             366    965   3618

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:  1379  1379  1380  1380  1379  1380  1374  1379  1380

RAM size:    1927 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2085   328    619   2029  |      61670   395   1331   5261
23:       2037   333    624   2076  |      60077   394   1319   5198
24:       2003   344    627   2155  |      57847   391   1298   5078
25:       1966   354    634   2245  |      55059   387   1265   4900
----------------------------------  | ------------------------------
Avr:             340    626   2126  |              392   1303   5110
Tot:             366    964   3618

Compression: 2134,2119,2126
Decompression: 5103,5116,5110
Total: 3619,3618,3618

##########################################################################

OpenSSL 1.1.0f  25 May 2017
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      99359.58k   304598.12k   627796.74k   872726.53k   983329.45k   992357.03k
aes-128-cbc      99425.52k   303298.56k   627956.91k   872829.95k   982231.72k   989315.07k
aes-192-cbc      95564.92k   275437.93k   522251.43k   683287.55k   748451.16k   753778.69k
aes-192-cbc      95602.53k   275540.20k   521663.91k   683242.15k   748939.95k   753270.78k
aes-256-cbc      93177.38k   256180.52k   456980.91k   576198.66k   622430.89k   625508.35k
aes-256-cbc      93098.98k   256068.97k   457274.54k   575405.06k   622419.97k   623433.05k

##########################################################################

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
14:32:16: 1392MHz  0.15   3%   0%   1%   0%   1%   0%  44.1°C
14:33:16: 1392MHz  0.62  22%   0%  21%   0%   0%   0%  50.0°C
14:34:16: 1392MHz  0.90  26%   0%  25%   0%   0%   0%  47.7°C
14:35:16: 1392MHz  0.97  25%   0%  25%   0%   0%   0%  48.2°C
14:36:17: 1392MHz  0.99  25%   0%  25%   0%   0%   0%  50.8°C
14:37:17: 1392MHz  1.00  25%   0%  25%   0%   0%   0%  45.9°C
14:38:17: 1392MHz  1.00  25%   0%  25%   0%   0%   0%  45.9°C
14:39:17: 1392MHz  1.00  25%   0%  25%   0%   0%   0%  46.8°C
14:40:17: 1392MHz  1.00  25%   0%  25%   0%   0%   0%  45.9°C
14:41:17: 1392MHz  1.00  25%   0%  25%   0%   0%   0%  45.0°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
14:42:10: 1392MHz  1.00  15%   0%  14%   0%   0%   0%  44.5°C
14:42:25: 1392MHz  1.51  25%   0%  24%   0%   0%   0%  45.0°C
14:42:40: 1392MHz  2.14  25%   0%  25%   0%   0%   0%  47.7°C
14:42:55: 1392MHz  2.17  25%   0%  24%   0%   0%   0%  46.4°C
14:43:10: 1392MHz  2.44  25%   0%  24%   0%   0%   0%  45.0°C
14:43:26: 1392MHz  2.71  25%   0%  24%   0%   0%   0%  47.3°C
14:43:41: 1392MHz  2.76  25%   0%  24%   0%   0%   0%  48.2°C
14:43:56: 1392MHz  2.67  25%   0%  24%   0%   0%   0%  49.1°C
14:44:11: 1392MHz  2.65  25%   0%  24%   0%   0%   0%  44.1°C
14:44:26: 1392MHz  2.71  25%   0%  24%   0%   0%   0%  45.0°C
14:44:41: 1392MHz  2.63  25%   0%  24%   0%   0%   0%  41.8°C
14:44:56: 1392MHz  2.64  25%   0%  24%   0%   0%   0%  47.3°C
14:45:11: 1392MHz  2.72  25%   0%  24%   0%   0%   0%  45.5°C
14:45:26: 1392MHz  2.56  25%   0%  24%   0%   0%   0%  47.3°C
14:45:41: 1392MHz  2.44  25%   0%  24%   0%   0%   0%  43.2°C
14:45:56: 1392MHz  2.42  25%   0%  24%   0%   0%   0%  45.5°C
14:46:11: 1392MHz  2.56  25%   0%  24%   0%   0%   0%  46.8°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
14:46:14: 1392MHz  2.67  17%   0%  16%   0%   0%   0%  46.4°C
14:46:47: 1392MHz  2.69  54%   1%  53%   0%   0%   0%  60.0°C
14:47:18: 1392MHz  2.91  83%   1%  81%   0%   0%   0%  58.6°C
14:47:48: 1392MHz  3.48  86%   1%  84%   0%   0%   0%  50.0°C
14:48:18: 1392MHz  3.49  84%   1%  82%   0%   0%   0%  57.7°C
14:48:48: 1392MHz  3.70  85%   1%  83%   0%   0%   0%  58.2°C
14:49:18: 1392MHz  3.72  85%   1%  83%   0%   0%   0%  60.0°C
14:49:50: 1392MHz  3.53  87%   1%  85%   0%   0%   0%  62.1°C
14:50:21: 1392MHz  3.93  85%   2%  83%   0%   0%   0%  60.0°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
14:50:27: 1392MHz  4.02  27%   0%  26%   0%   0%   0%  58.2°C
14:50:38: 1392MHz  3.40   0%   0%   0%   0%   0%   0%  44.1°C
14:50:48: 1392MHz  3.03  25%   0%  25%   0%   0%   0%  49.1°C
14:50:58: 1392MHz  2.72  25%   0%  25%   0%   0%   0%  45.5°C
14:51:08: 1392MHz  2.45  25%   0%  25%   0%   0%   0%  52.5°C
14:51:18: 1392MHz  2.23  25%   0%  25%   0%   0%   0%  47.7°C
14:51:28: 1392MHz  2.04  25%   0%  25%   0%   0%   0%  52.5°C
14:51:38: 1392MHz  1.88  26%   0%  25%   0%   0%   0%  46.8°C
14:51:48: 1392MHz  1.74  25%   0%  25%   0%   0%   0%  47.7°C
14:51:58: 1392MHz  1.63  25%   0%  25%   0%   0%   0%  47.7°C
14:52:08: 1392MHz  1.53  25%   0%  25%   0%   0%   0%  46.4°C
14:52:18: 1392MHz  1.45  25%   0%  25%   0%   0%   0%  51.2°C

##########################################################################

Linux 4.4.132-1075-rockchip-ayufan-ga83beded8524 (rock64) 	07/27/18 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          25.95    0.01    0.80    0.52    0.00   72.71

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mtdblock0         0.02         0.06         0.00        108          0
mmcblk1           3.24       103.46        21.20     177140      36300

              total        used        free      shared  buff/cache   available
Mem:           1.9G         74M        1.6G         44M        237M        1.7G
Swap:            0B          0B          0B

Filename				Type		Size	Used	Priority
