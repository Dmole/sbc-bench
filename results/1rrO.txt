sbc-bench v0.6.2 ROCK PI 4B (Fri, 09 Nov 2018 22:47:05 +0000)

Distributor ID:	Debian
Description:	Debian GNU/Linux 9.4 (stretch)
Release:	9.4
Codename:	stretch
Architecture:	armhf

/usr/bin/gcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516

Uptime: 22:47:05 up 8 min,  4 users,  load average: 1.06, 0.55, 0.23

Linux 4.4.154 (linaro-alip) 	11/09/18 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           5.70    0.00    0.99    0.82    0.00   92.49

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          22.16       447.73       710.39     218104     346052

              total        used        free      shared  buff/cache   available
Mem:           1.9G        123M        1.3G         18M        490M        1.7G
Swap:            0B          0B          0B



##########################################################################

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP: 1512    Measured: 1501.356/1501.600/1501.722
Cpufreq OPP: 1416    Measured: 1404.946/1405.084/1404.610
Cpufreq OPP: 1200    Measured: 1189.127/1189.469/1189.250
Cpufreq OPP: 1008    Measured: 978.596/996.917/997.844
Cpufreq OPP:  816    Measured: 805.571/805.630/805.581
Cpufreq OPP:  600    Measured: 589.376/589.738/589.882
Cpufreq OPP:  408    Measured: 397.641/397.091/397.538

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP: 1992    Measured: 1984.296/1984.248/1984.150
Cpufreq OPP: 1800    Measured: 1792.575/1792.615/1792.515
Cpufreq OPP: 1608    Measured: 1600.107/1600.523/1600.543
Cpufreq OPP: 1416    Measured: 1408.240/1408.010/1408.624
Cpufreq OPP: 1200    Measured: 1192.614/1192.862/1192.655
Cpufreq OPP: 1008    Measured: 1000.211/1000.562/1000.126
Cpufreq OPP:  816    Measured: 808.853/808.457/808.942
Cpufreq OPP:  600    Measured: 592.526/592.459/592.446
Cpufreq OPP:  408    Measured: 400.407/400.615/400.364

##########################################################################

Executing tinymembench on a little core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1296.3 MB/s (0.4%)
 C copy backwards (32 byte blocks)                    :   1304.5 MB/s (0.4%)
 C copy backwards (64 byte blocks)                    :   1309.4 MB/s (0.3%)
 C copy                                               :   1347.4 MB/s (0.4%)
 C copy prefetched (32 bytes step)                    :   1493.3 MB/s
 C copy prefetched (64 bytes step)                    :   1497.6 MB/s (0.2%)
 C 2-pass copy                                        :   1164.3 MB/s (0.4%)
 C 2-pass copy prefetched (32 bytes step)             :   1267.0 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   1262.0 MB/s (0.1%)
 C fill                                               :   4757.6 MB/s
 C fill (shuffle within 16 byte blocks)               :   4757.3 MB/s
 C fill (shuffle within 32 byte blocks)               :   4756.9 MB/s
 C fill (shuffle within 64 byte blocks)               :   4757.8 MB/s
 ---
 standard memcpy                                      :   1342.1 MB/s (0.1%)
 standard memset                                      :   3938.0 MB/s
 ---
 NEON read                                            :   1604.1 MB/s (0.1%)
 NEON read prefetched (32 bytes step)                 :   2521.8 MB/s
 NEON read prefetched (64 bytes step)                 :   2526.5 MB/s (0.3%)
 NEON read 2 data streams                             :   1453.2 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :   2411.7 MB/s
 NEON read 2 data streams prefetched (64 bytes step)  :   2411.3 MB/s
 NEON copy                                            :   1401.1 MB/s (0.2%)
 NEON copy prefetched (32 bytes step)                 :   1498.1 MB/s
 NEON copy prefetched (64 bytes step)                 :   1498.0 MB/s (0.2%)
 NEON unrolled copy                                   :   1381.2 MB/s (0.3%)
 NEON unrolled copy prefetched (32 bytes step)        :   1656.2 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1657.5 MB/s (0.1%)
 NEON copy backwards                                  :   1333.8 MB/s
 NEON copy backwards prefetched (32 bytes step)       :   1449.4 MB/s
 NEON copy backwards prefetched (64 bytes step)       :   1450.8 MB/s (0.1%)
 NEON 2-pass copy                                     :   1202.5 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1307.0 MB/s (0.3%)
 NEON 2-pass copy prefetched (64 bytes step)          :   1306.0 MB/s
 NEON unrolled 2-pass copy                            :   1199.1 MB/s (0.2%)
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1409.8 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1451.8 MB/s
 NEON fill                                            :   4756.4 MB/s
 NEON fill backwards                                  :   4758.5 MB/s
 VFP copy                                             :   1375.0 MB/s (0.2%)
 VFP 2-pass copy                                      :   1200.7 MB/s (0.2%)
 ARM fill (STRD)                                      :   3936.6 MB/s
 ARM fill (STM with 8 registers)                      :   4752.3 MB/s
 ARM fill (STM with 4 registers)                      :   4738.9 MB/s
 ARM copy prefetched (incr pld)                       :   1485.4 MB/s
 ARM copy prefetched (wrap pld)                       :   1481.2 MB/s (0.1%)
 ARM 2-pass copy prefetched (incr pld)                :   1247.6 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :   1235.1 MB/s (0.3%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    4.6 ns          /     7.7 ns 
    131072 :    7.0 ns          /    10.6 ns 
    262144 :    8.3 ns          /    11.9 ns 
    524288 :   17.8 ns          /    28.2 ns 
   1048576 :  110.8 ns          /   167.5 ns 
   2097152 :  157.0 ns          /   206.5 ns 
   4194304 :  183.6 ns          /   226.0 ns 
   8388608 :  196.5 ns          /   234.2 ns 
  16777216 :  203.4 ns          /   240.7 ns 
  33554432 :  208.0 ns          /   245.7 ns 
  67108864 :  212.3 ns          /   250.3 ns 

Executing tinymembench on a big core:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   2775.1 MB/s (0.3%)
 C copy backwards (32 byte blocks)                    :   2758.2 MB/s
 C copy backwards (64 byte blocks)                    :   2757.9 MB/s
 C copy                                               :   2716.2 MB/s
 C copy prefetched (32 bytes step)                    :   2679.7 MB/s (0.4%)
 C copy prefetched (64 bytes step)                    :   2676.7 MB/s (0.4%)
 C 2-pass copy                                        :   1577.2 MB/s (0.1%)
 C 2-pass copy prefetched (32 bytes step)             :   1680.1 MB/s (0.1%)
 C 2-pass copy prefetched (64 bytes step)             :   1677.8 MB/s (0.1%)
 C fill                                               :   4859.1 MB/s (0.2%)
 C fill (shuffle within 16 byte blocks)               :   4865.5 MB/s (0.2%)
 C fill (shuffle within 32 byte blocks)               :   4863.2 MB/s (0.4%)
 C fill (shuffle within 64 byte blocks)               :   4867.8 MB/s (0.3%)
 ---
 standard memcpy                                      :   1874.8 MB/s (0.4%)
 standard memset                                      :   4865.7 MB/s (0.3%)
 ---
 NEON read                                            :   4434.3 MB/s
 NEON read prefetched (32 bytes step)                 :   4536.6 MB/s
 NEON read prefetched (64 bytes step)                 :   4532.0 MB/s
 NEON read 2 data streams                             :   4581.0 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :   4600.8 MB/s
 NEON read 2 data streams prefetched (64 bytes step)  :   4609.6 MB/s
 NEON copy                                            :   2709.6 MB/s (0.1%)
 NEON copy prefetched (32 bytes step)                 :   2665.6 MB/s
 NEON copy prefetched (64 bytes step)                 :   2664.6 MB/s
 NEON unrolled copy                                   :   2731.8 MB/s (0.1%)
 NEON unrolled copy prefetched (32 bytes step)        :   2706.8 MB/s (0.4%)
 NEON unrolled copy prefetched (64 bytes step)        :   2702.3 MB/s (0.1%)
 NEON copy backwards                                  :   2740.8 MB/s
 NEON copy backwards prefetched (32 bytes step)       :   2676.6 MB/s (0.1%)
 NEON copy backwards prefetched (64 bytes step)       :   2675.9 MB/s
 NEON 2-pass copy                                     :   2426.0 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   2493.0 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   2492.8 MB/s
 NEON unrolled 2-pass copy                            :   2420.9 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   2491.1 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   2490.8 MB/s (0.4%)
 NEON fill                                            :   4861.7 MB/s (0.3%)
 NEON fill backwards                                  :   4842.7 MB/s
 VFP copy                                             :   2744.7 MB/s (0.3%)
 VFP 2-pass copy                                      :   2365.3 MB/s
 ARM fill (STRD)                                      :   4856.2 MB/s (0.2%)
 ARM fill (STM with 8 registers)                      :   4861.7 MB/s (0.3%)
 ARM fill (STM with 4 registers)                      :   4860.7 MB/s (0.2%)
 ARM copy prefetched (incr pld)                       :   2685.1 MB/s
 ARM copy prefetched (wrap pld)                       :   2684.8 MB/s
 ARM 2-pass copy prefetched (incr pld)                :   2507.7 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :   2501.5 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.1 ns          /     6.5 ns 
    131072 :    6.2 ns          /     8.7 ns 
    262144 :    8.9 ns          /    11.6 ns 
    524288 :   10.3 ns          /    13.3 ns 
   1048576 :   15.7 ns          /    21.8 ns 
   2097152 :  114.3 ns          /   173.9 ns 
   4194304 :  161.5 ns          /   218.4 ns 
   8388608 :  189.7 ns          /   241.0 ns 
  16777216 :  203.4 ns          /   250.0 ns 
  33554432 :  210.8 ns          /   255.7 ns 
  67108864 :  220.5 ns          /   271.5 ns 

##########################################################################

OpenSSL 1.1.0f, built on 25 May 2017
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     107966.59k   330979.71k   683034.45k   949540.18k  1068608.17k  1079257.77k
aes-128-cbc     301466.50k   767796.33k  1212178.52k  1396734.63k  1487506.09k  1484499.63k
aes-192-cbc     104011.48k   300046.51k   568121.86k   743094.61k   814197.42k   821346.30k
aes-192-cbc     198861.48k   558621.57k   946076.07k  1190163.11k  1278692.01k  1285980.16k
aes-256-cbc     101369.34k   279130.24k   497418.84k   626876.42k   676711.08k   680422.06k
aes-256-cbc     280841.21k   651143.89k   950736.55k  1061915.31k  1105791.66k  1113904.47k

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C.UTF-8,Utf16=on,HugeFiles=on,32 bits,6 CPUs LE)

LE
CPU Freq:  1496  1500  1500  1491  1501  1502  1501  1502  1501

RAM size:    1927 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        685   100    667    667  |      16498   100   1407   1407
23:        662   100    675    675  |      16097   100   1393   1393
24:        637   100    685    685  |      15682   100   1377   1376
25:        607   100    694    693  |      15248   100   1357   1357
----------------------------------  | ------------------------------
Avr:             100    680    680  |              100   1383   1383
Tot:             100   1032   1032

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C.UTF-8,Utf16=on,HugeFiles=on,32 bits,6 CPUs LE)

LE
CPU Freq:  1983  1984  1983  1985  1984  1984  1984  1984  1984

RAM size:    1927 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1337   100   1302   1302  |      27558   100   2351   2350
23:       1265   100   1289   1289  |      26836   100   2322   2322
24:       1207   100   1298   1298  |      26059   100   2288   2287
25:       1145   100   1308   1308  |      25183   100   2241   2241
----------------------------------  | ------------------------------
Avr:             100   1299   1299  |              100   2300   2300
Tot:             100   1800   1800

##########################################################################

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C.UTF-8,Utf16=on,HugeFiles=on,32 bits,6 CPUs LE)

LE
CPU Freq:  1946  1979  1982  1984  1984  1985  1984  1985  1984

RAM size:    1927 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4006   469    831   3898  |     107249   504   1813   9146
23:       4203   529    810   4283  |     103985   504   1785   8998
24:       4031   535    810   4334  |      97992   508   1695   8601
25:       3711   527    805   4237  |      94082   521   1606   8373
----------------------------------  | ------------------------------
Avr:             515    814   4188  |              509   1725   8779
Tot:             512   1269   6484

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C.UTF-8,Utf16=on,HugeFiles=on,32 bits,6 CPUs LE)

LE
CPU Freq:  1982  1984  1984  1984  1984  1984  1984  1985  1984

RAM size:    1927 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4076   488    812   3965  |     103213   521   1689   8802
23:       4257   544    798   4338  |      99416   525   1639   8602
24:       4027   542    798   4330  |      96440   525   1612   8465
25:       3757   538    798   4290  |      92940   523   1581   8271
----------------------------------  | ------------------------------
Avr:             528    802   4231  |              524   1630   8535
Tot:             526   1216   6383

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C.UTF-8,Utf16=on,HugeFiles=on,32 bits,6 CPUs LE)

LE
CPU Freq:  1984  1981  1984  1983  1985  1985  1985  1985  1985

RAM size:    1927 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       4397   533    802   4278  |     103239   525   1676   8804
23:       4082   521    798   4160  |      98960   523   1637   8563
24:       3929   532    794   4225  |      97162   531   1605   8528
25:       3791   550    786   4328  |      92653   522   1580   8246
----------------------------------  | ------------------------------
Avr:             534    795   4248  |              525   1625   8535
Tot:             530   1210   6392

Compression: 4188,4231,4248
Decompression: 8779,8535,8535
Total: 6484,6383,6392

##########################################################################

Testing clockspeeds again. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:19:33: 1992/1512MHz  6.03  89%   1%  87%   0%   0%   0%  83.3°C

Checking cpufreq OPP for cpu0-cpu3:

Cpufreq OPP: 1512    Measured: 1501.530/1495.704/1501.583
Cpufreq OPP: 1416    Measured: 1405.466/1406.139/1405.818
Cpufreq OPP: 1200    Measured: 1189.222/1185.211/1189.647
Cpufreq OPP: 1008    Measured: 996.700/997.338/998.085
Cpufreq OPP:  816    Measured: 805.738/805.826/801.664
Cpufreq OPP:  600    Measured: 590.172/589.724/589.909
Cpufreq OPP:  408    Measured: 397.482/397.819/397.898

Checking cpufreq OPP for cpu4-cpu5:

Cpufreq OPP: 1992    Measured: 1984.833/1984.906/1985.370
Cpufreq OPP: 1800    Measured: 1792.734/1792.873/1792.853
Cpufreq OPP: 1608    Measured: 1600.979/1601.099/1601.198
Cpufreq OPP: 1416    Measured: 1409.101/1409.470/1408.947
Cpufreq OPP: 1200    Measured: 1192.972/1193.068/1192.889
Cpufreq OPP: 1008    Measured: 1000.695/1000.998/1001.010
Cpufreq OPP:  816    Measured: 808.635/809.140/808.625
Cpufreq OPP:  600    Measured: 592.055/592.287/592.128
Cpufreq OPP:  408    Measured: 400.175/400.095/400.151

##########################################################################

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
22:47:17: 1992/1512MHz  1.29   7%   0%   5%   0%   0%   0%  50.6°C
22:49:17: 1992/1512MHz  1.04  16%   0%  16%   0%   0%   0%  42.2°C
22:51:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  41.7°C
22:53:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  38.1°C
22:55:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  38.1°C
22:57:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  55.0°C
22:59:17: 1992/1512MHz  1.02  16%   0%  16%   0%   0%   0%  60.0°C
23:01:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  48.1°C
23:03:17: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:03:42: 1992/1512MHz  1.00  13%   0%  13%   0%   0%   0%  45.6°C
23:03:52: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  42.8°C
23:04:02: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.9°C
23:04:12: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  52.2°C
23:04:22: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.9°C
23:04:32: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  43.9°C
23:04:42: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  50.6°C
23:04:52: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  54.4°C
23:05:03: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
23:05:13: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.9°C
23:05:23: 1992/1512MHz  1.00  16%   0%  16%   0%   0%   0%  53.3°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:05:30: 1992/1512MHz  1.00  13%   0%  13%   0%   0%   0%  56.1°C
23:06:30: 1992/1512MHz  3.34  16%   0%  16%   0%   0%   0%  40.6°C
23:07:30: 1992/1512MHz  4.05  16%   0%  16%   0%   0%   0%  39.4°C
23:08:30: 1992/1512MHz  3.70  16%   0%  16%   0%   0%   0%  38.8°C
23:09:30: 1992/1512MHz  4.12  16%   0%  16%   0%   0%   0%  38.8°C
23:10:30: 1992/1512MHz  3.71  16%   0%  16%   0%   0%   0%  38.8°C
23:11:31: 1992/1512MHz  3.82  16%   0%  16%   0%   0%   0%  38.1°C
23:12:31: 1992/1512MHz  4.24  16%   0%  16%   0%   0%   0%  49.4°C
23:13:31: 1992/1512MHz  5.21  16%   0%  16%   0%   0%   0%  53.3°C
23:14:31: 1992/1512MHz  4.89  16%   0%  16%   0%   0%   0%  53.9°C
23:15:31: 1992/1512MHz  4.13  16%   0%  16%   0%   0%   0%  53.3°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
23:16:07: 1992/1512MHz  4.55  14%   0%  14%   0%   0%   0%  56.7°C
23:16:27: 1992/1512MHz  4.66  78%   0%  77%   0%   0%   0%  80.6°C
23:16:47: 1992/1512MHz  5.05  81%   1%  80%   0%   0%   0%  79.4°C
23:17:08: 1992/1512MHz  5.46  89%   1%  87%   0%   0%   0%  84.4°C
23:17:28: 1992/1512MHz  5.30  75%   1%  74%   0%   0%   0%  85.6°C
23:17:49: 1992/1512MHz  5.74  85%   1%  83%   0%   0%   0%  83.3°C
23:18:09: 1992/1512MHz  5.54  84%   1%  82%   0%   0%   0%  83.3°C
23:18:30: 1992/1512MHz  5.74  91%   1%  89%   0%   0%   0%  85.0°C
23:18:52: 1992/1512MHz  5.50  79%   1%  78%   0%   0%   0%  85.6°C
23:19:12: 1992/1512MHz  5.86  84%   1%  82%   0%   0%   0%  82.2°C
23:19:33: 1992/1512MHz  6.03  89%   1%  87%   0%   0%   0%  83.3°C

Throttling statistics (time spent on each cpufreq OPP) for CPUs 0-3:

1512 MHz: 1947.38 sec
1416 MHz:       0 sec
1200 MHz:       0 sec
1008 MHz:       0 sec
 816 MHz:       0 sec
 600 MHz:       0 sec
 408 MHz:    0.02 sec

Throttling statistics (time spent on each cpufreq OPP) for CPUs 4-5:

1992 MHz: 1902.88 sec
1800 MHz:    1.61 sec
1608 MHz:    5.13 sec
1416 MHz:   37.77 sec
1200 MHz:       0 sec
1008 MHz:       0 sec
 816 MHz:       0 sec
 600 MHz:       0 sec
 408 MHz:       0 sec

##########################################################################

Linux 4.4.154 (linaro-alip) 	11/09/18 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          20.27    0.00    0.47    0.17    0.00   79.09

Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           4.58        89.02       142.32     218804     349816

              total        used        free      shared  buff/cache   available
Mem:           1.9G        122M        1.3G         18M        492M        1.7G
Swap:            0B          0B          0B



Architecture:          aarch64
Byte Order:            Little Endian
CPU(s):                6
On-line CPU(s) list:   0-5
Thread(s) per core:    1
Core(s) per socket:    3
Socket(s):             2
Model:                 4
Model name:            ARMv8 Processor rev 4 (v8l)
CPU max MHz:           1512.0000
CPU min MHz:           408.0000
BogoMIPS:              48.00
Flags:                 half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt lpae evtstrm aes pmull sha1 sha2 crc32
