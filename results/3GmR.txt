sbc-bench v0.8.6 FriendlyARM NanoPi NEO4 (Sun, 28 Nov 2021 14:52:51 +0100)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04.3 LTS
Release:	20.04
Codename:	focal

Armbian release info:
BOARD=nanopineo4
BOARD_NAME="NanoPi Neo 4"
BOARDFAMILY=rk3399
BUILD_REPOSITORY_URL=https://github.com/armbian/build
BUILD_REPOSITORY_COMMIT=484ee3f30-dirty
DISTRIBUTION_CODENAME=focal
DISTRIBUTION_STATUS=supported
VERSION=21.08.3
LINUXFAMILY=rockchip64
ARCH=arm64
IMAGE_TYPE=stable
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0

Uptime: 14:52:51 up  2:40,  1 user,  load average: 1.03, 0.43, 0.33

Linux 5.10.63-rockchip64 (nanopineo4) 	11/28/21 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           8.34    0.00    0.20    0.06    0.00   91.40

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           1.84        42.61        31.09         0.00     410169     299260          0
mmcblk2boot0      0.01         0.02         0.00         0.00        232          0          0
mmcblk2boot1      0.01         0.02         0.00         0.00        232          0          0
zram0             0.06         0.23         0.00         0.00       2248          4          0
zram1             0.04         0.05         0.35         0.00        500       3352          0

              total        used        free      shared  buff/cache   available
Mem:          977Mi       139Mi       757Mi       4.0Mi        80Mi       762Mi
Swap:         488Mi          0B       488Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	500556	0	5

##########################################################################

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1510 (1509.605/1509.693/1509.111)
Cpufreq OPP: 1416    Measured: 1415 (1413.373/1413.497/1413.528)
Cpufreq OPP: 1200    Measured: 1200 (1197.647/1197.702/1197.133)
Cpufreq OPP: 1008    Measured: 1010 (1005.663/1005.089/1005.725)
Cpufreq OPP:  816    Measured:  815 (813.260/813.821/813.771)
Cpufreq OPP:  600    Measured:  600 (597.857/597.539/597.452)
Cpufreq OPP:  408    Measured:  410 (405.326/405.870/405.681)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 2016    Measured: 2015 (2014.611/2015.189/2014.560)
Cpufreq OPP: 1800    Measured: 1800 (1798.707/1798.567/1798.687)
Cpufreq OPP: 1608    Measured: 1610 (1606.477/1606.597/1606.117)
Cpufreq OPP: 1416    Measured: 1415 (1414.627/1414.534/1414.519)
Cpufreq OPP: 1200    Measured: 1200 (1198.494/1198.731/1198.717)
Cpufreq OPP: 1008    Measured: 1010 (1006.153/1006.656/1006.582)
Cpufreq OPP:  816    Measured:  815 (814.513/814.734/814.583)
Cpufreq OPP:  600    Measured:  600 (598.506/598.621/598.554)
Cpufreq OPP:  408    Measured:  410 (406.445/406.543/406.567)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1692.8 MB/s (1.4%)
 C copy backwards (32 byte blocks)                    :   1777.6 MB/s (0.4%)
 C copy backwards (64 byte blocks)                    :   1751.2 MB/s (0.3%)
 C copy                                               :   1722.0 MB/s (1.1%)
 C copy prefetched (32 bytes step)                    :   1385.9 MB/s
 C copy prefetched (64 bytes step)                    :   1613.6 MB/s
 C 2-pass copy                                        :   1571.6 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1115.9 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    959.9 MB/s
 C fill                                               :   6101.3 MB/s (0.1%)
 C fill (shuffle within 16 byte blocks)               :   6098.7 MB/s (0.2%)
 C fill (shuffle within 32 byte blocks)               :   6098.1 MB/s
 C fill (shuffle within 64 byte blocks)               :   6098.6 MB/s
 ---
 standard memcpy                                      :   1781.5 MB/s
 standard memset                                      :   6107.6 MB/s (0.1%)
 ---
 NEON LDP/STP copy                                    :   1793.7 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1262.7 MB/s (0.5%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1576.3 MB/s (0.1%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2013.7 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2012.3 MB/s
 NEON LD1/ST1 copy                                    :   1784.4 MB/s
 NEON STP fill                                        :   6106.9 MB/s (1.5%)
 NEON STNP fill                                       :   1946.1 MB/s (2.4%)
 ARM LDP/STP copy                                     :   1797.7 MB/s (0.2%)
 ARM STP fill                                         :   6106.4 MB/s
 ARM STNP fill                                        :   1946.9 MB/s (5.1%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.6 ns 
    131072 :    6.9 ns          /    10.5 ns 
    262144 :    8.2 ns          /    11.7 ns 
    524288 :    9.4 ns          /    13.2 ns 
   1048576 :   78.1 ns          /   120.2 ns 
   2097152 :  115.6 ns          /   155.2 ns 
   4194304 :  140.1 ns          /   173.7 ns 
   8388608 :  153.1 ns          /   182.7 ns 
  16777216 :  161.0 ns          /   189.0 ns 
  33554432 :  165.2 ns          /   193.5 ns 
  67108864 :  168.1 ns          /   196.5 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.5 ns 
    131072 :    6.9 ns          /    10.5 ns 
    262144 :    8.2 ns          /    11.6 ns 
    524288 :    9.4 ns          /    13.2 ns 
   1048576 :   78.1 ns          /   120.2 ns 
   2097152 :  115.0 ns          /   154.6 ns 
   4194304 :  133.7 ns          /   165.8 ns 
   8388608 :  142.9 ns          /   169.8 ns 
  16777216 :  147.3 ns          /   171.5 ns 
  33554432 :  149.6 ns          /   172.2 ns 
  67108864 :  150.8 ns          /   172.5 ns 

Executing benchmark on cpu4 (Cortex-A72):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   2468.5 MB/s
 C copy backwards (32 byte blocks)                    :   2468.4 MB/s
 C copy backwards (64 byte blocks)                    :   2468.4 MB/s
 C copy                                               :   2456.0 MB/s
 C copy prefetched (32 bytes step)                    :   2465.3 MB/s
 C copy prefetched (64 bytes step)                    :   2465.3 MB/s
 C 2-pass copy                                        :   2422.5 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   2417.1 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   2419.4 MB/s
 C fill                                               :   6197.9 MB/s (0.7%)
 C fill (shuffle within 16 byte blocks)               :   6203.5 MB/s
 C fill (shuffle within 32 byte blocks)               :   6201.3 MB/s (0.3%)
 C fill (shuffle within 64 byte blocks)               :   6201.4 MB/s
 ---
 standard memcpy                                      :   2450.9 MB/s
 standard memset                                      :   6191.8 MB/s (0.7%)
 ---
 NEON LDP/STP copy                                    :   2456.6 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   2457.5 MB/s
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   2457.7 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2470.0 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2470.3 MB/s
 NEON LD1/ST1 copy                                    :   2456.9 MB/s
 NEON STP fill                                        :   6192.8 MB/s (0.7%)
 NEON STNP fill                                       :   6188.1 MB/s
 ARM LDP/STP copy                                     :   2456.4 MB/s
 ARM STP fill                                         :   6195.5 MB/s (0.7%)
 ARM STNP fill                                        :   6191.8 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.0 ns          /     6.4 ns 
    131072 :    6.1 ns          /     8.6 ns 
    262144 :    8.8 ns          /    11.4 ns 
    524288 :   10.1 ns          /    13.1 ns 
   1048576 :   15.0 ns          /    21.6 ns 
   2097152 :   88.5 ns          /   133.2 ns 
   4194304 :  124.9 ns          /   166.6 ns 
   8388608 :  147.6 ns          /   183.2 ns 
  16777216 :  159.1 ns          /   195.1 ns 
  33554432 :  164.8 ns          /   198.5 ns 
  67108864 :  173.7 ns          /   210.6 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.0 ns          /     6.4 ns 
    131072 :    6.0 ns          /     8.6 ns 
    262144 :    7.0 ns          /     9.4 ns 
    524288 :    7.6 ns          /     9.8 ns 
   1048576 :   12.8 ns          /    19.1 ns 
   2097152 :   86.4 ns          /   131.0 ns 
   4194304 :  121.0 ns          /   162.3 ns 
   8388608 :  138.0 ns          /   171.3 ns 
  16777216 :  146.9 ns          /   176.0 ns 
  33554432 :  151.2 ns          /   178.1 ns 
  67108864 :  155.3 ns          /   180.4 ns 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     127096.74k   381885.21k   750941.10k  1015278.25k  1131380.74k  1139146.75k
aes-128-cbc     383687.59k   886617.45k  1292065.79k  1439525.21k  1509851.14k  1516705.11k
aes-192-cbc     121365.37k   341000.83k   614404.18k   783509.16k   851798.70k   856391.68k
aes-192-cbc     366257.65k   810155.11k  1097638.91k  1272475.65k  1333701.29k  1336573.95k
aes-256-cbc     117812.62k   314470.23k   532999.00k   655839.23k   702977.37k   703594.50k
aes-256-cbc     354169.98k   740942.53k  1011158.27k  1099550.04k  1137202.52k  1145028.61k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - 64000000 - 128000000 - - 1024000000 -

RAM size:     977 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        917   100    893    893  |      16909   100   1444   1444
23:        865   100    882    882  |      16578   100   1435   1435
24:        828   100    891    891  |      16249   100   1427   1427
25:        777   100    888    888  |      15850   100   1411   1411
----------------------------------  | ------------------------------
Avr:             100    889    889  |              100   1429   1429
Tot:             100   1159   1159

Executing benchmark single-threaded on cpu4 (Cortex-A72)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:     977 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1751   100   1704   1704  |      25435   100   2172   2172
23:       1625   100   1656   1656  |      24989   100   2163   2163
24:       1532   100   1648   1648  |      24517   100   2152   2152
25:       1421   100   1623   1623  |      23922   100   2129   2129
----------------------------------  | ------------------------------
Avr:             100   1658   1658  |              100   2154   2154
Tot:             100   1906   1906

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - 64000000 64000000 - - - - -

RAM size:     977 MB,  # CPU hardware threads:   6
RAM usage:    675 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5709   576    964   5554  |     102027   519   1678   8701
23:       5009   532    959   5104  |      99746   519   1663   8631
24:       4840   549    948   5204  |      97496   519   1648   8557
----------------------------------  | ------------------------------
Avr:             552    957   5287  |              519   1663   8630
Tot:             536   1310   6959

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:     977 MB,  # CPU hardware threads:   6
RAM usage:    675 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5487   542    985   5338  |     102070   520   1675   8705
23:       5307   569    950   5408  |      99808   520   1662   8636
24:       4850   555    940   5215  |      97396   520   1645   8549
----------------------------------  | ------------------------------
Avr:             555    958   5320  |              520   1661   8630
Tot:             537   1310   6975

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 64000000 - - - 256000000 - - -

RAM size:     977 MB,  # CPU hardware threads:   6
RAM usage:    675 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5444   535    991   5297  |     101950   519   1675   8694
23:       5252   577    928   5352  |      99894   519   1664   8644
24:       4973   570    938   5348  |      97503   519   1649   8558
----------------------------------  | ------------------------------
Avr:             560    952   5332  |              519   1663   8632
Tot:             540   1308   6982

Compression: 5287,5320,5332
Decompression: 8630,8630,8632
Total: 6959,6975,6982

##########################################################################

** cpuminer-multi 1.3.3 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2021-11-28 15:15:50] 6 miner threads started, using 'scrypt' algorithm.
[2021-11-28 15:15:50] CPU #4: 2.68 kH/s
[2021-11-28 15:15:50] CPU #5: 2.68 kH/s
[2021-11-28 15:15:50] CPU #0: 1.49 kH/s
[2021-11-28 15:15:50] CPU #1: 1.50 kH/s
[2021-11-28 15:15:50] CPU #3: 1.51 kH/s
[2021-11-28 15:15:50] CPU #2: 1.48 kH/s
[2021-11-28 15:15:55] Total: 11.35 kH/s
[2021-11-28 15:16:00] CPU #5: 2.68 kH/s
[2021-11-28 15:16:00] Total: 11.36 kH/s
[2021-11-28 15:16:00] CPU #4: 2.68 kH/s
[2021-11-28 15:16:00] CPU #0: 1.50 kH/s
[2021-11-28 15:16:00] CPU #2: 1.49 kH/s
[2021-11-28 15:16:00] CPU #1: 1.51 kH/s
[2021-11-28 15:16:00] CPU #3: 1.51 kH/s
[2021-11-28 15:16:05] Total: 11.37 kH/s
[2021-11-28 15:16:10] CPU #5: 2.68 kH/s
[2021-11-28 15:16:10] Total: 11.37 kH/s
[2021-11-28 15:16:10] CPU #4: 2.68 kH/s
[2021-11-28 15:16:10] CPU #2: 1.49 kH/s
[2021-11-28 15:16:10] CPU #0: 1.50 kH/s
[2021-11-28 15:16:10] CPU #1: 1.51 kH/s
[2021-11-28 15:16:10] CPU #3: 1.51 kH/s
[2021-11-28 15:16:15] Total: 11.37 kH/s
[2021-11-28 15:16:20] CPU #5: 2.68 kH/s
[2021-11-28 15:16:20] Total: 11.37 kH/s
[2021-11-28 15:16:20] CPU #4: 2.68 kH/s
[2021-11-28 15:16:20] CPU #2: 1.49 kH/s
[2021-11-28 15:16:20] CPU #0: 1.50 kH/s
[2021-11-28 15:16:20] CPU #1: 1.51 kH/s
[2021-11-28 15:16:20] CPU #3: 1.51 kH/s
[2021-11-28 15:16:25] Total: 11.37 kH/s
[2021-11-28 15:16:30] CPU #5: 2.68 kH/s
[2021-11-28 15:16:30] Total: 11.37 kH/s
[2021-11-28 15:16:30] CPU #4: 2.68 kH/s
[2021-11-28 15:16:30] CPU #2: 1.49 kH/s
[2021-11-28 15:16:30] CPU #0: 1.50 kH/s
[2021-11-28 15:16:30] CPU #1: 1.51 kH/s
[2021-11-28 15:16:30] CPU #3: 1.51 kH/s
[2021-11-28 15:16:35] Total: 11.36 kH/s
[2021-11-28 15:16:40] CPU #5: 2.68 kH/s
[2021-11-28 15:16:40] Total: 11.34 kH/s
[2021-11-28 15:16:40] CPU #4: 2.68 kH/s
[2021-11-28 15:16:40] CPU #2: 1.49 kH/s
[2021-11-28 15:16:40] CPU #0: 1.50 kH/s
[2021-11-28 15:16:40] CPU #1: 1.51 kH/s
[2021-11-28 15:16:40] CPU #3: 1.51 kH/s
[2021-11-28 15:16:45] Total: 11.37 kH/s
[2021-11-28 15:16:50] CPU #5: 2.68 kH/s
[2021-11-28 15:16:50] Total: 11.37 kH/s
[2021-11-28 15:16:50] CPU #4: 2.68 kH/s
[2021-11-28 15:16:50] CPU #2: 1.49 kH/s
[2021-11-28 15:16:50] CPU #1: 1.51 kH/s
[2021-11-28 15:16:50] CPU #0: 1.50 kH/s
[2021-11-28 15:16:50] CPU #3: 1.51 kH/s
[2021-11-28 15:16:55] Total: 11.36 kH/s
[2021-11-28 15:17:00] CPU #5: 2.68 kH/s
[2021-11-28 15:17:00] Total: 11.37 kH/s
[2021-11-28 15:17:00] CPU #4: 2.68 kH/s
[2021-11-28 15:17:00] CPU #2: 1.49 kH/s
[2021-11-28 15:17:00] CPU #1: 1.51 kH/s
[2021-11-28 15:17:00] CPU #0: 1.50 kH/s
[2021-11-28 15:17:00] CPU #3: 1.51 kH/s
[2021-11-28 15:17:05] Total: 11.36 kH/s
[2021-11-28 15:17:10] CPU #5: 2.68 kH/s
[2021-11-28 15:17:10] Total: 11.36 kH/s
[2021-11-28 15:17:10] CPU #4: 2.68 kH/s
[2021-11-28 15:17:10] CPU #2: 1.49 kH/s
[2021-11-28 15:17:10] CPU #0: 1.50 kH/s
[2021-11-28 15:17:10] CPU #1: 1.51 kH/s
[2021-11-28 15:17:10] CPU #3: 1.51 kH/s
[2021-11-28 15:17:15] Total: 11.36 kH/s
[2021-11-28 15:17:20] CPU #5: 2.68 kH/s
[2021-11-28 15:17:20] Total: 11.36 kH/s
[2021-11-28 15:17:20] CPU #4: 2.67 kH/s
[2021-11-28 15:17:20] CPU #2: 1.49 kH/s
[2021-11-28 15:17:20] CPU #1: 1.51 kH/s
[2021-11-28 15:17:20] CPU #0: 1.49 kH/s
[2021-11-28 15:17:20] CPU #3: 1.51 kH/s
[2021-11-28 15:17:25] Total: 11.35 kH/s
[2021-11-28 15:17:30] CPU #5: 2.68 kH/s
[2021-11-28 15:17:30] Total: 11.37 kH/s
[2021-11-28 15:17:30] CPU #4: 2.68 kH/s
[2021-11-28 15:17:30] CPU #2: 1.49 kH/s
[2021-11-28 15:17:30] CPU #0: 1.50 kH/s
[2021-11-28 15:17:30] CPU #1: 1.51 kH/s
[2021-11-28 15:17:30] CPU #3: 1.51 kH/s
[2021-11-28 15:17:35] Total: 11.37 kH/s
[2021-11-28 15:17:40] CPU #5: 2.68 kH/s
[2021-11-28 15:17:40] Total: 11.37 kH/s
[2021-11-28 15:17:40] CPU #4: 2.68 kH/s
[2021-11-28 15:17:40] CPU #2: 1.49 kH/s
[2021-11-28 15:17:40] CPU #1: 1.51 kH/s
[2021-11-28 15:17:40] CPU #0: 1.50 kH/s
[2021-11-28 15:17:40] CPU #3: 1.51 kH/s
[2021-11-28 15:17:45] Total: 11.37 kH/s
[2021-11-28 15:17:50] CPU #5: 2.68 kH/s
[2021-11-28 15:17:50] Total: 11.36 kH/s
[2021-11-28 15:17:50] CPU #4: 2.68 kH/s
[2021-11-28 15:17:50] CPU #2: 1.49 kH/s
[2021-11-28 15:17:50] CPU #0: 1.50 kH/s
[2021-11-28 15:17:50] CPU #1: 1.51 kH/s
[2021-11-28 15:17:50] CPU #3: 1.51 kH/s
[2021-11-28 15:17:55] Total: 11.37 kH/s
[2021-11-28 15:18:00] CPU #5: 2.67 kH/s
[2021-11-28 15:18:00] Total: 11.36 kH/s
[2021-11-28 15:18:00] CPU #4: 2.68 kH/s
[2021-11-28 15:18:00] CPU #2: 1.49 kH/s
[2021-11-28 15:18:00] CPU #1: 1.51 kH/s
[2021-11-28 15:18:00] CPU #0: 1.49 kH/s
[2021-11-28 15:18:00] CPU #3: 1.51 kH/s
[2021-11-28 15:18:05] Total: 11.35 kH/s
[2021-11-28 15:18:10] CPU #5: 2.68 kH/s
[2021-11-28 15:18:10] Total: 11.35 kH/s
[2021-11-28 15:18:10] CPU #4: 2.68 kH/s
[2021-11-28 15:18:10] CPU #2: 1.49 kH/s
[2021-11-28 15:18:10] CPU #0: 1.50 kH/s
[2021-11-28 15:18:10] CPU #1: 1.51 kH/s
[2021-11-28 15:18:10] CPU #3: 1.51 kH/s
[2021-11-28 15:18:15] Total: 11.37 kH/s
[2021-11-28 15:18:20] CPU #5: 2.68 kH/s
[2021-11-28 15:18:20] Total: 11.37 kH/s
[2021-11-28 15:18:20] CPU #4: 2.68 kH/s
[2021-11-28 15:18:20] CPU #2: 1.49 kH/s
[2021-11-28 15:18:20] CPU #1: 1.51 kH/s
[2021-11-28 15:18:20] CPU #0: 1.50 kH/s
[2021-11-28 15:18:20] CPU #3: 1.51 kH/s
[2021-11-28 15:18:25] Total: 11.37 kH/s
[2021-11-28 15:18:30] CPU #5: 2.68 kH/s
[2021-11-28 15:18:30] Total: 11.37 kH/s
[2021-11-28 15:18:30] CPU #4: 2.68 kH/s
[2021-11-28 15:18:30] CPU #2: 1.49 kH/s
[2021-11-28 15:18:30] CPU #1: 1.51 kH/s
[2021-11-28 15:18:30] CPU #0: 1.50 kH/s
[2021-11-28 15:18:30] CPU #3: 1.51 kH/s
[2021-11-28 15:18:35] Total: 11.37 kH/s
[2021-11-28 15:18:40] CPU #5: 2.68 kH/s
[2021-11-28 15:18:40] Total: 11.37 kH/s
[2021-11-28 15:18:40] CPU #4: 2.68 kH/s
[2021-11-28 15:18:40] CPU #2: 1.49 kH/s
[2021-11-28 15:18:40] CPU #1: 1.51 kH/s
[2021-11-28 15:18:40] CPU #0: 1.50 kH/s
[2021-11-28 15:18:40] CPU #3: 1.51 kH/s
[2021-11-28 15:18:45] Total: 11.36 kH/s
[2021-11-28 15:18:50] CPU #5: 2.68 kH/s
[2021-11-28 15:18:50] Total: 11.35 kH/s
[2021-11-28 15:18:50] CPU #4: 2.68 kH/s
[2021-11-28 15:18:50] CPU #2: 1.49 kH/s
[2021-11-28 15:18:50] CPU #1: 1.51 kH/s
[2021-11-28 15:18:50] CPU #3: 1.51 kH/s
[2021-11-28 15:18:50] CPU #0: 1.49 kH/s
[2021-11-28 15:18:55] Total: 11.36 kH/s
[2021-11-28 15:19:00] CPU #5: 2.68 kH/s
[2021-11-28 15:19:00] Total: 11.37 kH/s
[2021-11-28 15:19:00] CPU #4: 2.68 kH/s
[2021-11-28 15:19:00] CPU #2: 1.49 kH/s
[2021-11-28 15:19:00] CPU #1: 1.51 kH/s
[2021-11-28 15:19:00] CPU #0: 1.50 kH/s
[2021-11-28 15:19:00] CPU #3: 1.51 kH/s
[2021-11-28 15:19:05] Total: 11.37 kH/s
[2021-11-28 15:19:10] CPU #5: 2.68 kH/s
[2021-11-28 15:19:10] Total: 11.37 kH/s
[2021-11-28 15:19:10] CPU #4: 2.68 kH/s
[2021-11-28 15:19:10] CPU #2: 1.49 kH/s
[2021-11-28 15:19:10] CPU #1: 1.51 kH/s
[2021-11-28 15:19:10] CPU #0: 1.50 kH/s
[2021-11-28 15:19:10] CPU #3: 1.51 kH/s
[2021-11-28 15:19:15] Total: 11.37 kH/s
[2021-11-28 15:19:20] CPU #5: 2.68 kH/s
[2021-11-28 15:19:20] Total: 11.37 kH/s
[2021-11-28 15:19:20] CPU #4: 2.68 kH/s
[2021-11-28 15:19:20] CPU #2: 1.49 kH/s
[2021-11-28 15:19:20] CPU #1: 1.51 kH/s
[2021-11-28 15:19:20] CPU #0: 1.50 kH/s
[2021-11-28 15:19:20] CPU #3: 1.51 kH/s
[2021-11-28 15:19:25] Total: 11.37 kH/s
[2021-11-28 15:19:30] CPU #5: 2.67 kH/s
[2021-11-28 15:19:30] Total: 11.36 kH/s
[2021-11-28 15:19:30] CPU #4: 2.67 kH/s
[2021-11-28 15:19:30] CPU #2: 1.49 kH/s
[2021-11-28 15:19:30] CPU #1: 1.51 kH/s
[2021-11-28 15:19:30] CPU #3: 1.51 kH/s
[2021-11-28 15:19:30] CPU #0: 1.49 kH/s
[2021-11-28 15:19:35] Total: 11.35 kH/s
[2021-11-28 15:19:40] CPU #5: 2.68 kH/s
[2021-11-28 15:19:40] Total: 11.36 kH/s
[2021-11-28 15:19:40] CPU #4: 2.68 kH/s
[2021-11-28 15:19:40] CPU #2: 1.49 kH/s
[2021-11-28 15:19:40] CPU #1: 1.51 kH/s
[2021-11-28 15:19:40] CPU #0: 1.50 kH/s
[2021-11-28 15:19:40] CPU #3: 1.51 kH/s
[2021-11-28 15:19:45] Total: 11.37 kH/s
[2021-11-28 15:19:50] CPU #5: 2.68 kH/s
[2021-11-28 15:19:50] Total: 11.37 kH/s
[2021-11-28 15:19:50] CPU #4: 2.68 kH/s
[2021-11-28 15:19:50] CPU #2: 1.49 kH/s
[2021-11-28 15:19:50] CPU #0: 1.50 kH/s
[2021-11-28 15:19:50] CPU #1: 1.51 kH/s
[2021-11-28 15:19:50] CPU #3: 1.51 kH/s
[2021-11-28 15:19:55] Total: 11.37 kH/s
[2021-11-28 15:20:00] CPU #5: 2.68 kH/s
[2021-11-28 15:20:00] Total: 11.36 kH/s
[2021-11-28 15:20:00] CPU #4: 2.68 kH/s
[2021-11-28 15:20:00] CPU #2: 1.49 kH/s
[2021-11-28 15:20:00] CPU #0: 1.50 kH/s
[2021-11-28 15:20:00] CPU #3: 1.51 kH/s
[2021-11-28 15:20:00] CPU #1: 1.51 kH/s
[2021-11-28 15:20:05] Total: 11.36 kH/s
[2021-11-28 15:20:10] CPU #5: 2.68 kH/s
[2021-11-28 15:20:10] Total: 11.37 kH/s
[2021-11-28 15:20:10] CPU #4: 2.68 kH/s
[2021-11-28 15:20:10] CPU #2: 1.49 kH/s
[2021-11-28 15:20:10] CPU #0: 1.50 kH/s
[2021-11-28 15:20:10] CPU #1: 1.51 kH/s
[2021-11-28 15:20:10] CPU #3: 1.51 kH/s
[2021-11-28 15:20:15] Total: 11.36 kH/s
[2021-11-28 15:20:20] CPU #5: 2.68 kH/s
[2021-11-28 15:20:20] Total: 11.34 kH/s
[2021-11-28 15:20:20] CPU #4: 2.68 kH/s
[2021-11-28 15:20:20] CPU #2: 1.49 kH/s
[2021-11-28 15:20:20] CPU #3: 1.51 kH/s
[2021-11-28 15:20:20] CPU #0: 1.50 kH/s
[2021-11-28 15:20:20] CPU #1: 1.51 kH/s
[2021-11-28 15:20:25] Total: 11.37 kH/s
[2021-11-28 15:20:30] CPU #5: 2.68 kH/s
[2021-11-28 15:20:30] Total: 11.37 kH/s
[2021-11-28 15:20:30] CPU #4: 2.68 kH/s
[2021-11-28 15:20:30] CPU #2: 1.49 kH/s
[2021-11-28 15:20:30] CPU #3: 1.51 kH/s
[2021-11-28 15:20:30] CPU #0: 1.50 kH/s
[2021-11-28 15:20:30] CPU #1: 1.51 kH/s
[2021-11-28 15:20:35] Total: 11.37 kH/s
[2021-11-28 15:20:40] CPU #5: 2.68 kH/s
[2021-11-28 15:20:40] Total: 11.37 kH/s
[2021-11-28 15:20:40] CPU #4: 2.68 kH/s
[2021-11-28 15:20:40] CPU #2: 1.49 kH/s
[2021-11-28 15:20:40] CPU #3: 1.51 kH/s
[2021-11-28 15:20:40] CPU #0: 1.50 kH/s
[2021-11-28 15:20:40] CPU #1: 1.51 kH/s
[2021-11-28 15:20:45] Total: 11.37 kH/s

Total Scores: 11.37,11.36,11.35,11.34

##########################################################################

Testing clockspeeds again. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
15:20:15: 2016/1512MHz  6.06 100%   0% 100%   0%   0%   0%  52.8°C

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1500 (1497.473/1495.964/1500.361)
Cpufreq OPP: 1416    Measured: 1405 (1404.549/1406.522/1404.106)
Cpufreq OPP: 1200    Measured: 1190 (1189.031/1189.140/1188.976)
Cpufreq OPP: 1008    Measured: 1000 (998.965/999.582/999.424)
Cpufreq OPP:  816    Measured:  810 (807.706/809.051/809.566)
Cpufreq OPP:  600    Measured:  595 (594.996/594.604/594.180)
Cpufreq OPP:  408    Measured:  405 (404.121/404.030/403.159)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 2016    Measured: 1730 (1726.575/2006.048/1674.592)
Cpufreq OPP: 1800    Measured: 1495 (1490.542/988.961/1658.152)
Cpufreq OPP: 1608    Measured: 1450 (1448.409/1599.116/1604.780)
Cpufreq OPP: 1416    Measured: 1120 (1118.616/1712.763/852.340)
Cpufreq OPP: 1200    Measured: 1200 (1196.877/1197.067/1197.446)
Cpufreq OPP: 1008    Measured:  700 (698.890/597.498/1006.067)
Cpufreq OPP:  816    Measured:  815 (813.360/399.802/955.930)
Cpufreq OPP:  600    Measured:  600 (596.414/306.465/691.904)
Cpufreq OPP:  408    Measured:  410 (406.519/406.636/257.621)

##########################################################################

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
14:53:03: 2016/1512MHz  1.02   8%   0%   8%   0%   0%   0%  28.1°C
14:54:34: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  28.1°C
14:56:04: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  26.2°C
14:57:34: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  26.2°C
14:59:04: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  25.6°C
15:00:34: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  25.6°C
15:02:05: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  33.9°C
15:03:35: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  30.0°C
15:05:05: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  31.1°C
15:06:35: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  29.4°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
15:07:40: 2016/1512MHz  1.00   9%   0%   9%   0%   0%   0%  29.4°C
15:08:00: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  38.1°C
15:08:20: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  28.1°C
15:08:40: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  37.5°C
15:09:00: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  28.1°C
15:09:20: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  38.1°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
15:09:28: 2016/1512MHz  1.00   9%   0%   9%   0%   0%   0%  32.2°C
15:10:13: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  26.9°C
15:10:58: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  26.2°C
15:11:43: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  32.8°C
15:12:28: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  34.4°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
15:12:57: 2016/1512MHz  1.00   9%   0%   9%   0%   0%   0%  32.8°C
15:13:18: 2016/1512MHz  2.33  89%   0%  88%   0%   0%   0%  41.7°C
15:13:38: 2016/1512MHz  3.32  87%   1%  85%   0%   0%   0%  41.7°C
15:13:59: 2016/1512MHz  3.71  87%   1%  86%   0%   0%   0%  42.8°C
15:14:22: 2016/1512MHz  4.18  87%   0%  86%   0%   0%   0%  45.0°C
15:14:46: 2016/1512MHz  4.79  88%   1%  87%   0%   0%   0%  45.6°C
15:15:08: 2016/1512MHz  5.25  89%   0%  88%   0%   0%   0%  46.2°C
15:15:28: 2016/1512MHz  5.41  84%   0%  83%   0%   0%   0%  46.2°C
15:15:48: 2016/1512MHz  4.97  91%   1%  89%   0%   0%   0%  46.2°C

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
15:15:50: 2016/1512MHz  4.89  10%   0%  10%   0%   0%   0%  41.1°C
15:16:33: 2016/1512MHz  5.43  99%   0%  99%   0%   0%   0%  51.1°C
15:17:17: 2016/1512MHz  5.77 100%   0%  99%   0%   0%   0%  52.2°C
15:18:02: 2016/1512MHz  5.89 100%   0%  99%   0%   0%   0%  52.2°C
15:18:46: 2016/1512MHz  5.99 100%   0% 100%   0%   0%   0%  52.8°C
15:19:30: 2016/1512MHz  6.03 100%   0%  99%   0%   0%   0%  52.8°C
15:20:15: 2016/1512MHz  6.06 100%   0% 100%   0%   0%   0%  52.8°C

##########################################################################

Linux 5.10.63-rockchip64 (nanopineo4) 	11/28/21 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          12.94    0.00    0.20    0.05    0.00   86.81

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           1.61        37.29        26.84         0.00     422105     303804          0
mmcblk2boot0      0.01         0.02         0.00         0.00        232          0          0
mmcblk2boot1      0.01         0.02         0.00         0.00        232          0          0
zram0             0.05         0.20         0.00         0.00       2248          4          0
zram1             0.03         0.05         0.30         0.00        524       3440          0

              total        used        free      shared  buff/cache   available
Mem:          977Mi       186Mi       688Mi       4.0Mi       102Mi       714Mi
Swap:         488Mi          0B       488Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	500556	0	5

CPU topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
CPU     cluster  policy   speed  speed   core type
  0        0        0      408    1512   Cortex-A53
  1        0        0      408    1512   Cortex-A53
  2        0        0      408    1512   Cortex-A53
  3        0        0      408    1512   Cortex-A53
  4        1        4      408    2016   Cortex-A72
  5        1        4      408    2016   Cortex-A72

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          6
On-line CPU(s) list:             0-5
Thread(s) per core:              1
Core(s) per socket:              3
Socket(s):                       2
NUMA node(s):                    1
Vendor ID:                       ARM
Model:                           4
Model name:                      Cortex-A53
Stepping:                        r0p4
CPU max MHz:                     2016.0000
CPU min MHz:                     408.0000
BogoMIPS:                        48.00
NUMA node0 CPU(s):               0-5
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Vulnerable
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Vulnerable
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid


| FriendlyARM NanoPi NEO4 | 2016/1512 MHz | 5.10 | Focal arm64 | 6970 | 255390 | 924310 | 2450 | 6190 | 11.36 | []() |
