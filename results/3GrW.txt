sbc-bench v0.8.6  (Mon, 29 Nov 2021 10:45:19 +0100)

Distributor ID:	Ubuntu
Description:	Ubuntu 21.10
Release:	21.10
Codename:	impish

Armbian release info:
BOARD=uefi-arm64
BOARD_NAME="uefi-arm64"
BOARDFAMILY=uefi-arm64
BUILD_REPOSITORY_URL=https://github.com/rpardini/armbian-build
BUILD_REPOSITORY_COMMIT=422a78f
DISTRIBUTION_CODENAME=impish
DISTRIBUTION_STATUS=csc
VERSION=20211122g-rpardini
LINUXFAMILY=arm64
ARCH=arm64
IMAGE_TYPE=user-built
BOARD_TYPE=wip
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image

BIOS/UEFI:
	Vendor: PHYTIUM LTD
	Version: BIOS_TAG
	Release Date: Aug  5 2021

/usr/bin/gcc (Ubuntu 11.2.0-7ubuntu2) 11.2.0

Uptime: 10:45:20 up 25 min,  2 users,  load average: 0.86, 0.27, 0.10

Linux 5.13.0-21-generic (uefi-arm64) 	11/29/21 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.29    0.01    0.22    0.26    0.00   99.22

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
nvme0n1           0.23         7.15         0.00         0.00      11148          0          0
sda               7.38       196.68       123.87         0.00     306503     193045          0
zram0             0.38         1.51         0.00         0.00       2352          4          0
zram1             0.17         0.30         1.89         0.00        468       2940          0

               total        used        free      shared  buff/cache   available
Mem:            15Gi       344Mi        15Gi       9.0Mi       177Mi        14Gi
Swap:          7.8Gi          0B       7.8Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	8141568	0	5

##########################################################################

Checking cpufreq OPP (Phytium FTC663):

No cpufreq support available. Measured on cpu1: 2300 Mhz (2298.562/2298.222/2298.562)

##########################################################################

Executing benchmark on cpu0 (Phytium FTC663):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   2818.5 MB/s (0.2%)
 C copy backwards (32 byte blocks)                    :   2816.5 MB/s
 C copy backwards (64 byte blocks)                    :   2836.5 MB/s
 C copy                                               :   2904.4 MB/s
 C copy prefetched (32 bytes step)                    :   3049.1 MB/s (0.1%)
 C copy prefetched (64 bytes step)                    :   3048.5 MB/s
 C 2-pass copy                                        :   2732.3 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   2805.2 MB/s
 C 2-pass copy prefetched (64 bytes step)             :   2818.6 MB/s
 C fill                                               :   7443.1 MB/s (4.7%)
 C fill (shuffle within 16 byte blocks)               :   6379.4 MB/s
 C fill (shuffle within 32 byte blocks)               :   6377.5 MB/s
 C fill (shuffle within 64 byte blocks)               :   6384.8 MB/s
 ---
 standard memcpy                                      :   2923.6 MB/s
 standard memset                                      :   7310.5 MB/s (4.0%)
 ---
 NEON LDP/STP copy                                    :   2902.2 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1734.1 MB/s
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1733.1 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   3102.3 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   3103.5 MB/s
 NEON LD1/ST1 copy                                    :   2911.0 MB/s
 NEON STP fill                                        :   7486.7 MB/s (4.8%)
 NEON STNP fill                                       :   6324.5 MB/s (0.2%)
 ARM LDP/STP copy                                     :   2901.5 MB/s
 ARM STP fill                                         :   7459.8 MB/s (4.6%)
 ARM STNP fill                                        :   6358.4 MB/s (1.5%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :     97.0 MB/s
 NEON LDP/STP 2-pass copy (from framebuffer)          :     96.4 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :    159.6 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :    157.6 MB/s
 ARM LDP/STP copy (from framebuffer)                  :     53.8 MB/s
 ARM LDP/STP 2-pass copy (from framebuffer)           :     53.6 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.9 ns          /     6.1 ns 
    131072 :    5.9 ns          /     8.1 ns 
    262144 :    8.4 ns          /    10.7 ns 
    524288 :    9.7 ns          /    12.2 ns 
   1048576 :   10.5 ns          /    13.1 ns 
   2097152 :   12.9 ns          /    16.6 ns 
   4194304 :   20.8 ns          /    28.3 ns 
   8388608 :   72.4 ns          /   112.8 ns 
  16777216 :  124.6 ns          /   172.2 ns 
  33554432 :  151.2 ns          /   191.5 ns 
  67108864 :  171.0 ns          /   209.2 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.9 ns          /     6.1 ns 
    131072 :    5.9 ns          /     8.1 ns 
    262144 :    6.9 ns          /     8.8 ns 
    524288 :    7.5 ns          /     9.1 ns 
   1048576 :    7.8 ns          /     9.2 ns 
   2097152 :    8.1 ns          /    10.0 ns 
   4194304 :   19.0 ns          /    23.6 ns 
   8388608 :   60.4 ns          /    92.7 ns 
  16777216 :  108.9 ns          /   146.8 ns 
  33554432 :  133.9 ns          /   163.4 ns 
  67108864 :  147.9 ns          /   169.8 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Phytium FTC663)

OpenSSL 1.1.1l, built on 24 Aug 2021
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     448906.82k   838610.77k  1071501.57k  1140889.26k  1175950.68k  1176627.88k
aes-128-cbc     448309.02k   838236.80k  1071123.46k  1137471.15k  1174702.76k  1177414.31k
aes-192-cbc     417894.86k   732564.84k   902469.38k   950655.32k   974531.24k   974181.72k
aes-192-cbc     417763.03k   732403.20k   902176.17k   952195.07k   972652.54k   974422.02k
aes-256-cbc     386490.83k   644980.63k   774557.01k   810183.34k   826545.49k   827899.90k
aes-256-cbc     386380.99k   645200.09k   774814.63k   810445.14k   827790.68k   829003.09k

##########################################################################

Executing benchmark single-threaded on cpu0 (Phytium FTC663)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - 64000000 - - - - - -

RAM size:   15901 MB,  # CPU hardware threads:   8
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2225   100   2166   2165  |      28530   100   2436   2436
23:       2011   100   2050   2050  |      28149   100   2437   2437
24:       1906   100   2050   2050  |      27681   100   2430   2430
25:       1823   100   2082   2082  |      27036   100   2407   2406
----------------------------------  | ------------------------------
Avr:             100   2087   2087  |              100   2428   2427
Tot:             100   2257   2257

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   15901 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      15315   727   2049  14899  |     218450   786   2369  18633
23:      14425   739   1989  14698  |     213637   785   2355  18488
24:      13743   750   1970  14777  |     209035   787   2333  18347
25:      13115   758   1976  14974  |     203777   788   2303  18135
----------------------------------  | ------------------------------
Avr:             743   1996  14837  |              786   2340  18401
Tot:             765   2168  16619

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:   15901 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      14929   712   2039  14524  |     218805   788   2370  18663
23:      14995   761   2007  15278  |     214288   788   2354  18544
24:      13869   756   1973  14913  |     209393   788   2333  18378
25:      13095   758   1972  14952  |     204340   789   2306  18185
----------------------------------  | ------------------------------
Avr:             747   1998  14917  |              788   2341  18443
Tot:             767   2169  16680

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs LE)

LE
CPU Freq: - - - - - - 512000000 - -

RAM size:   15901 MB,  # CPU hardware threads:   8
RAM usage:   1765 MB,  # Benchmark threads:      8

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:      15220   721   2053  14806  |     221379   796   2373  18883
23:      14396   743   1974  14668  |     217314   797   2360  18806
24:      13730   752   1962  14763  |     212787   799   2339  18676
25:      13000   766   1938  14843  |     206807   797   2308  18405
----------------------------------  | ------------------------------
Avr:             746   1982  14770  |              797   2345  18692
Tot:             771   2163  16731

Compression: 14837,14917,14770
Decompression: 18401,18443,18692
Total: 16619,16680,16731

##########################################################################

Testing clockspeeds again. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
10:56:02:   ---      7.13  92%   1%  90%   0%   0%   0%  24.9°C

Checking cpufreq OPP (Phytium FTC663):

No cpufreq support available. Measured on cpu1: 2300 Mhz (2295.215/2297.829/2296.757)

##########################################################################

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
10:45:23:   ---      0.86   0%   0%   0%   0%   0%   0%  20.9°C
10:46:53:   ---      1.12  13%   0%  12%   0%   0%   0%  20.9°C
10:48:23:   ---      1.02  12%   0%  12%   0%   0%   0%  21.9°C
10:49:53:   ---      1.00  12%   0%  12%   0%   0%   0%  21.9°C

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
10:50:45:   ---      1.00   2%   0%   2%   0%   0%   0%  22.9°C
10:51:05:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C
10:51:25:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C
10:51:45:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C
10:52:05:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C
10:52:25:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
10:52:33:   ---      1.00   3%   0%   2%   0%   0%   0%  22.9°C
10:53:18:   ---      1.00  12%   0%  12%   0%   0%   0%  22.9°C

System health while running 7-zip multi core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
10:53:37:   ---      1.00   3%   0%   3%   0%   0%   0%  22.9°C
10:53:57:   ---      3.06  95%   0%  94%   0%   0%   0%  22.9°C
10:54:18:   ---      4.45  89%   1%  87%   0%   0%   0%  22.9°C
10:54:39:   ---      5.28  93%   0%  92%   0%   0%   0%  23.9°C
10:55:00:   ---      5.58  95%   1%  94%   0%   0%   0%  23.9°C
10:55:20:   ---      5.84  88%   1%  86%   0%   0%   0%  23.9°C
10:55:41:   ---      6.45  93%   0%  92%   0%   0%   0%  24.9°C
10:56:02:   ---      7.13  92%   1%  90%   0%   0%   0%  24.9°C

##########################################################################

Linux 5.13.0-21-generic (uefi-arm64) 	11/29/21 	_aarch64_	(8 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           9.38    0.00    0.25    0.22    0.00   90.15

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
nvme0n1           0.16         5.05         0.00         0.00      11148          0          0
sda               5.71       141.49       129.91         0.00     312519     286933          0
zram0             0.27         1.06         0.00         0.00       2352          4          0
zram1             0.13         0.22         1.36         0.00        484       3008          0

               total        used        free      shared  buff/cache   available
Mem:            15Gi       555Mi        14Gi       9.0Mi       183Mi        14Gi
Swap:          7.8Gi          0B       7.8Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	8141568	0	5

CPU topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0       36                             Phytium FTC663
  1       36                             Phytium FTC663
  2       36                             Phytium FTC663
  3       36                             Phytium FTC663
  4       36                             Phytium FTC663
  5       36                             Phytium FTC663
  6       36                             Phytium FTC663
  7       36                             Phytium FTC663

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          8
On-line CPU(s) list:             0-7
Thread(s) per core:              1
Core(s) per socket:              8
Socket(s):                       1
NUMA node(s):                    1
Vendor ID:                       0x70
Model:                           3
Stepping:                        0x1
BogoMIPS:                        96.00
L1d cache:                       256 KiB
L1i cache:                       256 KiB
L2 cache:                        8 MiB
L3 cache:                        4 MiB
NUMA node0 CPU(s):               0-7
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Mitigation; PTI
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid

cpu0/index2: 2048K, level: 2, type: Unified
cpu0/index0: 32K, level: 1, type: Data
cpu0/index3: 4096K, level: 3, type: Unified
cpu0/index1: 32K, level: 1, type: Instruction
cpu1/index2: 2048K, level: 2, type: Unified
cpu1/index0: 32K, level: 1, type: Data
cpu1/index3: 4096K, level: 3, type: Unified
cpu1/index1: 32K, level: 1, type: Instruction
cpu2/index2: 2048K, level: 2, type: Unified
cpu2/index0: 32K, level: 1, type: Data
cpu2/index3: 4096K, level: 3, type: Unified
cpu2/index1: 32K, level: 1, type: Instruction
cpu3/index2: 2048K, level: 2, type: Unified
cpu3/index0: 32K, level: 1, type: Data
cpu3/index3: 4096K, level: 3, type: Unified
cpu3/index1: 32K, level: 1, type: Instruction
cpu4/index2: 2048K, level: 2, type: Unified
cpu4/index0: 32K, level: 1, type: Data
cpu4/index3: 4096K, level: 3, type: Unified
cpu4/index1: 32K, level: 1, type: Instruction
cpu5/index2: 2048K, level: 2, type: Unified
cpu5/index0: 32K, level: 1, type: Data
cpu5/index3: 4096K, level: 3, type: Unified
cpu5/index1: 32K, level: 1, type: Instruction
cpu6/index2: 2048K, level: 2, type: Unified
cpu6/index0: 32K, level: 1, type: Data
cpu6/index3: 4096K, level: 3, type: Unified
cpu6/index1: 32K, level: 1, type: Instruction
cpu7/index2: 2048K, level: 2, type: Unified
cpu7/index0: 32K, level: 1, type: Data
cpu7/index3: 4096K, level: 3, type: Unified
cpu7/index1: 32K, level: 1, type: Instruction

|  |  MHz | 5.13 | Impish arm64 | 16680 | 448610 | 828450 | 2920 | 7310 | - | []() |
