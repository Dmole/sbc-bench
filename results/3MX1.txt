sbc-bench v0.9.1 Radxa Zero (Thu, 20 Jan 2022 21:53:46 +0100)

Distributor ID:	Debian
Description:	Debian GNU/Linux 10 (buster)
Release:	10
Codename:	buster

Armbian release info:
BOARD=radxa-zero
BOARD_NAME="Radxa Zero"
BOARDFAMILY=meson-g12a
BUILD_REPOSITORY_URL=https://github.com/armbian/build
BUILD_REPOSITORY_COMMIT=d3386b548-dirty
DISTRIBUTION_CODENAME=buster
DISTRIBUTION_STATUS=supported
VERSION=21.08.6
LINUXFAMILY=meson64
ARCH=arm64
IMAGE_TYPE=stable
BOARD_TYPE=wip
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Debian 8.3.0-6) 8.3.0

Uptime: 21:53:47 up 22:49,  2 users,  load average: 0.28, 0.07, 0.02

Linux 5.10.81-meson64 (radxa-zero) 	01/20/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.06    0.00    0.10    0.00    0.00   99.84

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           0.07         2.84         1.71     233515     140203
mmcblk0boot1      0.00         0.00         0.00        348          0
mmcblk0boot0      0.00         0.00         0.00        348          0
zram0             0.01         0.03         0.00       2264          4
zram1             0.01         0.01         0.12        448       9904

              total        used        free      shared  buff/cache   available
Mem:          1.9Gi       157Mi       1.6Gi       5.0Mi       170Mi       1.7Gi
Swap:         991Mi          0B       991Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1015208	0	5

##########################################################################

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1800    Measured: 1800 (1797.345/1797.966/1786.840)
Cpufreq OPP: 1704    Measured: 1705 (1701.818/1697.576/1701.029)
Cpufreq OPP: 1608    Measured: 1610 (1605.598/1605.698/1605.498)
Cpufreq OPP: 1512    Measured: 1500 (1497.768/1497.820/1493.213)
Cpufreq OPP: 1398    Measured: 1400 (1395.864/1395.065/1395.864)
Cpufreq OPP: 1200    Measured: 1195 (1194.392/1197.799/1196.329)
Cpufreq OPP: 1000    Measured: 1000 (995.380/997.747/998.000)
Cpufreq OPP:  666    Measured:  665 (664.903/664.542/663.043)
Cpufreq OPP:  500    Measured:  500 (497.993/497.087/498.040)
Cpufreq OPP:  250    Measured:  250 (247.905/246.770/247.777)
Cpufreq OPP:  100    Measured:  100 (97.942/98.027/99.046)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1605.3 MB/s (1.6%)
 C copy backwards (32 byte blocks)                    :   1604.6 MB/s (3.0%)
 C copy backwards (64 byte blocks)                    :   1597.6 MB/s (1.1%)
 C copy                                               :   1548.9 MB/s (1.3%)
 C copy prefetched (32 bytes step)                    :   1265.5 MB/s
 C copy prefetched (64 bytes step)                    :   1443.2 MB/s
 C 2-pass copy                                        :   1506.0 MB/s (0.2%)
 C 2-pass copy prefetched (32 bytes step)             :   1120.2 MB/s (0.5%)
 C 2-pass copy prefetched (64 bytes step)             :    911.2 MB/s
 C fill                                               :   5354.0 MB/s
 C fill (shuffle within 16 byte blocks)               :   5361.4 MB/s
 C fill (shuffle within 32 byte blocks)               :   5362.3 MB/s (0.4%)
 C fill (shuffle within 64 byte blocks)               :   5364.4 MB/s (0.4%)
 ---
 standard memcpy                                      :   1589.0 MB/s
 standard memset                                      :   5359.1 MB/s
 ---
 NEON LDP/STP copy                                    :   1599.5 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1138.9 MB/s (0.6%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1448.0 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1908.2 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1907.8 MB/s (0.3%)
 NEON LD1/ST1 copy                                    :   1592.1 MB/s (0.8%)
 NEON STP fill                                        :   5364.1 MB/s (0.1%)
 NEON STNP fill                                       :   5203.4 MB/s (5.9%)
 ARM LDP/STP copy                                     :   1598.5 MB/s
 ARM STP fill                                         :   5360.6 MB/s (0.4%)
 ARM STNP fill                                        :   5200.1 MB/s (0.4%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :    208.4 MB/s
 NEON LDP/STP 2-pass copy (from framebuffer)          :    212.8 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :     56.0 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :     57.0 MB/s
 ARM LDP/STP copy (from framebuffer)                  :    108.4 MB/s (0.1%)
 ARM LDP/STP 2-pass copy (from framebuffer)           :    110.2 MB/s (0.2%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.8 ns          /     6.4 ns 
    131072 :    5.8 ns          /     9.0 ns 
    262144 :    6.9 ns          /    10.0 ns 
    524288 :    8.6 ns          /    12.1 ns 
   1048576 :   85.7 ns          /   132.2 ns 
   2097152 :  126.9 ns          /   169.6 ns 
   4194304 :  152.1 ns          /   188.3 ns 
   8388608 :  165.1 ns          /   196.5 ns 
  16777216 :  172.2 ns          /   201.5 ns 
  33554432 :  176.6 ns          /   204.2 ns 
  67108864 :  180.1 ns          /   207.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.8 ns          /     6.4 ns 
    131072 :    5.8 ns          /     9.0 ns 
    262144 :    6.9 ns          /    10.0 ns 
    524288 :    8.6 ns          /    12.0 ns 
   1048576 :   85.7 ns          /   132.2 ns 
   2097152 :  126.5 ns          /   170.4 ns 
   4194304 :  145.7 ns          /   179.8 ns 
   8388608 :  156.8 ns          /   188.0 ns 
  16777216 :  161.9 ns          /   188.2 ns 
  33554432 :  164.5 ns          /   189.9 ns 
  67108864 :  165.9 ns          /   190.8 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A53)

OpenSSL 1.1.1d, built on 10 Sep 2019
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     114522.67k   364928.17k   788952.75k  1156498.43k  1336644.95k  1349348.01k
aes-128-cbc     114738.85k   365848.43k   789709.91k  1157736.11k  1337991.17k  1352690.35k
aes-192-cbc     110137.94k   333067.50k   659370.15k   901096.45k  1007995.56k  1011138.56k
aes-192-cbc     110261.75k   332938.62k   659889.49k   902021.12k  1009281.71k  1017626.62k
aes-256-cbc     107730.39k   311255.68k   579503.02k   758675.11k   833511.42k   838270.98k
aes-256-cbc     107604.50k   311346.26k   579634.94k   759041.71k   833688.92k   838833.49k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1785  1788  1794  1796  1797  1797  1796  1797  1797

RAM size:    1982 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1031    99   1013   1003  |      20156   100   1727   1721
23:       1012    99   1042   1032  |      19706   100   1712   1706
24:       1002    99   1088   1077  |      19217   100   1694   1687
25:        995    99   1147   1137  |      18813   100   1681   1675
----------------------------------  | ------------------------------
Avr:              99   1072   1062  |              100   1704   1697
Tot:              99   1388   1380

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1787  1787  1788  1795  1797  1797  1797  1797  1797

RAM size:    1982 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2764   332    810   2689  |      77438   395   1672   6607
23:       2728   332    837   2780  |      75297   393   1656   6515
24:       2702   332    875   2905  |      74176   395   1647   6512
25:       2677   333    917   3057  |      72354   395   1632   6439
----------------------------------  | ------------------------------
Avr:             332    860   2858  |              395   1652   6518
Tot:             364   1256   4688

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1792  1797  1798  1798  1798  1798  1798  1798  1798

RAM size:    1982 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2729   325    816   2655  |      77234   394   1672   6589
23:       2703   329    838   2755  |      75626   395   1659   6544
24:       2706   333    873   2911  |      74064   395   1646   6502
25:       2670   332    918   3049  |      72430   395   1632   6446
----------------------------------  | ------------------------------
Avr:             330    861   2842  |              395   1652   6520
Tot:             362   1257   4681

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq:  1792  1796  1796  1795  1796  1796  1796  1796  1796

RAM size:    1982 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2754   330    811   2679  |      76685   391   1672   6543
23:       2723   331    837   2775  |      75672   395   1658   6548
24:       2701   332    874   2904  |      73790   394   1644   6478
25:       2665   332    918   3044  |      72344   395   1631   6438
----------------------------------  | ------------------------------
Avr:             331    860   2851  |              394   1651   6502
Tot:             363   1256   4676

Compression: 2858,2842,2851
Decompression: 6518,6520,6502
Total: 4688,4681,4676

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
22:10:21: 1800MHz  3.72  85%   1%  83%   0%   0%   0%  62.3°C

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 1800    Measured: 1800 (1796.885/1797.886/1797.766)
Cpufreq OPP: 1704    Measured: 1705 (1701.710/1701.172/1702.643)
Cpufreq OPP: 1608    Measured: 1610 (1606.077/1606.037/1605.817)
Cpufreq OPP: 1512    Measured: 1485 (1484.561/1498.464/1477.427)
Cpufreq OPP: 1398    Measured: 1325 (1321.333/1335.974/1385.336)
Cpufreq OPP: 1200    Measured: 1190 (1189.811/1189.579/1174.378)
Cpufreq OPP: 1000    Measured:  590 (587.002/619.074/991.512)
Cpufreq OPP:  666    Measured:  665 (660.488/659.163/660.290)
Cpufreq OPP:  500    Measured:  285 (283.579/331.202/310.299)
Cpufreq OPP:  250    Measured:  250 (246.995/247.359/245.896)
Cpufreq OPP:  100    Measured:  100 (97.510/97.350/97.574)

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu_thermal)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:53:56: 1800MHz  0.39   0%   0%   0%   0%   0%   0%  47.0°C
21:54:36: 1800MHz  0.69  25%   0%  24%   0%   0%   0%  52.2°C
21:55:16: 1800MHz  0.84  25%   0%  25%   0%   0%   0%  54.9°C
21:55:56: 1800MHz  0.92  25%   0%  24%   0%   0%   0%  56.8°C
21:56:36: 1800MHz  0.96  25%   0%  25%   0%   0%   0%  52.6°C
21:57:16: 1800MHz  0.98  25%   0%  24%   0%   0%   0%  52.2°C
21:57:56: 1800MHz  0.99  25%   0%  24%   0%   0%   0%  51.0°C
21:58:36: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
21:59:17: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.4°C
21:59:57: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.4°C
22:00:37: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.0°C
22:01:17: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.0°C
22:01:57: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  49.8°C
22:02:37: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  49.8°C
22:03:17: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  49.7°C
22:03:57: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  49.8°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
22:04:01: 1800MHz  1.00   0%   0%   0%   0%   0%   0%  51.6°C
22:04:17: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  52.4°C
22:04:33: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  50.5°C
22:04:49: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  52.5°C
22:05:05: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  50.6°C
22:05:21: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  51.0°C
22:05:37: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  50.8°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
22:05:49: 1800MHz  1.00   0%   0%   0%   0%   0%   0%  51.9°C
22:05:58: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
22:06:07: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
22:06:16: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
22:06:25: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
22:06:34: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.7°C
22:06:43: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.6°C
22:06:52: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.6°C
22:07:01: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  50.6°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
22:07:09: 1800MHz  1.00   0%   0%   0%   0%   0%   0%  51.2°C
22:07:29: 1800MHz  1.59  83%   0%  81%   0%   0%   0%  58.3°C
22:07:48: 1800MHz  1.96  81%   1%  79%   0%   0%   0%  57.6°C
22:08:07: 1800MHz  2.32  84%   1%  82%   0%   0%   0%  58.6°C
22:08:27: 1800MHz  2.33  82%   0%  80%   0%   0%   0%  59.2°C
22:08:46: 1800MHz  2.76  86%   1%  84%   0%   0%   0%  59.8°C
22:09:05: 1800MHz  3.18  81%   1%  79%   0%   0%   0%  60.5°C
22:09:24: 1800MHz  3.17  81%   1%  79%   0%   0%   0%  59.2°C
22:09:43: 1800MHz  3.42  88%   0%  86%   0%   0%   0%  60.6°C
22:10:02: 1800MHz  3.45  83%   1%  80%   0%   0%   0%  61.1°C
22:10:21: 1800MHz  3.72  85%   1%  83%   0%   0%   0%  62.3°C

##########################################################################

Linux 5.10.81-meson64 (radxa-zero) 	01/20/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.50    0.00    0.11    0.00    0.00   99.39

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           0.08         2.86         1.94     237743     161015
mmcblk0boot1      0.00         0.00         0.00        348          0
mmcblk0boot0      0.00         0.00         0.00        348          0
zram0             0.01         0.03         0.00       2264          4
zram1             0.02         0.01         0.12        448      10072

              total        used        free      shared  buff/cache   available
Mem:          1.9Gi       271Mi       1.5Gi       5.0Mi       182Mi       1.6Gi
Swap:         991Mi          0B       991Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1015208	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0     1000    1800   Cortex-A53 / r0p4
  1        0        0     1000    1800   Cortex-A53 / r0p4
  2        0        0     1000    1800   Cortex-A53 / r0p4
  3        0        0     1000    1800   Cortex-A53 / r0p4

Architecture:        aarch64
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
NUMA node(s):        1
Vendor ID:           ARM
Model:               4
Model name:          Cortex-A53
Stepping:            r0p4
CPU max MHz:         1800.0000
CPU min MHz:         100.0000
BogoMIPS:            48.00
L1d cache:           unknown size
L1i cache:           unknown size
L2 cache:            unknown size
NUMA node0 CPU(s):   0-3
Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid

SoC guess: Amlogic S905X2/S905Y2/S905D2/T962X2
 Compiler: /usr/bin/gcc (Debian 8.3.0-6/aarch64-linux-gnu)
 Userland: arm64
   Kernel: 5.10.81-meson64/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y


| Radxa Zero | 1800 MHz | 5.10 | Buster arm64 | 4680 | 114630 | 838550 | 1590 | 5360 | - |