sbc-bench v0.9.2 SBC2D70 (SSD202D) (Fri, 21 Jan 2022 16:12:15 +0000)

Distributor ID:	Debian
Description:	Debian GNU/Linux bookworm/sid
Release:	unstable
Codename:	sid
Architecture:	armhf

/usr/bin/gcc (Debian 11.2.0-14) 11.2.0

Uptime: 16:12:18 up  4:27,  1 user,  load average: 1.70, 0.46, 0.19

Linux 5.16.0+ (sbc2d70) 	01/21/22 	_armv7l_	(2 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           2.63    0.00    0.16    0.36    0.00   96.84

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
sda               2.54        64.00        15.75         0.00    1027779     253016          0

               total        used        free      shared  buff/cache   available
Mem:           113Mi        24Mi        17Mi       0.0Ki        71Mi        83Mi
Swap:             0B          0B          0B


##########################################################################

Checking cpufreq OPP (Cortex-A7):

Cpufreq OPP: 1700    Measured: 1700 (1698.523/1699.900/1698.487)
Cpufreq OPP: 1600    Measured: 1595 (1590.077/1584.128/1599.472)
Cpufreq OPP: 1512    Measured: 1510 (1507.314/1509.076/1510.629)
Cpufreq OPP: 1458    Measured: 1460 (1456.529/1457.072/1456.611)
Cpufreq OPP: 1404    Measured: 1400 (1399.586/1402.185/1402.855)
Cpufreq OPP: 1350    Measured: 1350 (1348.799/1348.785/1348.982)
Cpufreq OPP: 1296    Measured: 1295 (1294.183/1294.848/1295.027)
Cpufreq OPP: 1188    Measured: 1190 (1187.254/1187.104/1183.256)
Cpufreq OPP: 1080    Measured: 1080 (1078.511/1078.623/1079.379)
Cpufreq OPP: 1008    Measured: 1010 (1007.773/1006.999/1006.410)
Cpufreq OPP:  800    Measured:  800 (799.125/799.231/798.565)
Cpufreq OPP:  600    Measured:  600 (598.567/598.608/599.042)
Cpufreq OPP:  400    Measured:  400 (398.493/399.203/397.908)
Cpufreq OPP:  240    Measured:  240 (238.584/239.330/239.423)

##########################################################################

Executing benchmark on cpu0 (Cortex-A7):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :    377.5 MB/s (2.5%)
 C copy backwards (32 byte blocks)                    :   1121.1 MB/s (0.1%)
 C copy backwards (64 byte blocks)                    :   1120.6 MB/s
 C copy                                               :   1170.6 MB/s
 C copy prefetched (32 bytes step)                    :   1173.8 MB/s
 C copy prefetched (64 bytes step)                    :   1162.4 MB/s
 C 2-pass copy                                        :   1043.5 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1091.3 MB/s (0.9%)
 C 2-pass copy prefetched (64 bytes step)             :   1150.7 MB/s
 C fill                                               :   3190.6 MB/s
 C fill (shuffle within 16 byte blocks)               :   3191.0 MB/s (0.1%)
 C fill (shuffle within 32 byte blocks)               :    550.2 MB/s (4.3%)
 C fill (shuffle within 64 byte blocks)               :    528.2 MB/s (2.3%)
 ---
 standard memcpy                                      :    771.5 MB/s (1.1%)
 standard memset                                      :   3189.4 MB/s
 ---
 NEON read                                            :   1646.9 MB/s
 NEON read prefetched (32 bytes step)                 :   1905.7 MB/s
 NEON read prefetched (64 bytes step)                 :   1907.8 MB/s
 NEON read 2 data streams                             :    494.7 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :    927.9 MB/s
 NEON read 2 data streams prefetched (64 bytes step)  :    974.3 MB/s
 NEON copy                                            :   1171.2 MB/s
 NEON copy prefetched (32 bytes step)                 :    833.9 MB/s
 NEON copy prefetched (64 bytes step)                 :   1174.0 MB/s
 NEON unrolled copy                                   :   1161.1 MB/s
 NEON unrolled copy prefetched (32 bytes step)        :   1156.7 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1120.6 MB/s
 NEON copy backwards                                  :   1123.4 MB/s
 NEON copy backwards prefetched (32 bytes step)       :    776.4 MB/s
 NEON copy backwards prefetched (64 bytes step)       :   1132.1 MB/s (0.8%)
 NEON 2-pass copy                                     :   1043.9 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1124.4 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   1148.1 MB/s
 NEON unrolled 2-pass copy                            :    999.1 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :    990.4 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   1034.4 MB/s
 NEON fill                                            :   3190.8 MB/s (0.2%)
 NEON fill backwards                                  :   3190.9 MB/s
 VFP copy                                             :   1161.8 MB/s (2.9%)
 VFP 2-pass copy                                      :   1014.9 MB/s (2.1%)
 ARM fill (STRD)                                      :   3190.5 MB/s
 ARM fill (STM with 8 registers)                      :   3190.9 MB/s
 ARM fill (STM with 4 registers)                      :   3190.9 MB/s
 ARM copy prefetched (incr pld)                       :   1180.1 MB/s
 ARM copy prefetched (wrap pld)                       :   1125.5 MB/s
 ARM 2-pass copy prefetched (incr pld)                :   1118.0 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :   1088.9 MB/s

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     69.9 MB/s (0.1%)
 NEON copy (from framebuffer)                         :     68.8 MB/s (0.1%)
 NEON 2-pass copy (from framebuffer)                  :     68.3 MB/s
 NEON unrolled copy (from framebuffer)                :     68.4 MB/s
 NEON 2-pass unrolled copy (from framebuffer)         :     67.1 MB/s (0.7%)
 VFP copy (from framebuffer)                          :    420.0 MB/s
 VFP 2-pass copy (from framebuffer)                   :    393.8 MB/s
 ARM copy (from framebuffer)                          :    250.2 MB/s
 ARM 2-pass copy (from framebuffer)                   :    233.6 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.4 ns          /     6.1 ns 
    131072 :    5.3 ns          /     8.9 ns 
    262144 :    6.7 ns          /    10.8 ns 
    524288 :   58.7 ns          /    94.0 ns 
   1048576 :   87.6 ns          /   124.3 ns 
   2097152 :  105.6 ns          /   138.7 ns 
   4194304 :  114.9 ns          /   144.9 ns 
   8388608 :  120.9 ns          /   149.6 ns 
  16777216 :  127.3 ns          /   157.4 ns 
  33554432 :  136.2 ns          /   173.0 ns 
  67108864 :  152.1 ns          /   204.5 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A7)

OpenSSL 1.1.1m, built on 14 Dec 2021
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      26216.78k    37590.42k    42338.56k    43697.49k    44127.57k    44105.73k
aes-128-cbc      26267.35k    37593.60k    42334.63k    43709.10k    44078.42k    44160.34k
aes-192-cbc      23682.08k    32682.58k    36264.79k    37290.67k    37549.40k    37617.66k
aes-192-cbc      23677.94k    32682.90k    36269.82k    37238.10k    37598.55k    37573.97k
aes-256-cbc      21807.86k    29237.31k    32031.83k    32869.03k    33103.87k    33122.99k
aes-256-cbc      21802.68k    29234.75k    32030.38k    32868.69k    33106.60k    33128.45k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A7)

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,2 CPUs LE)

LE
CPU Freq: 64000000 32000000 32000000 - - 256000000 512000000 1024000000 1024000000

RAM size:     113 MB,  # CPU hardware threads:   2
RAM usage:     57 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        831   100    809    809  |      16166   100   1380   1380
----------------------------------  | ------------------------------
Avr:             100    809    809  |              100   1380   1380
Tot:             100   1095   1094

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,2 CPUs LE)

LE
CPU Freq: 64000000 21333333 64000000 32000000 64000000 256000000 256000000 512000000 2048000000

RAM size:     113 MB,  # CPU hardware threads:   2
RAM usage:     63 MB,  # Benchmark threads:      2

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1235   159    755   1202  |      31966   200   1365   2729
----------------------------------  | ------------------------------
Avr:             159    755   1202  |              200   1365   2729
Tot:             180   1060   1966

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,2 CPUs LE)

LE
CPU Freq: 64000000 32000000 64000000 64000000 - - - - -

RAM size:     113 MB,  # CPU hardware threads:   2
RAM usage:     63 MB,  # Benchmark threads:      2

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1234   159    754   1201  |      31958   200   1365   2729
----------------------------------  | ------------------------------
Avr:             159    754   1201  |              200   1365   2729
Tot:             180   1060   1965

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,2 CPUs LE)

LE
CPU Freq: 32000000 32000000 64000000 64000000 128000000 256000000 512000000 1024000000 2048000000

RAM size:     113 MB,  # CPU hardware threads:   2
RAM usage:     63 MB,  # Benchmark threads:      2

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1237   160    754   1203  |      31811   199   1362   2716
----------------------------------  | ------------------------------
Avr:             160    754   1203  |              199   1362   2716
Tot:             179   1058   1960

Compression: 1202,1201,1203
Decompression: 2729,2729,2716
Total: 1966,1965,1960

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
16:23:03: 1700MHz  1.49  86%   0%  85%   0%   0%   0%     0°C

Checking cpufreq OPP (Cortex-A7):

Cpufreq OPP: 1700    Measured: 1700 (1699.130/1698.934/1698.809)
Cpufreq OPP: 1600    Measured: 1600 (1597.751/1595.027/1599.096)
Cpufreq OPP: 1512    Measured: 1515 (1511.407/1509.905/1510.682)
Cpufreq OPP: 1458    Measured: 1275 (1270.688/763.632/976.678)
Cpufreq OPP: 1404    Measured:  600 (598.550/596.202/1395.796)
Cpufreq OPP: 1350    Measured:  495 (494.159/371.178/490.028)
Cpufreq OPP: 1296    Measured:  405 (404.469/469.168/554.154)
Cpufreq OPP: 1188    Measured:  560 (557.718/557.019/557.489)
Cpufreq OPP: 1080    Measured:  535 (532.360/532.534/532.252)
Cpufreq OPP: 1008    Measured:  460 (458.290/514.356/514.375)
Cpufreq OPP:  800    Measured:  370 (365.492/409.915/364.987)
Cpufreq OPP:  600    Measured:  320 (316.949/359.600/414.441)
Cpufreq OPP:  400    Measured:  400 (398.638/397.970/398.290)
Cpufreq OPP:  240    Measured:  205 (204.196/165.371/165.144)

##########################################################################

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
16:12:30: 1700MHz  1.59   3%   0%   2%   0%   0%   0%    --
16:13:10: 1700MHz  1.30  50%   0%  50%   0%   0%   0%    --
16:13:50: 1700MHz  1.15  50%   0%  50%   0%   0%   0%    --
16:14:30: 1700MHz  1.08  50%   0%  50%   0%   0%   0%    --
16:15:10: 1700MHz  1.08  51%   0%  50%   0%   0%   0%    --
16:15:51: 1700MHz  1.12  50%   0%  50%   0%   0%   0%    --
16:16:31: 1700MHz  1.06  50%   0%  49%   0%   0%   0%    --
16:17:11: 1700MHz  1.03  50%   0%  50%   0%   0%   0%    --
16:17:51: 1700MHz  1.01  50%   0%  50%   0%   0%   0%    --
16:18:31: 1700MHz  1.01  50%   0%  50%   0%   0%   0%    --
16:19:11: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
16:19:40: 1700MHz  1.00   4%   0%   3%   0%   0%   0%    --
16:19:56: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --
16:20:12: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --
16:20:28: 1700MHz  1.00  50%   0%  49%   0%   0%   0%    --
16:20:44: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --
16:21:00: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --
16:21:17: 1700MHz  1.00  50%   0%  50%   0%   0%   0%    --

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
16:21:28: 1700MHz  1.00   4%   0%   4%   0%   0%   0%    --
16:21:43: 1700MHz  1.00  50%   0%  49%   0%   0%   0%    --

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
16:21:58: 1700MHz  1.00   4%   0%   4%   0%   0%   0%    --
16:23:03: 1700MHz  1.49  86%   0%  85%   0%   0%   0%    --

##########################################################################

Linux 5.16.0+ (sbc2d70) 	01/21/22 	_armv7l_	(2 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4.68    0.00    0.18    0.36    0.00   94.78

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
sda               2.54        63.68        15.31         0.00    1064975     256052          0

               total        used        free      shared  buff/cache   available
Mem:           113Mi        75Mi        14Mi       0.0Ki        23Mi        32Mi
Swap:             0B          0B          0B

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      240    1700   Cortex-A7 / r0p5
  1        0        0      240    1700   Cortex-A7 / r0p5

Architecture:        armv7l
Byte Order:          Little Endian
CPU(s):              2
On-line CPU(s) list: 0,1
Vendor ID:           ARM
Model name:          Cortex-A7
Model:               5
Thread(s) per core:  1
Core(s) per socket:  2
Socket(s):           1
Stepping:            r0p5
Frequency boost:     enabled
CPU max MHz:         1700.0000
CPU min MHz:         240.0000
BogoMIPS:            20.40
Flags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm

SoC guess: SigmaStar SSD201/SSD202D
 Compiler: /usr/bin/gcc (Debian 11.2.0-14/arm-linux-gnueabihf)
 Userland: armhf
   Kernel: 5.16.0+/armv7l
           CONFIG_HZ=100
           CONFIG_HZ_100=y
           CONFIG_HZ_FIXED=0
           CONFIG_PREEMPT_NONE=y
           CONFIG_PREEMPT_NONE_BUILD=y


| SBC2D70 (SSD202D) | 1700 MHz | 5.16 | Sid armhf | 1960 | 26240 | 33120 | 770 | 3190 | - |