sbc-bench v0.9.2 RPi 4 Model B Rev 1.4 / BCM2711 rev B0 (Sat, 22 Jan 2022 10:44:23 -0500)

Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 11 (bullseye)
Release:	11
Codename:	bullseye
Architecture:	armhf

Raspberry Pi ThreadX version:
Nov 18 2021 16:16:49 
Copyright (c) 2012 Broadcom
version d9b293558b4cef6aabedcc53c178e7604de90788 (clean) (release) (start)

ThreadX configuration (/boot/config.txt):
config_hdmi_boost=7
dtparam=i2c_arm=on
dtparam=i2s=on
dtparam=audio=on
disable_overscan=1
[cm4]
[all]
[pi4]
arm_boost=1
[all]
max_usb_current=1
hdmi_group=2
hdmi_mode=87
hdmi_timings=400 0 100 10 140 1280 10 20 20 2 0 0 0 60 0 43000000 3
display_rotate=3
dtoverlay=i2c-rtc,ds3231
[all]
dtoverlay=gpio-fan,gpiopin=14,temp=60000

Actual ThreadX settings:
arm_boost=1
arm_freq=1800
audio_pwm_mode=514
config_hdmi_boost=7
core_freq=500
core_freq_min=200
disable_commandline_tags=2
disable_l2cache=1
disable_overscan=1
display_hdmi_rotate=-1
display_lcd_rotate=-1
display_rotate=3
dvfs=3
enable_gic=1
force_eeprom_read=1
force_pwm_open=1
framebuffer_ignore_alpha=1
framebuffer_swap=1
gpu_freq=500
gpu_freq_min=250
init_uart_clock=0x2dc6c00
lcd_framerate=60
max_framebuffers=-1
over_voltage_avs=-20000
pause_burst_frames=1
program_serial_random=1
total_mem=8192
hdmi_force_cec_address:0=65535
hdmi_force_cec_address:1=65535
hdmi_group:0=2
hdmi_mode:0=87
hdmi_pixel_freq_limit:0=0x11e1a300
hdmi_pixel_freq_limit:1=0x11e1a300

/usr/bin/gcc (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110

Uptime: 10:44:23 up 4 min,  1 user,  load average: 0.77, 0.33, 0.14

Linux 5.10.63-v7l+ (whitebrick) 	01/22/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           2.16    0.05    2.38    2.07    0.00   93.34

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0          25.72       775.41       349.37     92099.35     228002     102729   27080891

               total        used        free      shared  buff/cache   available
Mem:           7.7Gi        50Mi       7.6Gi       0.0Ki        58Mi       7.5Gi
Swap:           99Mi          0B        99Mi

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	0	-2

##########################################################################

Checking cpufreq OPP (Cortex-A72):

Cpufreq OPP: 1800  ThreadX: 1800  Measured: 1800 @ 0.9260V
Cpufreq OPP: 1700  ThreadX: 1700  Measured: 1700 @ 0.9040V
Cpufreq OPP: 1600  ThreadX: 1600  Measured: 1600 @ 0.8820V
Cpufreq OPP: 1500  ThreadX: 1500  Measured: 1500 @ 0.8600V
Cpufreq OPP: 1400  ThreadX: 1400  Measured: 1385 @ 0.8600V
Cpufreq OPP: 1300  ThreadX: 1300  Measured: 1300 @ 0.8600V
Cpufreq OPP: 1200  ThreadX: 1200  Measured: 1200 @ 0.8600V
Cpufreq OPP: 1100  ThreadX: 1100  Measured: 1100 @ 0.8600V
Cpufreq OPP: 1000  ThreadX: 1000  Measured: 1000 @ 0.8600V
Cpufreq OPP:  900  ThreadX:  900  Measured:  900 @ 0.8600V
Cpufreq OPP:  800  ThreadX:  800  Measured:  800 @ 0.8600V
Cpufreq OPP:  700  ThreadX:  700  Measured:  700 @ 0.8600V
Cpufreq OPP:  600  ThreadX:  600  Measured:  600 @ 0.8600V

##########################################################################

Executing benchmark on cpu0 (Cortex-A72):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   2379.4 MB/s
 C copy backwards (32 byte blocks)                    :   2388.0 MB/s
 C copy backwards (64 byte blocks)                    :   2304.6 MB/s (0.2%)
 C copy                                               :   2312.3 MB/s
 C copy prefetched (32 bytes step)                    :   2302.7 MB/s
 C copy prefetched (64 bytes step)                    :   2302.1 MB/s
 C 2-pass copy                                        :   1858.4 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1959.9 MB/s (0.6%)
 C 2-pass copy prefetched (64 bytes step)             :   1821.6 MB/s
 C fill                                               :   2696.6 MB/s
 C fill (shuffle within 16 byte blocks)               :   2694.6 MB/s
 C fill (shuffle within 32 byte blocks)               :   2695.5 MB/s
 C fill (shuffle within 64 byte blocks)               :   2697.2 MB/s (0.6%)
 ---
 standard memcpy                                      :   2310.8 MB/s
 standard memset                                      :   2689.2 MB/s
 ---
 NEON read                                            :   3656.9 MB/s (0.1%)
 NEON read prefetched (32 bytes step)                 :   3693.9 MB/s (0.2%)
 NEON read prefetched (64 bytes step)                 :   3693.9 MB/s (0.2%)
 NEON read 2 data streams                             :   3385.8 MB/s (1.1%)
 NEON read 2 data streams prefetched (32 bytes step)  :   3379.1 MB/s (0.2%)
 NEON read 2 data streams prefetched (64 bytes step)  :   3379.1 MB/s (0.2%)
 NEON copy                                            :   2320.8 MB/s (0.1%)
 NEON copy prefetched (32 bytes step)                 :   2303.9 MB/s
 NEON copy prefetched (64 bytes step)                 :   2304.7 MB/s
 NEON unrolled copy                                   :   2308.0 MB/s
 NEON unrolled copy prefetched (32 bytes step)        :   2290.0 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   2289.8 MB/s (1.1%)
 NEON copy backwards                                  :   2384.4 MB/s
 NEON copy backwards prefetched (32 bytes step)       :   2396.8 MB/s
 NEON copy backwards prefetched (64 bytes step)       :   2396.7 MB/s (0.1%)
 NEON 2-pass copy                                     :   1871.0 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1950.5 MB/s (0.2%)
 NEON 2-pass copy prefetched (64 bytes step)          :   1973.5 MB/s
 NEON unrolled 2-pass copy                            :   1854.1 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :   1961.0 MB/s (0.2%)
 NEON unrolled 2-pass copy prefetched (64 bytes step) :   2009.5 MB/s
 NEON fill                                            :   2696.9 MB/s (0.6%)
 NEON fill backwards                                  :   2700.6 MB/s (0.2%)
 VFP copy                                             :   2311.1 MB/s
 VFP 2-pass copy                                      :   1811.6 MB/s (0.2%)
 ARM fill (STRD)                                      :   2697.4 MB/s (3.3%)
 ARM fill (STM with 8 registers)                      :   2695.9 MB/s
 ARM fill (STM with 4 registers)                      :   2692.3 MB/s
 ARM copy prefetched (incr pld)                       :   2303.9 MB/s (1.0%)
 ARM copy prefetched (wrap pld)                       :   2300.5 MB/s
 ARM 2-pass copy prefetched (incr pld)                :   1897.6 MB/s (0.2%)
 ARM 2-pass copy prefetched (wrap pld)                :   1882.1 MB/s (0.2%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :   1166.9 MB/s
 NEON copy (from framebuffer)                         :    741.1 MB/s (0.9%)
 NEON 2-pass copy (from framebuffer)                  :    654.5 MB/s (0.5%)
 NEON unrolled copy (from framebuffer)                :    636.2 MB/s (0.3%)
 NEON 2-pass unrolled copy (from framebuffer)         :    558.4 MB/s (0.4%)
 VFP copy (from framebuffer)                          :    706.1 MB/s
 VFP 2-pass copy (from framebuffer)                   :    612.5 MB/s (0.4%)
 ARM copy (from framebuffer)                          :    733.1 MB/s
 ARM 2-pass copy (from framebuffer)                   :    655.4 MB/s (0.5%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.7 ns          /     7.4 ns 
    131072 :    7.2 ns          /     9.9 ns 
    262144 :   10.3 ns          /    13.1 ns 
    524288 :   11.9 ns          /    15.1 ns 
   1048576 :   26.0 ns          /    40.1 ns 
   2097152 :   92.2 ns          /   134.6 ns 
   4194304 :  124.0 ns          /   160.6 ns 
   8388608 :  147.4 ns          /   183.2 ns 
  16777216 :  158.7 ns          /   192.9 ns 
  33554432 :  164.9 ns          /   198.2 ns 
  67108864 :  177.5 ns          /   214.8 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A72)

OpenSSL 1.1.1k, built on 25 Mar 2021
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      74506.05k    91584.09k    99347.11k   101366.78k   101976.75k   101782.87k
aes-128-cbc      74726.13k    91518.53k    99337.98k   101207.04k   101771.95k   101810.18k
aes-192-cbc      67306.94k    80220.65k    86249.05k    87764.31k    87902.89k    88124.07k
aes-192-cbc      67085.16k    80381.25k    86256.47k    87664.64k    88195.07k    88118.61k
aes-256-cbc      60792.65k    71851.43k    76053.16k    77344.09k    77690.20k    77725.70k
aes-256-cbc      60846.21k    71777.09k    76086.44k    77382.31k    77725.70k    77611.01k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A72)

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 64000000 - - 512000000 1024000000 2048000000

RAM size:    7899 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1353   100   1318   1317  |      26066   100   2227   2226
23:       1271   100   1296   1295  |      25382   100   2198   2197
24:       1205   100   1297   1296  |      24640   100   2164   2163
25:       1126   100   1286   1286  |      23894   100   2128   2127
----------------------------------  | ------------------------------
Avr:             100   1299   1298  |              100   2179   2178
Tot:             100   1739   1738

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 32000000 128000000 256000000 512000000 - -

RAM size:    7899 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3705   365    988   3605  |      99129   399   2117   8457
23:       3401   354    979   3466  |      96137   398   2089   8318
24:       3404   374    980   3661  |      93786   399   2063   8233
25:       3209   370    990   3664  |      91041   399   2029   8102
----------------------------------  | ------------------------------
Avr:             366    984   3599  |              399   2074   8278
Tot:             382   1529   5938

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - 64000000 64000000 128000000 256000000 512000000 1024000000 2048000000

RAM size:    7899 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3591   350    998   3494  |      99133   399   2120   8458
23:       3484   368    966   3551  |      96718   399   2096   8369
24:       3399   373    979   3655  |      94001   399   2068   8252
25:       3215   370    992   3671  |      90738   398   2029   8075
----------------------------------  | ------------------------------
Avr:             365    983   3593  |              399   2078   8288
Tot:             382   1531   5941

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - 128000000 - - 1024000000 2048000000

RAM size:    7899 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3601   348   1006   3504  |      99001   398   2120   8446
23:       3525   373    963   3592  |      96591   399   2096   8358
24:       3381   373    975   3636  |      93969   399   2067   8249
25:       3198   370    988   3652  |      91000   399   2030   8099
----------------------------------  | ------------------------------
Avr:             366    983   3596  |              399   2078   8288
Tot:             382   1531   5942

Compression: 3599,3593,3596
Decompression: 8278,8288,8288
Total: 5938,5941,5942

##########################################################################

Testing clockspeeds again. System health now:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp    VCore
11:00:03: 1800/1800MHz  4.06  90%   3%  86%   0%   0%   0%  51.6°C  0.9260V

Checking cpufreq OPP (Cortex-A72):

Cpufreq OPP: 1800  ThreadX: 1800  Measured: 1795 @ 0.9260V
Cpufreq OPP: 1700  ThreadX: 1700  Measured: 1700 @ 0.9040V
Cpufreq OPP: 1600  ThreadX: 1600  Measured: 1600 @ 0.8820V
Cpufreq OPP: 1500  ThreadX: 1500  Measured: 1215 @ 0.8600V
Cpufreq OPP: 1400  ThreadX: 1400  Measured: 1265 @ 0.8600V
Cpufreq OPP: 1300  ThreadX: 1300  Measured: 1155 @ 0.8600V
Cpufreq OPP: 1200  ThreadX: 1200  Measured: 1040 @ 0.8600V
Cpufreq OPP: 1100  ThreadX: 1100  Measured:  975 @ 0.8600V
Cpufreq OPP: 1000  ThreadX: 1000  Measured:  795 @ 0.8600V
Cpufreq OPP:  900  ThreadX:  900  Measured:  810 @ 0.8600V
Cpufreq OPP:  800  ThreadX:  800  Measured:  795 @ 0.8600V
Cpufreq OPP:  700  ThreadX:  700  Measured:  700 @ 0.8600V
Cpufreq OPP:  600  ThreadX:  600  Measured:  600 @ 0.8600V

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (cpu-thermal)

System health while running tinymembench:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp    VCore
10:44:35: 1800/1800MHz  0.73   7%   2%   2%   0%   2%   0%  36.0°C  0.9260V
10:45:15: 1800/1800MHz  0.86  25%   0%  24%   0%   0%   0%  38.9°C  0.9260V
10:45:55: 1800/1800MHz  0.93  25%   0%  25%   0%   0%   0%  41.4°C  0.9260V
10:46:35: 1800/1800MHz  0.97  25%   0%  25%   0%   0%   0%  43.8°C  0.9260V
10:47:15: 1800/1800MHz  0.98  25%   0%  25%   0%   0%   0%  44.8°C  0.9260V
10:47:55: 1800/1800MHz  0.99  26%   0%  25%   0%   0%   0%  45.3°C  0.9260V
10:48:35: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  46.3°C  0.9260V
10:49:15: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  47.2°C  0.9260V
10:49:55: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  46.7°C  0.9260V
10:50:36: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  49.2°C  0.9260V
10:51:16: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  49.2°C  0.9260V
10:51:56: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  49.7°C  0.9260V
10:52:36: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  50.1°C  0.9260V

System health while running OpenSSL benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp    VCore
10:53:06: 1800/1800MHz  1.00  18%   1%  16%   0%   0%   0%  51.6°C  0.9260V
10:53:23: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  53.1°C  0.9260V
10:53:39: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  52.6°C  0.9260V
10:53:55: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  54.0°C  0.9260V
10:54:11: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  53.1°C  0.9260V
10:54:27: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  53.1°C  0.9260V
10:54:43: 1800/1800MHz  1.00  25%   0%  25%   0%   0%   0%  55.0°C  0.9260V

System health while running 7-zip single core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp    VCore
10:54:55: 1800/1800MHz  1.00  19%   0%  17%   0%   0%   0%  54.0°C  0.9260V
10:55:02: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  54.5°C  0.9260V
10:55:09: 1800/1800MHz  1.00  30%   0%  24%   0%   5%   0%  54.0°C  0.9260V
10:55:18: 1800/1800MHz  1.00  37%   0%  24%   0%  12%   0%  54.5°C  0.9260V
10:55:25: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  54.5°C  0.9260V
10:55:32: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  53.6°C  0.9260V
10:55:39: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  53.6°C  0.9260V
10:55:46: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  53.6°C  0.9260V
10:55:54: 1800/1800MHz  1.00  25%   1%  23%   0%   0%   0%  55.5°C  0.9260V
10:56:01: 1800/1800MHz  1.00  25%   0%  24%   0%   0%   0%  55.5°C  0.9260V
10:56:08: 1800/1800MHz  1.00  25%   1%  24%   0%   0%   0%  54.5°C  0.9260V
10:56:15: 1800/1800MHz  1.00  25%   1%  24%   0%   0%   0%  55.5°C  0.9260V
10:56:22: 1800/1800MHz  1.00  25%   1%  24%   0%   0%   0%  55.5°C  0.9260V

System health while running 7-zip multi core benchmark:

Time        fake/real   load %cpu %sys %usr %nice %io %irq   Temp    VCore
10:56:26: 1800/1800MHz  1.00  20%   0%  18%   0%   0%   0%  55.5°C  0.9260V
10:56:42: 1800/1800MHz  1.46  92%   1%  91%   0%   0%   0%  61.8°C  0.9260V
10:56:57: 1800/1800MHz  2.03  91%   2%  88%   0%   0%   0%  59.9°C  0.9260V
10:57:13: 1800/1800MHz  2.47  97%   2%  95%   0%   0%   0%  58.9°C  0.9260V
10:57:28: 1800/1800MHz  2.88  89%   4%  85%   0%   0%   0%  55.0°C  0.9260V
10:57:44: 1800/1800MHz  3.13  86%   2%  84%   0%   0%   0%  51.6°C  0.9260V
10:57:59: 1800/1800MHz  3.19  92%   1%  91%   0%   0%   0%  56.0°C  0.9260V
10:58:14: 1800/1800MHz  3.44  92%   2%  89%   0%   0%   0%  53.6°C  0.9260V
10:58:30: 1800/1800MHz  3.56  97%   2%  95%   0%   0%   0%  55.0°C  0.9260V
10:58:46: 1800/1800MHz  3.73  89%   3%  85%   0%   0%   0%  52.6°C  0.9260V
10:59:01: 1800/1800MHz  3.79  86%   1%  84%   0%   0%   0%  51.1°C  0.9260V
10:59:17: 1800/1800MHz  3.84  93%   1%  91%   0%   0%   0%  53.1°C  0.9260V
10:59:32: 1800/1800MHz  4.01  93%   2%  91%   0%   0%   0%  52.6°C  0.9260V
10:59:47: 1800/1800MHz  4.08  96%   2%  94%   0%   0%   0%  51.1°C  0.9260V
11:00:03: 1800/1800MHz  4.06  90%   3%  86%   0%   0%   0%  51.6°C  0.9260V

##########################################################################

dmesg output while running the benchmarks:

[  305.154578] process 'local/src/tinymembench/tinymembench' started with executable stack

##########################################################################

Linux 5.10.63-v7l+ (whitebrick) 	01/22/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          31.94    0.03    1.24    0.64    0.00   66.15

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           7.00       233.34        84.09     21517.36     293670     105829   27080891

               total        used        free      shared  buff/cache   available
Mem:           7.7Gi        81Mi       7.5Gi       0.0Ki       124Mi       7.4Gi
Swap:           99Mi          0B        99Mi

Filename				Type		Size	Used	Priority
/var/swap                              	file    	102396	0	-2

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      600    1800   Cortex-A72 / r0p3
  1        0        0      600    1800   Cortex-A72 / r0p3
  2        0        0      600    1800   Cortex-A72 / r0p3
  3        0        0      600    1800   Cortex-A72 / r0p3

Architecture:        armv7l
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
Vendor ID:           ARM
Model:               3
Model name:          Cortex-A72
Stepping:            r0p3
CPU max MHz:         1800.0000
CPU min MHz:         600.0000
BogoMIPS:            324.00
Flags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32

SoC guess: BCM2711B0
 Compiler: /usr/bin/gcc (Raspbian 10.2.1-6+rpi1/arm-linux-gnueabihf)
 Userland: armhf
  ThreadX: d9b293558b4cef6aabedcc53c178e7604de90788 / Nov 18 2021 16:16:49 
   Kernel: 5.10.63-v7l+/armv7l
           CONFIG_HZ=100
           CONFIG_HZ_100=y
           CONFIG_HZ_FIXED=0
           CONFIG_PREEMPTIRQ_TRACEPOINTS=y
           CONFIG_PREEMPT_VOLUNTARY=y


| RPi 4 Model B Rev 1.4 / BCM2711 rev B0 | 1800 MHz | 5.10 | Bullseye armhf | 5940 | 74620 | 77670 | 2310 | 2690 | - |