sbc-bench v0.9.3 Radxa ROCK Pi 4B (Sat, 19 Feb 2022 11:36:43 +0100)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04.2 LTS
Release:	20.04
Codename:	focal

Armbian release info:
BOARD=rockpi-4b
BOARD_NAME="Rockpi 4B"
BOARDFAMILY=rockchip64
BUILD_REPOSITORY_URL=git@github.com:armbian/build
BUILD_REPOSITORY_COMMIT=aec64805a
DISTRIBUTION_CODENAME=focal
DISTRIBUTION_STATUS=supported
VERSION=21.08.1
LINUXFAMILY=rockchip64
ARCH=arm64
IMAGE_TYPE=stable
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0

Uptime: 11:36:43 up 6 min,  2 users,  load average: 0.41, 0.27, 0.13

Linux 5.10.60-rockchip64 (rockpi-4b) 	02/19/22 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4.17    0.00    2.66    0.03    0.00   93.14

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           0.35         7.59         0.00         0.00       3136          0          0
mmcblk2boot0      0.14         0.56         0.00         0.00        232          0          0
mmcblk2boot1      0.14         0.56         0.00         0.00        232          0          0
nvme0n1          33.90       983.52      2585.72         0.00     406469    1068628          0
zram0             1.38         5.50         0.01         0.00       2272          4          0
zram1             0.62         1.09         5.62         0.00        452       2324          0

              total        used        free      shared  buff/cache   available
Mem:          3.8Gi       188Mi       3.4Gi       5.0Mi       195Mi       3.5Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1977824	0	5

##########################################################################

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1510 (1508.899/1510.170/1509.446)
Cpufreq OPP: 1416    Measured: 1415 (1413.652/1413.574/1412.925)
Cpufreq OPP: 1200    Measured: 1200 (1197.522/1197.841/1197.633)
Cpufreq OPP: 1008    Measured: 1010 (1005.663/1005.333/1005.725)
Cpufreq OPP:  816    Measured:  815 (813.581/812.900/813.771)
Cpufreq OPP:  600    Measured:  600 (597.810/597.810/597.661)
Cpufreq OPP:  408    Measured:  410 (405.263/405.763/405.690)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 2016    Measured: 2015 (2014.485/2014.359/2014.158)
Cpufreq OPP: 1800    Measured: 1800 (1798.487/1798.126/1798.667)
Cpufreq OPP: 1608    Measured: 1610 (1606.437/1606.537/1606.377)
Cpufreq OPP: 1416    Measured: 1415 (1414.116/1414.472/1414.581)
Cpufreq OPP: 1200    Measured: 1200 (1198.022/1198.758/1198.703)
Cpufreq OPP: 1008    Measured: 1010 (1006.190/1006.680/1006.043)
Cpufreq OPP:  816    Measured:  815 (814.523/814.663/814.593)
Cpufreq OPP:  600    Measured:  600 (598.547/598.188/598.452)
Cpufreq OPP:  408    Measured:  410 (406.514/406.289/406.577)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1716.9 MB/s (0.8%)
 C copy backwards (32 byte blocks)                    :   1740.4 MB/s (0.6%)
 C copy backwards (64 byte blocks)                    :   1757.1 MB/s (0.4%)
 C copy                                               :   1794.2 MB/s (0.6%)
 C copy prefetched (32 bytes step)                    :   1315.2 MB/s
 C copy prefetched (64 bytes step)                    :   1572.1 MB/s
 C 2-pass copy                                        :   1543.4 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1098.7 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    924.0 MB/s
 C fill                                               :   8303.2 MB/s (0.2%)
 C fill (shuffle within 16 byte blocks)               :   8286.9 MB/s (0.2%)
 C fill (shuffle within 32 byte blocks)               :   8283.0 MB/s (0.2%)
 C fill (shuffle within 64 byte blocks)               :   8281.3 MB/s (0.2%)
 ---
 standard memcpy                                      :   1799.3 MB/s (0.1%)
 standard memset                                      :   8326.1 MB/s (0.4%)
 ---
 NEON LDP/STP copy                                    :   1838.1 MB/s (0.3%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1218.6 MB/s (0.6%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1527.5 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1976.2 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1977.1 MB/s
 NEON LD1/ST1 copy                                    :   1836.6 MB/s (0.3%)
 NEON STP fill                                        :   8325.4 MB/s (0.2%)
 NEON STNP fill                                       :   2124.2 MB/s (1.1%)
 ARM LDP/STP copy                                     :   1846.6 MB/s (0.3%)
 ARM STP fill                                         :   8323.0 MB/s (0.2%)
 ARM STNP fill                                        :   2136.9 MB/s (1.6%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.5 ns 
    131072 :    6.9 ns          /    10.4 ns 
    262144 :    8.2 ns          /    12.2 ns 
    524288 :   12.5 ns          /    19.4 ns 
   1048576 :   83.1 ns          /   128.2 ns 
   2097152 :  123.3 ns          /   167.5 ns 
   4194304 :  149.3 ns          /   188.5 ns 
   8388608 :  163.3 ns          /   198.7 ns 
  16777216 :  171.2 ns          /   204.9 ns 
  33554432 :  176.4 ns          /   210.0 ns 
  67108864 :  179.6 ns          /   213.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.5 ns          /     7.6 ns 
    131072 :    6.9 ns          /    10.4 ns 
    262144 :    8.2 ns          /    11.6 ns 
    524288 :    9.5 ns          /    13.1 ns 
   1048576 :   85.0 ns          /   132.1 ns 
   2097152 :  125.7 ns          /   171.4 ns 
   4194304 :  145.9 ns          /   184.8 ns 
   8388608 :  152.1 ns          /   184.1 ns 
  16777216 :  157.2 ns          /   186.6 ns 
  33554432 :  160.1 ns          /   188.0 ns 
  67108864 :  160.4 ns          /   187.7 ns 

Executing benchmark on cpu4 (Cortex-A72):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   3521.1 MB/s (0.5%)
 C copy backwards (32 byte blocks)                    :   3523.4 MB/s (0.2%)
 C copy backwards (64 byte blocks)                    :   3525.0 MB/s (0.2%)
 C copy                                               :   3439.8 MB/s (0.2%)
 C copy prefetched (32 bytes step)                    :   3421.1 MB/s
 C copy prefetched (64 bytes step)                    :   3421.3 MB/s (0.2%)
 C 2-pass copy                                        :   3181.6 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   3203.9 MB/s (0.1%)
 C 2-pass copy prefetched (64 bytes step)             :   3205.7 MB/s (0.1%)
 C fill                                               :   8256.5 MB/s (0.4%)
 C fill (shuffle within 16 byte blocks)               :   8338.1 MB/s (0.9%)
 C fill (shuffle within 32 byte blocks)               :   8264.2 MB/s (0.3%)
 C fill (shuffle within 64 byte blocks)               :   8265.8 MB/s (0.4%)
 ---
 standard memcpy                                      :   3432.9 MB/s (0.2%)
 standard memset                                      :   8256.7 MB/s (0.3%)
 ---
 NEON LDP/STP copy                                    :   3441.6 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   3436.3 MB/s (0.2%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   3435.7 MB/s (0.2%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   3419.1 MB/s (0.2%)
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   3418.4 MB/s (0.2%)
 NEON LD1/ST1 copy                                    :   3441.1 MB/s (0.2%)
 NEON STP fill                                        :   8268.4 MB/s (0.5%)
 NEON STNP fill                                       :   8204.1 MB/s (0.3%)
 ARM LDP/STP copy                                     :   3441.8 MB/s (0.1%)
 ARM STP fill                                         :   8385.7 MB/s (1.3%)
 ARM STNP fill                                        :   8210.8 MB/s (0.5%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.0 ns          /     6.4 ns 
    131072 :    6.1 ns          /     8.6 ns 
    262144 :    8.8 ns          /    11.4 ns 
    524288 :   10.1 ns          /    13.0 ns 
   1048576 :   22.6 ns          /    36.9 ns 
   2097152 :   95.9 ns          /   145.6 ns 
   4194304 :  136.0 ns          /   183.6 ns 
   8388608 :  161.2 ns          /   200.5 ns 
  16777216 :  172.0 ns          /   209.8 ns 
  33554432 :  179.5 ns          /   217.1 ns 
  67108864 :  188.2 ns          /   230.4 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.0 ns          /     6.4 ns 
    131072 :    6.0 ns          /     8.6 ns 
    262144 :    7.1 ns          /     9.4 ns 
    524288 :    7.6 ns          /     9.8 ns 
   1048576 :   13.2 ns          /    20.0 ns 
   2097152 :   95.9 ns          /   147.5 ns 
   4194304 :  130.9 ns          /   179.1 ns 
   8388608 :  149.0 ns          /   191.3 ns 
  16777216 :  158.4 ns          /   195.4 ns 
  33554432 :  163.3 ns          /   197.0 ns 
  67108864 :  166.7 ns          /   198.5 ns 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     127086.73k   381856.68k   750878.72k  1015196.33k  1131309.74k  1138633.39k
aes-128-cbc     383680.65k   886517.29k  1291985.83k  1439462.74k  1501820.25k  1512882.18k
aes-192-cbc     121361.98k   341000.98k   614313.13k   783412.91k   851735.89k   856320.68k
aes-192-cbc     366241.08k   810093.42k  1102302.04k  1272390.31k  1333630.29k  1336459.26k
aes-256-cbc     117807.98k   314686.76k   532979.54k   655737.17k   702849.02k   706041.17k
aes-256-cbc     354070.39k   740920.83k  1011116.89k  1083370.15k  1142106.79k  1146497.71k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - 64000000 64000000 64000000 - - - - -

RAM size:    3862 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        892   100    869    869  |      16834   100   1437   1437
23:        848   100    865    864  |      16502   100   1429   1428
24:        808   100    870    870  |      16157   100   1419   1419
25:        758   100    866    866  |      15738   100   1401   1401
----------------------------------  | ------------------------------
Avr:             100    867    867  |              100   1421   1421
Tot:             100   1144   1144

Executing benchmark single-threaded on cpu4 (Cortex-A72)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 - - - - 256000000 - - -

RAM size:    3862 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1714   100   1667   1667  |      25506   100   2178   2178
23:       1616   100   1647   1647  |      25021   100   2166   2166
24:       1526   100   1642   1642  |      24510   100   2152   2152
25:       1417   100   1618   1618  |      23887   100   2126   2126
----------------------------------  | ------------------------------
Avr:             100   1644   1644  |              100   2155   2155
Tot:             100   1899   1899

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - 64000000 - - - - - - -

RAM size:    3862 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5234   523    973   5092  |     101450   518   1669   8652
23:       5155   550    955   5253  |      98675   516   1656   8538
24:       4869   556    942   5236  |      96654   518   1639   8484
25:       4691   578    927   5357  |      94169   518   1617   8381
----------------------------------  | ------------------------------
Avr:             552    949   5234  |              518   1645   8514
Tot:             535   1297   6874

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3862 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5253   523    977   5110  |     101468   518   1671   8653
23:       5177   567    930   5276  |      98409   516   1652   8515
24:       4869   555    944   5236  |      97018   520   1637   8516
25:       4601   560    939   5253  |      94393   521   1614   8401
----------------------------------  | ------------------------------
Avr:             551    948   5219  |              519   1643   8521
Tot:             535   1295   6870

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3862 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5675   570    968   5521  |     101019   516   1671   8615
23:       5267   574    935   5367  |      98516   515   1656   8525
24:       4893   559    942   5262  |      96721   518   1640   8489
25:       4736   587    921   5408  |      94375   520   1616   8399
----------------------------------  | ------------------------------
Avr:             573    941   5389  |              517   1646   8507
Tot:             545   1294   6948

Compression: 5234,5219,5389
Decompression: 8514,8521,8507
Total: 6874,6870,6948

##########################################################################

Testing clockspeeds again. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
12:04:55: 2016/1512MHz  5.91  98%   2%  96%   0%   0%   0%  61.9°C

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1512    Measured: 1485 (1481.641/1500.232/1501.846)
Cpufreq OPP: 1416    Measured: 1435 (1434.844/1406.153/1407.647)
Cpufreq OPP: 1200    Measured: 1195 (1192.270/1191.115/1192.930)
Cpufreq OPP: 1008    Measured: 1005 (1000.901/1001.386/1001.447)
Cpufreq OPP:  816    Measured:  815 (810.509/809.477/808.279)
Cpufreq OPP:  600    Measured:  600 (595.092/595.092/584.233)
Cpufreq OPP:  408    Measured:  405 (402.172/404.532/403.991)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 2016    Measured: 2015 (2013.078/2014.460/2009.469)
Cpufreq OPP: 1800    Measured: 1795 (1794.049/1793.850/1792.435)
Cpufreq OPP: 1608    Measured: 1605 (1604.700/1604.600/1604.979)
Cpufreq OPP: 1416    Measured: 1415 (1413.420/1414.163/1413.033)
Cpufreq OPP: 1200    Measured:  770 (768.515/1392.242/652.240)
Cpufreq OPP: 1008    Measured:  485 (484.900/1422.882/698.152)
Cpufreq OPP:  816    Measured:  815 (814.412/396.061/813.971)
Cpufreq OPP:  600    Measured:  600 (598.418/329.378/598.615)
Cpufreq OPP:  408    Measured:  240 (238.417/529.537/406.241)

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu)

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
11:36:55: 2016/1512MHz  0.50   7%   2%   4%   0%   0%   0%  39.4°C
11:38:15: 2016/1512MHz  0.87  16%   0%  16%   0%   0%   0%  40.0°C
11:39:35: 2016/1512MHz  0.97  16%   0%  16%   0%   0%   0%  39.4°C
11:40:55: 2016/1512MHz  0.99  16%   0%  16%   0%   0%   0%  40.0°C
11:42:15: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  40.6°C
11:43:35: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  41.1°C
11:44:55: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  41.1°C
11:46:15: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:47:36: 2016/1512MHz  1.08  17%   0%  16%   0%   0%   0%  48.1°C
11:48:56: 2016/1512MHz  1.02  16%   0%  16%   0%   0%   0%  45.6°C
11:50:16: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:51:36: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  48.1°C
11:52:56: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.9°C
11:54:16: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.9°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
11:55:08: 2016/1512MHz  1.00  14%   0%  13%   0%   0%   0%  47.5°C
11:55:24: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.0°C
11:55:40: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  52.8°C
11:55:56: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:56:13: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  54.4°C
11:56:29: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:56:45: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  54.4°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
11:56:56: 2016/1512MHz  1.00  14%   0%  13%   0%   0%   0%  48.8°C
11:57:08: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:57:19: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:57:30: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:57:41: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:57:52: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:58:03: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:58:14: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  46.2°C
11:58:25: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:58:36: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:58:47: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:58:58: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:59:09: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  45.6°C
11:59:20: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  52.2°C
11:59:31: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  52.8°C
11:59:42: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  51.7°C
11:59:54: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  53.3°C
12:00:05: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  51.7°C
12:00:16: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  51.1°C
12:00:27: 2016/1512MHz  1.00  16%   0%  16%   0%   0%   0%  53.3°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
12:00:28: 2016/1512MHz  1.00  14%   0%  13%   0%   0%   0%  52.2°C
12:00:40: 2016/1512MHz  1.92  91%   1%  90%   0%   0%   0%  56.7°C
12:00:50: 2016/1512MHz  2.30  82%   0%  81%   0%   0%   0%  53.3°C
12:01:00: 2016/1512MHz  2.73  96%   0%  95%   0%   0%   0%  57.8°C
12:01:10: 2016/1512MHz  3.16  78%   1%  76%   0%   0%   0%  56.1°C
12:01:22: 2016/1512MHz  3.67  94%   1%  92%   0%   0%   0%  58.3°C
12:01:32: 2016/1512MHz  3.97  75%   1%  73%   0%   0%   0%  56.7°C
12:01:43: 2016/1512MHz  4.35  99%   2%  97%   0%   0%   0%  55.6°C
12:01:55: 2016/1512MHz  4.68  95%   1%  93%   0%   0%   0%  58.3°C
12:02:05: 2016/1512MHz  4.74  82%   1%  81%   0%   0%   0%  56.1°C
12:02:16: 2016/1512MHz  4.93  91%   0%  90%   0%   0%   0%  58.9°C
12:02:28: 2016/1512MHz  5.03  86%   1%  84%   0%   0%   0%  59.4°C
12:02:38: 2016/1512MHz  5.40  81%   0%  80%   0%   0%   0%  57.2°C
12:02:52: 2016/1512MHz  5.57  93%   1%  92%   0%   0%   0%  59.4°C
12:03:03: 2016/1512MHz  5.43  80%   1%  79%   0%   0%   0%  56.7°C
12:03:13: 2016/1512MHz  5.60  99%   2%  97%   0%   0%   0%  55.0°C
12:03:26: 2016/1512MHz  5.89  89%   1%  87%   0%   0%   0%  59.4°C
12:03:36: 2016/1512MHz  5.98  86%   1%  84%   0%   0%   0%  58.9°C
12:03:46: 2016/1512MHz  5.90  93%   0%  93%   0%   0%   0%  59.4°C
12:03:58: 2016/1512MHz  5.99  86%   1%  84%   0%   0%   0%  60.6°C
12:04:09: 2016/1512MHz  5.59  80%   1%  79%   0%   0%   0%  58.9°C
12:04:21: 2016/1512MHz  5.48  95%   1%  93%   0%   0%   0%  60.6°C
12:04:32: 2016/1512MHz  5.68  77%   1%  75%   0%   0%   0%  58.9°C
12:04:43: 2016/1512MHz  5.89  99%   2%  97%   0%   0%   0%  58.3°C
12:04:55: 2016/1512MHz  5.91  98%   2%  96%   0%   0%   0%  61.9°C

##########################################################################

Linux 5.10.60-rockchip64 (rockpi-4b) 	02/19/22 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          23.74    0.01    0.86    0.01    0.00   75.39

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           0.07         1.48         0.00         0.00       3136          0          0
mmcblk2boot0      0.03         0.11         0.00         0.00        232          0          0
mmcblk2boot1      0.03         0.11         0.00         0.00        232          0          0
nvme0n1           6.93       194.38       556.25         0.00     412921    1181620          0
zram0             0.27         1.07         0.00         0.00       2272          4          0
zram1             0.13         0.22         1.12         0.00        464       2388          0

              total        used        free      shared  buff/cache   available
Mem:          3.8Gi       233Mi       3.3Gi       5.0Mi       202Mi       3.5Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1977824	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      408    1512   Cortex-A53 / r0p4
  1        0        0      408    1512   Cortex-A53 / r0p4
  2        0        0      408    1512   Cortex-A53 / r0p4
  3        0        0      408    1512   Cortex-A53 / r0p4
  4        1        4      408    2016   Cortex-A72 / r0p2
  5        1        4      408    2016   Cortex-A72 / r0p2

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          6
On-line CPU(s) list:             0-5
Thread(s) per core:              1
Core(s) per socket:              3
Socket(s):                       2
NUMA node(s):                    1
Vendor ID:                       ARM
Model:                           4
Model name:                      Cortex-A53
Stepping:                        r0p4
CPU max MHz:                     2016.0000
CPU min MHz:                     408.0000
BogoMIPS:                        48.00
NUMA node0 CPU(s):               0-5
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Vulnerable
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Vulnerable
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid

SoC guess: Rockchip RK3399
 Compiler: /usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04/aarch64-linux-gnu)
 Userland: arm64
   Kernel: 5.10.60-rockchip64/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y
           raid6: neonx8   gen()  1435 MB/s
           raid6: neonx8   xor()  1061 MB/s
           raid6: neonx4   gen()  1471 MB/s
           raid6: neonx4   xor()  1053 MB/s
           raid6: neonx2   gen()  1386 MB/s
           raid6: neonx2   xor()   969 MB/s
           raid6: neonx1   gen()  1204 MB/s
           raid6: neonx1   xor()   830 MB/s
           raid6: int64x8  gen()  1020 MB/s
           raid6: int64x8  xor()   532 MB/s
           raid6: int64x4  gen()  1130 MB/s
           raid6: int64x4  xor()   577 MB/s
           raid6: int64x2  gen()   963 MB/s
           raid6: int64x2  xor()   509 MB/s
           raid6: int64x1  gen()   716 MB/s
           raid6: int64x1  xor()   372 MB/s
           raid6: using algorithm neonx4 gen() 1471 MB/s
           raid6: .... xor() 1053 MB/s, rmw enabled
           raid6: using neon recovery algorithm
           xor: measuring software checksum speed
           xor: using function: 32regs (1906 MB/sec)

| Radxa ROCK Pi 4B | 2016/1512 MHz | 5.10 | Focal arm64 | 6900 | 255380 | 926270 | 3430 | 8260 | - |