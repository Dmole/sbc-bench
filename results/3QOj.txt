sbc-bench v0.9.3 AMedia X96 Max+ (Sat, 26 Feb 2022 15:40:45 +0200)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04.4 LTS
Release:	20.04
Codename:	focal

Armbian release info:
BOARD=lepotato
BOARD_NAME="Aml s905x3"
BOARDFAMILY=meson-gxl
BUILD_REPOSITORY_URL=https://github.com/armbian/build.git
BUILD_REPOSITORY_COMMIT=956695f
VERSION=22.02.0-trunk
LINUXFAMILY=meson64
ARCH=arm64
IMAGE_TYPE=user-built
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0

Uptime: 15:40:46 up  1:39,  1 user,  load average: 0.83, 0.27, 0.09

Linux 5.15.25-flippy-70+ (X96S905x3) 	02/26/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.41    0.01    0.34    0.02    0.00   99.23

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           1.96        70.37        17.55         0.00     418935     104490          0
mmcblk2boot0      0.01         0.04         0.00         0.00        232          0          0
mmcblk2boot1      0.01         0.04         0.00         0.00        232          0          0
zram0             0.10         0.40         0.00         0.00       2400          4          0
zram1             0.07         0.08         0.79         0.00        496       4732          0

              total        used        free      shared  buff/cache   available
Mem:          3.7Gi       210Mi       3.3Gi       6.0Mi       227Mi       3.5Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1957364	0	5

##########################################################################

Checking cpufreq OPP (Cortex-A55):

Cpufreq OPP: 2100    Measured: 2100 (2096.546/2095.523/2096.372)
Cpufreq OPP: 2016    Measured: 2015 (2012.576/2012.827/2012.752)
Cpufreq OPP: 1908    Measured: 1905 (1904.258/1905.292/1904.707)
Cpufreq OPP: 1800    Measured: 1800 (1796.765/1796.805/1797.265)
Cpufreq OPP: 1704    Measured: 1695 (1692.662/1687.548/1701.208)
Cpufreq OPP: 1608    Measured: 1605 (1604.780/1604.780/1605.079)
Cpufreq OPP: 1500    Measured: 1500 (1496.623/1494.043/1497.126)
Cpufreq OPP: 1404    Measured: 1405 (1400.998/1401.424/1400.998)
Cpufreq OPP: 1200    Measured: 1200 (1196.925/1195.318/1197.161)
Cpufreq OPP: 1000    Measured: 1000 (997.470/997.049/996.676)
Cpufreq OPP:  666    Measured:  665 (663.815/663.475/663.562)
Cpufreq OPP:  500    Measured:  500 (497.256/497.437/497.291)
Cpufreq OPP:  250    Measured:  250 (247.200/246.969/247.587)
Cpufreq OPP:  100    Measured:  100 (97.545/97.588/97.568)

##########################################################################

Executing benchmark on cpu0 (Cortex-A55):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1548.1 MB/s (0.8%)
 C copy backwards (32 byte blocks)                    :   1548.1 MB/s
 C copy backwards (64 byte blocks)                    :   1420.9 MB/s
 C copy                                               :   2639.3 MB/s
 C copy prefetched (32 bytes step)                    :   1543.4 MB/s
 C copy prefetched (64 bytes step)                    :   2577.6 MB/s
 C 2-pass copy                                        :   2222.0 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1121.2 MB/s (0.2%)
 C 2-pass copy prefetched (64 bytes step)             :   1967.6 MB/s (0.1%)
 C fill                                               :   5151.1 MB/s
 C fill (shuffle within 16 byte blocks)               :   5150.6 MB/s (0.4%)
 C fill (shuffle within 32 byte blocks)               :   5149.6 MB/s
 C fill (shuffle within 64 byte blocks)               :   5148.4 MB/s
 ---
 standard memcpy                                      :   2629.2 MB/s
 standard memset                                      :   5149.9 MB/s (0.8%)
 ---
 NEON LDP/STP copy                                    :   2652.1 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   2004.2 MB/s
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   2496.6 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1711.8 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2689.3 MB/s
 NEON LD1/ST1 copy                                    :   2645.0 MB/s
 NEON STP fill                                        :   5150.8 MB/s
 NEON STNP fill                                       :   4979.6 MB/s (0.5%)
 ARM LDP/STP copy                                     :   2652.5 MB/s (0.3%)
 ARM STP fill                                         :   5150.6 MB/s
 ARM STNP fill                                        :   4983.3 MB/s (0.2%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :    201.6 MB/s
 NEON LDP/STP 2-pass copy (from framebuffer)          :    203.3 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :     55.6 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :     56.0 MB/s (1.8%)
 ARM LDP/STP copy (from framebuffer)                  :    107.6 MB/s
 ARM LDP/STP 2-pass copy (from framebuffer)           :    108.4 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.6 ns          /     1.0 ns 
     32768 :    3.6 ns          /     5.0 ns 
     65536 :    9.0 ns          /    12.8 ns 
    131072 :   11.9 ns          /    15.9 ns 
    262144 :   14.1 ns          /    17.4 ns 
    524288 :   36.6 ns          /    46.0 ns 
   1048576 :   85.2 ns          /   125.9 ns 
   2097152 :  121.2 ns          /   159.2 ns 
   4194304 :  139.6 ns          /   170.6 ns 
   8388608 :  156.5 ns          /   184.2 ns 
  16777216 :  166.1 ns          /   192.7 ns 
  33554432 :  172.1 ns          /   198.7 ns 
  67108864 :  175.7 ns          /   202.6 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.6 ns          /     1.0 ns 
     32768 :    2.3 ns          /     4.1 ns 
     65536 :    9.1 ns          /    12.9 ns 
    131072 :   11.9 ns          /    15.9 ns 
    262144 :   14.2 ns          /    17.4 ns 
    524288 :   21.5 ns          /    25.0 ns 
   1048576 :   86.0 ns          /   129.4 ns 
   2097152 :  121.0 ns          /   159.2 ns 
   4194304 :  139.0 ns          /   169.8 ns 
   8388608 :  148.1 ns          /   173.6 ns 
  16777216 :  152.4 ns          /   175.1 ns 
  33554432 :  154.3 ns          /   175.8 ns 
  67108864 :  155.3 ns          /   176.1 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A55)

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     197717.26k   580430.66k  1106058.41k  1436708.18k  1574660.78k  1585610.75k
aes-128-cbc     197663.54k   580005.93k  1108574.04k  1437648.55k  1573863.42k  1585097.39k
aes-192-cbc     191705.14k   514336.87k   903215.70k  1105936.38k  1185008.30k  1191449.94k
aes-192-cbc     187789.11k   513654.51k   898365.35k  1105076.91k  1185125.72k  1191471.79k
aes-256-cbc     181610.54k   470274.56k   772761.34k   922689.19k   977494.02k   981603.67k
aes-256-cbc     183307.69k   467966.53k   773811.54k   922640.73k   977805.31k   982051.50k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A55)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - - - - - -

RAM size:    3822 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1027   100    999    999  |      21078   100   1800   1800
23:        962   100    981    981  |      19811   100   1715   1715
24:        912   100    982    982  |      18657   100   1638   1638
25:        852   100    973    973  |      17484   100   1556   1556
----------------------------------  | ------------------------------
Avr:             100    984    984  |              100   1677   1677
Tot:             100   1331   1330

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3822 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3228   359    874   3140  |      89588   400   1912   7643
23:       3098   369    856   3157  |      86985   398   1889   7526
24:       2978   377    850   3203  |      82404   389   1859   7234
25:       2804   376    851   3202  |      81307   397   1823   7236
----------------------------------  | ------------------------------
Avr:             370    858   3176  |              396   1871   7410
Tot:             383   1364   5293

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - - - - - -

RAM size:    3822 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3291   365    878   3202  |      87299   392   1902   7448
23:       3037   365    847   3095  |      86961   399   1888   7524
24:       2987   377    852   3212  |      83984   396   1863   7373
25:       2867   383    854   3274  |      79502   389   1817   7076
----------------------------------  | ------------------------------
Avr:             373    858   3196  |              394   1868   7355
Tot:             383   1363   5276

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3822 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       3180   357    866   3094  |      86957   390   1901   7419
23:       3061   366    852   3119  |      84823   390   1881   7339
24:       2971   376    849   3195  |      82489   390   1859   7241
25:       2819   379    850   3219  |      81363   397   1822   7241
----------------------------------  | ------------------------------
Avr:             370    854   3157  |              392   1866   7310
Tot:             381   1360   5234

Compression: 3176,3196,3157
Decompression: 7410,7355,7310
Total: 5293,5276,5234

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:56:05: 2100MHz  4.11  97%   1%  95%   0%   0%   0%  76.0°C

Checking cpufreq OPP (Cortex-A55):

Cpufreq OPP: 2100    Measured: 1855 (1854.339/2087.436/2091.482)
Cpufreq OPP: 2016    Measured: 2010 (2007.195/1782.164/1329.894)
Cpufreq OPP: 1908    Measured: 1480 (1477.495/1265.086/1269.389)
Cpufreq OPP: 1800    Measured: 1795 (1792.930/1792.407/1571.577)
Cpufreq OPP: 1704    Measured: 1695 (1694.884/1541.472/1696.951)
Cpufreq OPP: 1608    Measured: 1390 (1386.208/1441.833/1106.869)
Cpufreq OPP: 1500    Measured: 1255 (1254.362/1278.819/1258.964)
Cpufreq OPP: 1404    Measured: 1400 (1397.995/1398.161/1397.950)
Cpufreq OPP: 1200    Measured: 1195 (1194.959/1194.254/1195.360)
Cpufreq OPP: 1000    Measured:  995 (993.991/994.290/994.697)
Cpufreq OPP:  666    Measured:  665 (663.156/663.515/663.109)
Cpufreq OPP:  500    Measured:  495 (493.130/496.684/496.532)
Cpufreq OPP:  250    Measured:  250 (247.246/247.412/246.910)
Cpufreq OPP:  100    Measured:  100 (97.432/97.791/96.108)

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu_thermal)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:40:57: 2100MHz  0.87   0%   0%   0%   0%   0%   0%  48.9°C
15:41:37: 2100MHz  0.93  25%   0%  25%   0%   0%   0%  58.8°C
15:42:17: 2100MHz  0.97  25%   0%  25%   0%   0%   0%  61.8°C
15:42:57: 2100MHz  0.98  25%   0%  25%   0%   0%   0%  57.0°C
15:43:37: 2100MHz  0.99  25%   0%  24%   0%   0%   0%  55.0°C
15:44:17: 2100MHz  1.00  25%   0%  25%   0%   0%   0%  54.8°C
15:44:57: 2100MHz  1.00  25%   0%  25%   0%   0%   0%  54.8°C
15:45:37: 2100MHz  1.07  25%   0%  25%   0%   0%   0%  54.9°C
15:46:17: 2100MHz  1.04  25%   0%  24%   0%   0%   0%  54.4°C
15:46:57: 2100MHz  1.02  25%   0%  25%   0%   0%   0%  54.5°C
15:47:37: 2100MHz  1.01  25%   0%  25%   0%   0%   0%  54.7°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:48:07: 2100MHz  1.00   2%   0%   2%   0%   0%   0%  56.3°C
15:48:23: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.6°C
15:48:39: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  54.6°C
15:48:55: 2100MHz  1.00  26%   0%  25%   0%   0%   0%  57.3°C
15:49:11: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  54.4°C
15:49:27: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  54.8°C
15:49:43: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.3°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:49:55: 2100MHz  1.00   2%   0%   2%   0%   0%   0%  55.5°C
15:50:05: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  54.8°C
15:50:15: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.6°C
15:50:25: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.1°C
15:50:35: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.6°C
15:50:45: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.2°C
15:50:56: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.5°C
15:51:06: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.4°C
15:51:16: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.3°C
15:51:26: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.4°C
15:51:36: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.3°C
15:51:46: 2100MHz  1.00  25%   0%  24%   0%   0%   0%  55.7°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
15:51:52: 2100MHz  1.00   3%   0%   2%   0%   0%   0%  56.5°C
15:52:12: 2100MHz  2.07  93%   1%  92%   0%   0%   0%  65.8°C
15:52:33: 2100MHz  2.70  95%   1%  93%   0%   0%   0%  66.4°C
15:52:53: 2100MHz  3.15  90%   1%  89%   0%   0%   0%  67.0°C
15:53:16: 2100MHz  3.59  96%   1%  94%   0%   0%   0%  72.7°C
15:53:36: 2100MHz  3.90  92%   1%  91%   0%   0%   0%  69.1°C
15:53:57: 2100MHz  3.99  95%   1%  93%   0%   0%   0%  69.3°C
15:54:17: 2100MHz  3.84  91%   1%  90%   0%   0%   0%  69.6°C
15:54:40: 2100MHz  3.93  98%   1%  96%   0%   0%   0%  74.9°C
15:55:00: 2100MHz  4.02  91%   1%  90%   0%   0%   0%  71.1°C
15:55:21: 2100MHz  4.16  93%   1%  92%   0%   0%   0%  71.1°C
15:55:41: 2100MHz  4.10  90%   1%  89%   0%   0%   0%  70.7°C
15:56:05: 2100MHz  4.11  97%   1%  95%   0%   0%   0%  76.0°C

##########################################################################

Linux 5.15.25-flippy-70+ (X96S905x3) 	02/26/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           6.33    0.01    0.38    0.01    0.00   93.27

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk2           1.82        63.79        23.63         0.00     439175     162658          0
mmcblk2boot0      0.01         0.03         0.00         0.00        232          0          0
mmcblk2boot1      0.01         0.03         0.00         0.00        232          0          0
zram0             0.09         0.35         0.00         0.00       2400          4          0
zram1             0.07         0.08         0.71         0.00        564       4884          0

              total        used        free      shared  buff/cache   available
Mem:          3.7Gi       304Mi       3.2Gi       6.0Mi       248Mi       3.4Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1957364	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      100    2100   Cortex-A55 / r1p0
  1        0        0      100    2100   Cortex-A55 / r1p0
  2        0        0      100    2100   Cortex-A55 / r1p0
  3        0        0      100    2100   Cortex-A55 / r1p0

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          4
On-line CPU(s) list:             0-3
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
Vendor ID:                       ARM
Model:                           0
Model name:                      Cortex-A55
Stepping:                        r1p0
CPU max MHz:                     2100.0000
CPU min MHz:                     100.0000
BogoMIPS:                        48.00
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm lrcpc dcpop asimddp

SoC guess: Amlogic Meson SM1 (S905X3) Revision 2b:c (10:2)
 Compiler: /usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04/aarch64-linux-gnu)
 Userland: arm64
   Kernel: 5.15.25-flippy-70+/aarch64
           CONFIG_HZ=300
           CONFIG_HZ_300=y
           CONFIG_HZ_PERIODIC=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y
           raid6: neonx8   gen()  2159 MB/s
           raid6: neonx8   xor()  1632 MB/s
           raid6: neonx4   gen()  2061 MB/s
           raid6: neonx4   xor()  1544 MB/s
           raid6: neonx2   gen()  1907 MB/s
           raid6: neonx2   xor()  1456 MB/s
           raid6: neonx1   gen()  1591 MB/s
           raid6: neonx1   xor()  1235 MB/s
           raid6: int64x8  gen()  1435 MB/s
           raid6: int64x8  xor()   771 MB/s
           raid6: int64x4  gen()  1564 MB/s
           raid6: int64x4  xor()   827 MB/s
           raid6: int64x2  gen()  1393 MB/s
           raid6: int64x2  xor()   744 MB/s
           raid6: int64x1  gen()   972 MB/s
           raid6: int64x1  xor()   552 MB/s
           raid6: using algorithm neonx8 gen() 2159 MB/s
           raid6: .... xor() 1632 MB/s, rmw enabled
           raid6: using neon recovery algorithm
           xor: measuring software checksum speed
           xor: using function: 32regs (2915 MB/sec)

| AMedia X96 Max+ | 2100 MHz | 5.15 | Focal arm64 | 5270 | 197690 | 981830 | 2630 | 5150 | - |