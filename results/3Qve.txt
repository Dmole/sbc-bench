sbc-bench v0.9.3 FriendlyARM NanoPi K2 (Wed, 23 Feb 2022 21:01:27 +0800)

Distributor ID:	Debian
Description:	Debian GNU/Linux 11 (bullseye)
Release:	11
Codename:	bullseye

Armbian release info:
BOARD=nanopik2-s905
BOARD_NAME="NanoPi K2"
BOARDFAMILY=meson-gxbb
BUILD_REPOSITORY_URL=https://github.com/armbian/build
BUILD_REPOSITORY_COMMIT=4a0da762d-dirty
DISTRIBUTION_CODENAME=bullseye
DISTRIBUTION_STATUS=supported
VERSION=21.08.6
LINUXFAMILY=meson64
ARCH=arm64
IMAGE_TYPE=stable
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Debian 10.2.1-6) 10.2.1 20210110

Uptime: 21:01:27 up 17 min,  2 users,  load average: 0.46, 0.26, 0.26

Linux 5.10.81-meson64 (nanopik2-s905) 	02/23/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           6.14    0.06    2.57    0.27    0.00   90.96

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1          11.10       371.93       269.68         0.00     393044     284988          0
sda               0.07         1.32         0.00         0.00       1400          0          0
zram0             0.53         2.12         0.00         0.00       2240          4          0
zram1             1.55         0.40        37.71         0.00        420      39856          0

               total        used        free      shared  buff/cache   available
Mem:           1.9Gi       145Mi       1.7Gi       0.0Ki       119Mi       1.7Gi
Swap:          982Mi          0B       982Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1006108	0	5

##########################################################################

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 2016    Measured: 1475 (1474.828/1483.163/1486.989)
Cpufreq OPP: 1752    Measured: 1490 (1487.502/1484.971/1490.146)
Cpufreq OPP: 1536    Measured: 1335 (1334.580/1488.171/1447.176)
Cpufreq OPP: 1416    Measured: 1375 (1373.329/1371.666/1371.360)
Cpufreq OPP: 1296    Measured: 1250 (1249.144/1253.875/1251.460)
Cpufreq OPP: 1200    Measured: 1155 (1154.520/1156.355/1154.365)
Cpufreq OPP: 1000    Measured:  965 (960.500/963.659/959.040)
Cpufreq OPP:  667    Measured:  635 (633.382/632.761/623.239)
Cpufreq OPP:  500    Measured:  470 (466.182/465.776/467.655)
Cpufreq OPP:  250    Measured:  220 (218.255/209.813/217.761)
Cpufreq OPP:  100    Measured:   75 (70.709/71.759/70.705)

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1828.5 MB/s (1.4%)
 C copy backwards (32 byte blocks)                    :   1831.7 MB/s (0.7%)
 C copy backwards (64 byte blocks)                    :   1825.9 MB/s (0.7%)
 C copy                                               :   1836.2 MB/s (0.7%)
 C copy prefetched (32 bytes step)                    :   1267.2 MB/s (0.7%)
 C copy prefetched (64 bytes step)                    :   1460.6 MB/s (0.6%)
 C 2-pass copy                                        :   1573.3 MB/s (0.6%)
 C 2-pass copy prefetched (32 bytes step)             :   1089.9 MB/s (0.7%)
 C 2-pass copy prefetched (64 bytes step)             :    931.0 MB/s (0.7%)
 C fill                                               :   3786.6 MB/s (0.9%)
 C fill (shuffle within 16 byte blocks)               :   3788.8 MB/s
 C fill (shuffle within 32 byte blocks)               :   3789.0 MB/s (0.6%)
 C fill (shuffle within 64 byte blocks)               :   3785.0 MB/s (0.8%)
 ---
 standard memcpy                                      :   1853.9 MB/s (0.9%)
 standard memset                                      :   3786.6 MB/s (0.9%)
 ---
 NEON LDP/STP copy                                    :   1875.8 MB/s (0.7%)
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1128.6 MB/s (0.4%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1496.8 MB/s (0.7%)
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   2255.9 MB/s (0.7%)
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   2257.8 MB/s (0.6%)
 NEON LD1/ST1 copy                                    :   1870.8 MB/s (0.7%)
 NEON STP fill                                        :   3788.9 MB/s (0.8%)
 NEON STNP fill                                       :   3628.4 MB/s (2.7%)
 ARM LDP/STP copy                                     :   1878.1 MB/s (0.9%)
 ARM STP fill                                         :   3787.8 MB/s (1.0%)
 ARM STNP fill                                        :   3633.8 MB/s (1.9%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.3 ns          /     0.4 ns 
     65536 :    4.7 ns          /     8.0 ns 
    131072 :    7.2 ns          /    11.0 ns 
    262144 :    8.4 ns          /    12.3 ns 
    524288 :   15.4 ns          /    25.9 ns 
   1048576 :   75.4 ns          /   113.6 ns 
   2097152 :  107.0 ns          /   142.9 ns 
   4194304 :  128.1 ns          /   159.3 ns 
   8388608 :  139.6 ns          /   167.5 ns 
  16777216 :  147.3 ns          /   173.3 ns 
  33554432 :  151.7 ns          /   177.1 ns 
  67108864 :  155.0 ns          /   180.2 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.3 ns          /     0.4 ns 
     65536 :    4.7 ns          /     8.0 ns 
    131072 :    7.1 ns          /    11.0 ns 
    262144 :    8.4 ns          /    12.3 ns 
    524288 :   13.7 ns          /    21.3 ns 
   1048576 :   75.4 ns          /   114.7 ns 
   2097152 :  105.4 ns          /   144.6 ns 
   4194304 :  120.6 ns          /   151.3 ns 
   8388608 :  128.2 ns          /   153.6 ns 
  16777216 :  131.9 ns          /   155.0 ns 
  33554432 :  133.6 ns          /   155.5 ns 
  67108864 :  134.7 ns          /   157.5 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A53)

OpenSSL 1.1.1k, built on 25 Mar 2021
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      41686.19k    59983.87k    68101.89k    70491.48k    71177.56k    71215.79k
aes-128-cbc      44000.90k    61267.58k    68526.76k    70567.25k    71183.02k    71221.25k
aes-192-cbc      39255.07k    52610.07k    57835.95k    59319.30k    59746.99k    59741.53k
aes-192-cbc      39341.69k    52609.56k    57834.67k    59302.23k    59755.18k    59779.75k
aes-256-cbc      33876.55k    45314.90k    49853.70k    51108.18k    51475.80k    51489.45k
aes-256-cbc      34021.00k    45348.07k    49841.83k    51099.31k    51470.34k    51500.37k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 64000000 - - 512000000 1024000000 -

RAM size:    1965 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        929    96    945    904  |      16030    96   1420   1369
23:        908    96    967    926  |      15728    96   1411   1361
24:        897    96   1009    965  |      15411    96   1403   1353
25:        885    96   1058   1011  |      15117    96   1396   1346
----------------------------------  | ------------------------------
Avr:              96    995    951  |               96   1407   1357
Tot:              96   1201   1154

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - 1024000000 -

RAM size:    1965 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2461   295    813   2395  |      61222   375   1391   5223
23:       2414   298    826   2460  |      60185   376   1385   5208
24:       2391   297    865   2572  |      59020   376   1380   5181
25:       2371   298    909   2708  |      58266   377   1376   5186
----------------------------------  | ------------------------------
Avr:             297    853   2534  |              376   1383   5199
Tot:             336   1118   3866

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    1965 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2532   305    807   2464  |      61245   375   1392   5225
23:       2538   311    833   2586  |      60220   376   1387   5211
24:       2383   296    865   2563  |      59193   377   1379   5196
25:       2375   298    909   2712  |      58307   377   1377   5189
----------------------------------  | ------------------------------
Avr:             303    854   2581  |              376   1384   5205
Tot:             339   1119   3893

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    1965 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2549   306    811   2480  |      61678   377   1394   5262
23:       2423   297    831   2469  |      60293   376   1386   5217
24:       2393   297    867   2574  |      59201   377   1379   5197
25:       2363   297    909   2698  |      58351   377   1377   5193
----------------------------------  | ------------------------------
Avr:             299    855   2555  |              377   1384   5217
Tot:             338   1119   3886

Compression: 2534,2581,2555
Decompression: 5199,5205,5217
Total: 3866,3893,3886

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:22:06: 2016MHz  3.58  76%   1%  73%   0%   0%   1%  62.0°C

Checking cpufreq OPP (Cortex-A53):

Cpufreq OPP: 2016    Measured: 1475 (1470.261/1313.070/1450.606)
Cpufreq OPP: 1752    Measured: 1345 (1340.677/1266.215/1446.041)
Cpufreq OPP: 1536    Measured:  990 (986.513/1443.972/1448.068)
Cpufreq OPP: 1416    Measured: 1340 (1339.731/1335.836/1337.081)
Cpufreq OPP: 1296    Measured: 1215 (1214.729/1229.812/1228.525)
Cpufreq OPP: 1200    Measured: 1120 (1116.162/1135.809/932.944)
Cpufreq OPP: 1000    Measured:  945 (941.107/936.320/941.912)
Cpufreq OPP:  667    Measured:  610 (609.655/616.254/614.871)
Cpufreq OPP:  500    Measured:  460 (455.930/457.102/448.697)
Cpufreq OPP:  250    Measured:  220 (215.441/215.243/214.641)
Cpufreq OPP:  100    Measured:   70 (68.665/69.017/52.219)

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (cpu-thermal)
                (Armbian wants to use /sys/class/hwmon/hwmon0 instead, that
                zone is named scpi_sensors. Please check and if wrong
                file a bug here: https://github.com/armbian/build/issues/)

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:01:37: 2016MHz  0.71   9%   1%   6%   0%   0%   1%  41.0°C
21:02:17: 2016MHz  0.85  27%   0%  23%   0%   1%   1%  47.0°C
21:02:57: 2016MHz  0.92  25%   0%  23%   0%   0%   1%  48.0°C
21:03:37: 2016MHz  0.96  25%   0%  23%   0%   0%   1%  50.0°C
21:04:17: 2016MHz  0.98  25%   0%  23%   0%   0%   1%  50.0°C
21:04:57: 2016MHz  0.99  25%   0%  24%   0%   0%   0%  46.0°C
21:05:37: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  46.0°C
21:06:17: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  46.0°C
21:06:57: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  46.0°C
21:07:37: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:08:17: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:08:58: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  45.0°C
21:09:38: 2016MHz  1.00  25%   0%  24%   0%   0%   0%  47.0°C
21:10:18: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:10:58: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:11:38: 2016MHz  1.13  25%   0%  23%   0%   0%   1%  47.0°C
21:12:18: 2016MHz  1.11  25%   0%  23%   0%   0%   1%  47.0°C
21:12:58: 2016MHz  1.06  25%   0%  23%   0%   0%   1%  47.0°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:13:00: 2016MHz  1.06  15%   0%  13%   0%   0%   1%  48.0°C
21:13:16: 2016MHz  1.04  26%   0%  25%   0%   0%   0%  48.0°C
21:13:32: 2016MHz  1.03  25%   0%  24%   0%   0%   0%  50.0°C
21:13:48: 2016MHz  1.02  26%   0%  25%   0%   0%   0%  50.0°C
21:14:04: 2016MHz  1.02  26%   0%  25%   0%   0%   0%  50.0°C
21:14:20: 2016MHz  1.01  25%   0%  25%   0%   0%   0%  50.0°C
21:14:36: 2016MHz  1.01  25%   0%  25%   0%   0%   0%  50.0°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:14:48: 2016MHz  1.01  16%   0%  13%   0%   0%   1%  49.0°C
21:14:58: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:15:08: 2016MHz  1.00  25%   0%  24%   0%   0%   1%  46.0°C
21:15:18: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:15:28: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:15:38: 2016MHz  1.00  25%   0%  23%   0%   0%   0%  47.0°C
21:15:48: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:15:58: 2016MHz  1.00  25%   0%  23%   0%   0%   1%  47.0°C
21:16:08: 2016MHz  1.07  25%   0%  23%   0%   0%   0%  47.0°C
21:16:18: 2016MHz  1.06  25%   0%  23%   0%   0%   1%  47.0°C
21:16:29: 2016MHz  1.05  25%   0%  23%   0%   0%   1%  47.0°C
21:16:39: 2016MHz  1.04  25%   0%  23%   0%   0%   1%  47.0°C
21:16:49: 2016MHz  1.12  25%   0%  23%   0%   0%   1%  47.0°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
21:16:56: 2016MHz  1.11  16%   0%  14%   0%   0%   1%  47.0°C
21:17:19: 2016MHz  2.11  86%   0%  84%   0%   0%   1%  58.0°C
21:17:40: 2016MHz  2.66  86%   0%  84%   0%   0%   1%  55.0°C
21:18:05: 2016MHz  2.90  84%   1%  80%   0%   0%   1%  59.0°C
21:18:27: 2016MHz  3.16  76%   1%  73%   0%   0%   1%  59.0°C
21:18:48: 2016MHz  3.41  86%   0%  83%   0%   0%   1%  59.0°C
21:19:09: 2016MHz  3.64  90%   0%  88%   0%   0%   1%  62.0°C
21:19:30: 2016MHz  3.74  86%   0%  84%   0%   0%   1%  57.0°C
21:19:55: 2016MHz  3.76  85%   1%  82%   0%   0%   1%  62.0°C
21:20:17: 2016MHz  3.63  76%   1%  73%   0%   0%   1%  60.0°C
21:20:38: 2016MHz  3.81  86%   1%  83%   0%   0%   1%  60.0°C
21:20:59: 2016MHz  3.93  90%   0%  88%   0%   0%   1%  62.0°C
21:21:20: 2016MHz  4.01  86%   0%  83%   0%   0%   1%  58.0°C
21:21:44: 2016MHz  4.00  84%   1%  81%   0%   0%   1%  63.0°C
21:22:06: 2016MHz  3.58  76%   1%  73%   0%   0%   1%  62.0°C

##########################################################################

dmesg output while running the benchmarks:

[ 1213.064891] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1213.064914] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1213.098014] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1213.098037] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1213.130319] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1213.130340] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1213.161434] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1213.161456] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1513.091234] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1513.091247] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1513.105295] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1513.105308] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1513.118479] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1513.118493] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1513.131068] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1513.131081] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1813.052932] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1813.052945] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1813.067064] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1813.067077] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1813.080635] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1813.080648] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 1813.094184] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 1813.094197] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 2113.063261] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 2113.063275] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 2113.109746] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 2113.109761] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 2113.141551] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 2113.141565] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)
[ 2113.168422] meson8b-dwmac c9410000.ethernet eth0: no phy at addr -1
[ 2113.168435] meson8b-dwmac c9410000.ethernet eth0: stmmac_open: Cannot attach to PHY (error: -19)

##########################################################################

Linux 5.10.81-meson64 (nanopik2-s905) 	02/23/22 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          24.30    0.05    2.18    0.18    0.00   73.29

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           6.27       171.82       148.44         0.00     399552     345188          0
sda               0.03         0.60         0.00         0.00       1400          0          0
zram0             0.24         0.96         0.00         0.00       2240          4          0
zram1             1.40         0.52        22.22         0.00       1212      51664          0

               total        used        free      shared  buff/cache   available
Mem:           1.9Gi       255Mi       1.5Gi       0.0Ki       128Mi       1.6Gi
Swap:          982Mi          0B       982Mi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1006108	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      500    1536   Cortex-A53 / r0p4
  1        0        0      500    1536   Cortex-A53 / r0p4
  2        0        0      500    1536   Cortex-A53 / r0p4
  3        0        0      500    1536   Cortex-A53 / r0p4

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          4
On-line CPU(s) list:             0-3
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
NUMA node(s):                    1
Vendor ID:                       ARM
Model:                           4
Model name:                      Cortex-A53
Stepping:                        r0p4
CPU max MHz:                     2016.0000
CPU min MHz:                     100.0000
BogoMIPS:                        48.00
NUMA node0 CPU(s):               0-3
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm crc32 cpuid

SoC guess: Amlogic Meson GXBB (S905) Revision 1f:c (13:1)
 Compiler: /usr/bin/gcc (Debian 10.2.1-6/aarch64-linux-gnu)
 Userland: arm64
   Kernel: 5.10.81-meson64/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y
           raid6: neonx8   gen()  2734 MB/s
           raid6: neonx8   xor()  2047 MB/s
           raid6: neonx4   gen()  2820 MB/s
           raid6: neonx4   xor()  2034 MB/s
           raid6: neonx2   gen()  2664 MB/s
           raid6: neonx2   xor()  1868 MB/s
           raid6: neonx1   gen()  2330 MB/s
           raid6: neonx1   xor()  1597 MB/s
           raid6: int64x8  gen()  1908 MB/s
           raid6: int64x8  xor()  1004 MB/s
           raid6: int64x4  gen()  2051 MB/s
           raid6: int64x4  xor()  1085 MB/s
           raid6: int64x2  gen()  1811 MB/s
           raid6: int64x2  xor()   960 MB/s
           raid6: int64x1  gen()  1348 MB/s
           raid6: int64x1  xor()   702 MB/s
           raid6: using algorithm neonx4 gen() 2820 MB/s
           raid6: .... xor() 2034 MB/s, rmw enabled
           raid6: using neon recovery algorithm
           xor: measuring software checksum speed
           xor: using function: 32regs (3589 MB/sec)

| FriendlyARM NanoPi K2 | 2016 MHz | 5.10 | Bullseye arm64 | 3880 | 42840 | 51490 | 1850 | 3790 | - |