sbc-bench v0.9.3 Banana Pi BPI-M2-Ultra (Mon, 28 Mar 2022 21:22:37 -0300)

Distributor ID:	Debian
Description:	Debian GNU/Linux 10 (buster)
Release:	10
Codename:	buster

Armbian release info:
BOARD=bananapim2ultra
BOARD_NAME="Banana Pi M2U"
BOARDFAMILY=sun8i
BUILD_REPOSITORY_URL=https://github.com/armbian/build
BUILD_REPOSITORY_COMMIT=d3386b548-dirty
DISTRIBUTION_CODENAME=buster
DISTRIBUTION_STATUS=supported
VERSION=21.08.6
LINUXFAMILY=sunxi
ARCH=arm
IMAGE_TYPE=stable
BOARD_TYPE=csc
INITRD_ARCH=arm
KERNEL_IMAGE_TYPE=Image
BRANCH=edge

/usr/bin/gcc (Debian 8.3.0-6) 8.3.0

Uptime: 21:22:37 up 34 min,  1 user,  load average: 0.92, 0.34, 0.23

Linux 5.16.16-sunxi (bpi-m2u) 	03/28/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4.07    0.00    1.64    0.77    0.00   93.53

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0          14.17       332.15        41.00     686885      84784
mmcblk2           0.12         3.14         0.00       6492          0
mmcblk2boot0      0.03         0.11         0.00        232          0
mmcblk2boot1      0.03         0.11         0.00        232          0
sda               0.31         7.94         0.00      16419          4
zram0             0.29         1.14         0.00       2360          4
zram1             0.86         0.24        15.35        504      31740

              total        used        free      shared  buff/cache   available
Mem:          2.0Gi       395Mi       1.3Gi        29Mi       288Mi       1.5Gi
Swap:         1.0Gi          0B       1.0Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1031184	0	5

##########################################################################

Checking cpufreq OPP (Cortex-A7):

No cpufreq support available. Measured on cpu1: 1005 Mhz (1004.514/1004.368/1003.807)

##########################################################################

Executing benchmark on cpu0 (Cortex-A7):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :    229.5 MB/s (0.5%)
 C copy backwards (32 byte blocks)                    :    863.0 MB/s (1.1%)
 C copy backwards (64 byte blocks)                    :    910.5 MB/s (1.2%)
 C copy                                               :    910.6 MB/s (0.5%)
 C copy prefetched (32 bytes step)                    :    909.0 MB/s (0.4%)
 C copy prefetched (64 bytes step)                    :    967.4 MB/s (1.3%)
 C 2-pass copy                                        :    655.4 MB/s
 C 2-pass copy prefetched (32 bytes step)             :    738.4 MB/s (0.6%)
 C 2-pass copy prefetched (64 bytes step)             :    756.9 MB/s (0.3%)
 C fill                                               :   3177.0 MB/s
 C fill (shuffle within 16 byte blocks)               :   3187.5 MB/s (0.4%)
 C fill (shuffle within 32 byte blocks)               :    289.0 MB/s
 C fill (shuffle within 64 byte blocks)               :    331.4 MB/s (3.5%)
 ---
 standard memcpy                                      :    794.0 MB/s (2.0%)
 standard memset                                      :   2539.3 MB/s
 ---
 NEON read                                            :   1109.0 MB/s (1.7%)
 NEON read prefetched (32 bytes step)                 :   1257.2 MB/s (1.7%)
 NEON read prefetched (64 bytes step)                 :   1265.8 MB/s (0.8%)
 NEON read 2 data streams                             :    315.2 MB/s (0.2%)
 NEON read 2 data streams prefetched (32 bytes step)  :    605.4 MB/s (0.5%)
 NEON read 2 data streams prefetched (64 bytes step)  :    638.6 MB/s
 NEON copy                                            :    916.3 MB/s (1.3%)
 NEON copy prefetched (32 bytes step)                 :    924.9 MB/s (0.7%)
 NEON copy prefetched (64 bytes step)                 :   1007.4 MB/s (1.1%)
 NEON unrolled copy                                   :    911.6 MB/s (0.7%)
 NEON unrolled copy prefetched (32 bytes step)        :    891.7 MB/s (0.7%)
 NEON unrolled copy prefetched (64 bytes step)        :    945.4 MB/s (0.9%)
 NEON copy backwards                                  :    864.6 MB/s (0.4%)
 NEON copy backwards prefetched (32 bytes step)       :    860.8 MB/s (0.4%)
 NEON copy backwards prefetched (64 bytes step)       :    933.6 MB/s (0.4%)
 NEON 2-pass copy                                     :    740.3 MB/s (1.4%)
 NEON 2-pass copy prefetched (32 bytes step)          :    787.0 MB/s (0.8%)
 NEON 2-pass copy prefetched (64 bytes step)          :    816.1 MB/s (0.4%)
 NEON unrolled 2-pass copy                            :    646.0 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :    613.3 MB/s (0.3%)
 NEON unrolled 2-pass copy prefetched (64 bytes step) :    661.0 MB/s (1.4%)
 NEON fill                                            :   3175.4 MB/s (0.2%)
 NEON fill backwards                                  :   3166.4 MB/s (0.4%)
 VFP copy                                             :    914.1 MB/s (0.4%)
 VFP 2-pass copy                                      :    646.6 MB/s (0.5%)
 ARM fill (STRD)                                      :   2533.2 MB/s
 ARM fill (STM with 8 registers)                      :   3173.7 MB/s
 ARM fill (STM with 4 registers)                      :   3016.5 MB/s (0.2%)
 ARM copy prefetched (incr pld)                       :    970.4 MB/s (0.5%)
 ARM copy prefetched (wrap pld)                       :    885.2 MB/s (1.7%)
 ARM 2-pass copy prefetched (incr pld)                :    730.6 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :    687.7 MB/s (0.5%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON read (from framebuffer)                         :     43.9 MB/s (0.2%)
 NEON copy (from framebuffer)                         :     43.1 MB/s
 NEON 2-pass copy (from framebuffer)                  :     42.8 MB/s (0.2%)
 NEON unrolled copy (from framebuffer)                :     43.1 MB/s
 NEON 2-pass unrolled copy (from framebuffer)         :     42.2 MB/s
 VFP copy (from framebuffer)                          :    290.4 MB/s (0.3%)
 VFP 2-pass copy (from framebuffer)                   :    260.0 MB/s
 ARM copy (from framebuffer)                          :    159.0 MB/s (0.6%)
 ARM 2-pass copy (from framebuffer)                   :    150.2 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.1 ns 
     65536 :    6.3 ns          /    10.8 ns 
    131072 :    9.7 ns          /    15.4 ns 
    262144 :   12.2 ns          /    17.7 ns 
    524288 :   38.8 ns          /    63.8 ns 
   1048576 :  105.8 ns          /   163.0 ns 
   2097152 :  156.3 ns          /   211.6 ns 
   4194304 :  182.1 ns          /   228.9 ns 
   8388608 :  196.7 ns          /   237.8 ns 
  16777216 :  208.4 ns          /   247.9 ns 
  33554432 :  219.5 ns          /   264.1 ns 
  67108864 :  235.5 ns          /   292.2 ns 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A7)

OpenSSL 1.1.1n, built on 15 Mar 2022
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      15499.77k    22272.68k    25022.98k    25821.53k    26053.29k    25985.02k
aes-128-cbc      15608.93k    22296.68k    24984.66k    25824.26k    25990.49k    26072.41k
aes-192-cbc      14093.28k    19393.13k    21450.67k    22033.75k    22156.63k    22216.70k
aes-192-cbc      14044.00k    19360.15k    21443.75k    21976.41k    22140.17k    22222.17k
aes-256-cbc      12914.52k    17290.62k    18870.27k    19407.87k    19502.42k    19524.27k
aes-256-cbc      12930.89k    17321.96k    18915.58k    19404.46k    19565.23k    19567.96k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A7)

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   966   907   932   980   994   995   993   987

RAM size:    2014 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        488   100    475    475  |       9775   100    835    835
23:        472   100    482    482  |       9609   100    832    832
24:        459   100    494    494  |       9253   100    813    812
25:        442   100    505    505  |       9003   100    802    801
----------------------------------  | ------------------------------
Avr:             100    489    489  |              100    820    820
Tot:             100    655    654

##########################################################################

Executing benchmark 3 times multi-threaded

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   995   966   917   933   988   995   997   996

RAM size:    2014 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1305   306    415   1270  |      36317   379    817   3098
23:       1344   321    427   1370  |      35817   383    809   3099
24:       1324   327    436   1425  |      34747   382    798   3050
25:       1293   332    444   1477  |      32978   378    777   2935
----------------------------------  | ------------------------------
Avr:             321    431   1385  |              380    801   3046
Tot:             351    616   2216

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   997   997   996   996   997   997   996   997

RAM size:    2014 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1348   315    417   1312  |      36611   382    817   3124
23:       1342   321    426   1368  |      36500   389    812   3158
24:       1324   327    436   1424  |      35177   387    797   3088
25:       1298   333    445   1483  |      33420   383    776   2974
----------------------------------  | ------------------------------
Avr:             324    431   1397  |              386    801   3086
Tot:             355    616   2241

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq:   997   997   997   997   997   997   997   997

RAM size:    2014 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1349   315    416   1313  |      36960   386    817   3153
23:       1337   321    425   1363  |      36288   387    812   3140
24:       1306   325    433   1405  |      34804   383    798   3055
25:       1266   327    442   1446  |      33711   386    778   3000
----------------------------------  | ------------------------------
Avr:             322    429   1382  |              385    801   3087
Tot:             354    615   2234

Compression: 1385,1397,1382
Decompression: 3046,3086,3087
Total: 2216,2241,2234

##########################################################################

Testing clockspeeds again. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
21:44:54:   ---      4.25  85%   2%  82%   0%   0%   0%  65.8°C

Checking cpufreq OPP (Cortex-A7):

No cpufreq support available. Measured on cpu1: 1010 Mhz (1005.358/1003.977/1003.941)

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu0_thermal)

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
21:22:40:   ---      0.92   6%   1%   4%   0%   0%   0%  55.8°C
21:23:21:   ---      0.96  27%   0%  26%   0%   0%   0%  60.6°C
21:24:01:   ---      0.98  27%   0%  26%   0%   0%   0%  59.8°C
21:24:41:   ---      1.05  28%   0%  27%   0%   0%   0%  59.0°C
21:25:21:   ---      1.08  27%   0%  26%   0%   0%   0%  60.8°C
21:26:01:   ---      1.11  28%   0%  27%   0%   0%   0%  61.6°C
21:26:41:   ---      1.12  27%   0%  26%   0%   0%   0%  61.2°C
21:27:21:   ---      1.06  27%   0%  26%   0%   0%   0%  61.7°C
21:28:02:   ---      1.07  26%   0%  26%   0%   0%   0%  58.3°C
21:28:42:   ---      1.11  26%   0%  25%   0%   0%   0%  56.4°C
21:29:22:   ---      1.06  27%   0%  26%   0%   0%   0%  57.0°C
21:30:02:   ---      1.03  27%   0%  27%   0%   0%   0%  57.1°C
21:30:42:   ---      1.01  26%   0%  26%   0%   0%   0%  56.8°C
21:31:22:   ---      1.00  27%   0%  26%   0%   0%   0%  57.2°C
21:32:02:   ---      1.19  27%   0%  26%   0%   0%   0%  57.1°C
21:32:42:   ---      1.50  26%   0%  26%   0%   0%   0%  57.2°C
21:33:22:   ---      1.31  26%   0%  26%   0%   0%   0%  57.4°C
21:34:03:   ---      1.36  27%   0%  26%   0%   0%   0%  57.4°C
21:34:43:   ---      1.18  27%   0%  27%   0%   0%   0%  57.2°C

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
21:34:56:   ---      1.15  11%   1%  10%   0%   0%   0%  57.5°C
21:35:12:   ---      1.11  26%   0%  26%   0%   0%   0%  57.3°C
21:35:29:   ---      1.08  26%   0%  25%   0%   0%   0%  57.7°C
21:35:45:   ---      1.06  26%   0%  26%   0%   0%   0%  57.1°C
21:36:01:   ---      1.05  27%   0%  27%   0%   0%   0%  57.2°C
21:36:17:   ---      1.04  26%   0%  25%   0%   0%   0%  57.1°C
21:36:33:   ---      1.15  26%   0%  26%   0%   0%   0%  57.2°C

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
21:36:45:   ---      1.21  12%   1%  10%   0%   0%   0%  56.7°C
21:37:00:   ---      1.16  26%   0%  25%   0%   0%   0%  56.7°C
21:37:15:   ---      1.19  26%   1%  25%   0%   0%   0%  57.1°C
21:37:30:   ---      1.15  26%   1%  25%   0%   0%   0%  57.2°C
21:37:45:   ---      1.12  26%   1%  25%   0%   0%   0%  57.3°C
21:38:00:   ---      1.09  26%   1%  25%   0%   0%   0%  56.5°C
21:38:15:   ---      1.07  26%   1%  25%   0%   0%   0%  57.5°C
21:38:30:   ---      1.05  26%   1%  25%   0%   0%   0%  57.5°C
21:38:46:   ---      1.04  26%   1%  25%   0%   0%   0%  57.3°C
21:39:01:   ---      1.03  27%   1%  26%   0%   0%   0%  57.1°C
21:39:16:   ---      1.02  27%   1%  26%   0%   0%   0%  57.1°C

System health while running 7-zip multi core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
21:39:21:   ---      1.02  13%   1%  11%   0%   0%   0%  56.8°C
21:39:52:   ---      2.16  82%   2%  80%   0%   0%   0%  64.2°C
21:40:22:   ---      2.72  82%   3%  79%   0%   0%   0%  64.4°C
21:40:53:   ---      3.00  78%   3%  75%   0%   0%   0%  65.1°C
21:41:23:   ---      3.40  85%   3%  81%   0%   0%   0%  63.6°C
21:41:53:   ---      3.69  83%   2%  81%   0%   0%   0%  64.4°C
21:42:23:   ---      3.59  81%   3%  77%   0%   0%   0%  63.2°C
21:42:53:   ---      3.68  83%   2%  80%   0%   0%   0%  65.4°C
21:43:24:   ---      3.48  84%   3%  80%   0%   0%   0%  64.9°C
21:43:54:   ---      3.69  83%   2%  80%   0%   0%   0%  65.3°C
21:44:24:   ---      3.69  81%   3%  77%   0%   0%   0%  64.7°C
21:44:54:   ---      4.25  85%   2%  82%   0%   0%   0%  65.8°C

##########################################################################

Linux 5.16.16-sunxi (bpi-m2u) 	03/28/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          18.50    0.01    1.53    0.47    0.00   79.49

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
mmcblk0           9.24       208.53        27.54     714945      94416
mmcblk2           0.07         1.89         0.00       6492          0
mmcblk2boot0      0.02         0.07         0.00        232          0
mmcblk2boot1      0.02         0.07         0.00        232          0
sda               0.19         4.79         0.00      16422          4
zram0             0.17         0.69         0.00       2360          4
zram1             0.83         0.15        10.50        524      35988

              total        used        free      shared  buff/cache   available
Mem:          2.0Gi       401Mi       1.3Gi        31Mi       320Mi       1.5Gi
Swap:         1.0Gi          0B       1.0Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1031184	0	5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0       -      -     Cortex-A7 / r0p5
  1        0        0       -      -     Cortex-A7 / r0p5
  2        0        0       -      -     Cortex-A7 / r0p5
  3        0        0       -      -     Cortex-A7 / r0p5

Architecture:        armv7l
Byte Order:          Little Endian
CPU(s):              4
On-line CPU(s) list: 0-3
Thread(s) per core:  1
Core(s) per socket:  4
Socket(s):           1
Vendor ID:           ARM
Model:               5
Model name:          Cortex-A7
Stepping:            r0p5
BogoMIPS:            48.00
Flags:               half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm

SoC guess: Allwinner R40/V40
 Compiler: /usr/bin/gcc (Debian 8.3.0-6/arm-linux-gnueabihf)
 Userland: armhf
   Kernel: 5.16.16-sunxi/armv7l
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_HZ_FIXED=0
           CONFIG_PREEMPT_NONE=y
           CONFIG_PREEMPT_NONE_BUILD=y
           raid6: neonx8   gen()   777 MB/s
           raid6: neonx8   xor()   576 MB/s
           raid6: neonx4   gen()   828 MB/s
           raid6: neonx4   xor()   631 MB/s
           raid6: neonx2   gen()   915 MB/s
           raid6: neonx2   xor()   652 MB/s
           raid6: neonx1   gen()   815 MB/s
           raid6: neonx1   xor()   564 MB/s
           raid6: int32x8  gen()   303 MB/s
           raid6: int32x8  xor()   180 MB/s
           raid6: int32x4  gen()   354 MB/s
           raid6: int32x4  xor()   205 MB/s
           raid6: int32x2  gen()   399 MB/s
           raid6: int32x2  xor()   213 MB/s
           raid6: int32x1  gen()   401 MB/s
           raid6: int32x1  xor()   192 MB/s
           raid6: using algorithm neonx2 gen() 915 MB/s
           raid6: .... xor() 652 MB/s, rmw enabled
           raid6: using neon recovery algorithm
           xor: measuring software checksum speed
           xor: using function: neon (1320 MB/sec)

| Banana Pi BPI-M2-Ultra | no cpufreq support | 5.16 | Buster armhf | 2230 | 15550 | 19540 | 790 | 2540 | - |