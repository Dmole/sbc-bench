sbc-bench v0.7.7 Radxa Zero (Thu, 26 Aug 2021 04:47:13 +0000)

Distributor ID:	Ubuntu
Description:	Ubuntu 20.04.3 LTS
Release:	20.04
Codename:	focal

Armbian release info:
BOARD=radxa-zero
BOARD_NAME="Radxa Zero"
BOARDFAMILY=meson-g12a
BUILD_REPOSITORY_URL=git@github.com:lanefu/build.git
BUILD_REPOSITORY_COMMIT=91ad2214e
DISTRIBUTION_CODENAME=focal
DISTRIBUTION_STATUS=supported
VERSION=21.08.0-trunk
LINUXFAMILY=meson64
ARCH=arm64
IMAGE_TYPE=user-built
BOARD_TYPE=conf
INITRD_ARCH=arm64
KERNEL_IMAGE_TYPE=Image
BRANCH=current

/usr/bin/gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0

Uptime: 04:47:14 up 8 min,  1 user,  load average: 0.50, 0.35, 0.20

Linux 5.10.60-meson64 (radxa-zero) 	08/26/2021 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           4.54    0.00    2.59    1.18    0.00   91.69

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1          33.31       786.40      1421.03         0.00     387697     700568          0
mmcblk2           0.39         8.61         0.00         0.00       4244          0          0
mmcblk2boot0      0.18         0.71         0.00         0.00        348          0          0
mmcblk2boot1      0.18         0.71         0.00         0.00        348          0          0
zram0             1.15         4.59         0.01         0.00       2264          4          0
zram1             0.52         0.90         2.92         0.00        444       1440          0

              total        used        free      shared  buff/cache   available
Mem:          3.7Gi       138Mi       3.1Gi       5.0Mi       529Mi       3.5Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1953412	0	5

##########################################################################

Checking cpufreq OPP:

Cpufreq OPP: 1800    Measured: 1797.686/1798.026/1797.606
Cpufreq OPP: 1704    Measured: 1701.549/1698.558/1701.531
Cpufreq OPP: 1608    Measured: 1606.357/1605.678/1605.638
Cpufreq OPP: 1512    Measured: 1497.647/1497.786/1496.970
Cpufreq OPP: 1398    Measured: 1395.713/1393.815/1394.236
Cpufreq OPP: 1200    Measured: 1197.647/1197.980/1197.730
Cpufreq OPP: 1000    Measured: 997.663/998.446/997.723
Cpufreq OPP:  666    Measured: 664.509/664.683/664.115
Cpufreq OPP:  500    Measured: 497.847/497.566/497.929
Cpufreq OPP:  250    Measured: 248.033/248.263/248.115
Cpufreq OPP:  100    Measured: 97.757/98.189/98.028

##########################################################################

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1596.2 MB/s (0.8%)
 C copy backwards (32 byte blocks)                    :   1604.7 MB/s (1.8%)
 C copy backwards (64 byte blocks)                    :   1598.9 MB/s (1.6%)
 C copy                                               :   1554.2 MB/s (1.4%)
 C copy prefetched (32 bytes step)                    :   1276.4 MB/s
 C copy prefetched (64 bytes step)                    :   1482.9 MB/s
 C 2-pass copy                                        :   1524.1 MB/s
 C 2-pass copy prefetched (32 bytes step)             :   1134.2 MB/s
 C 2-pass copy prefetched (64 bytes step)             :    931.9 MB/s
 C fill                                               :   5370.7 MB/s (0.2%)
 C fill (shuffle within 16 byte blocks)               :   5369.5 MB/s
 C fill (shuffle within 32 byte blocks)               :   5369.9 MB/s
 C fill (shuffle within 64 byte blocks)               :   5370.5 MB/s (0.2%)
 ---
 standard memcpy                                      :   1602.6 MB/s (0.3%)
 standard memset                                      :   5369.9 MB/s
 ---
 NEON LDP/STP copy                                    :   1604.5 MB/s
 NEON LDP/STP copy pldl2strm (32 bytes step)          :   1150.8 MB/s (0.5%)
 NEON LDP/STP copy pldl2strm (64 bytes step)          :   1462.4 MB/s
 NEON LDP/STP copy pldl1keep (32 bytes step)          :   1905.9 MB/s
 NEON LDP/STP copy pldl1keep (64 bytes step)          :   1905.8 MB/s
 NEON LD1/ST1 copy                                    :   1593.6 MB/s (0.7%)
 NEON STP fill                                        :   5371.7 MB/s (0.1%)
 NEON STNP fill                                       :   5207.8 MB/s (0.6%)
 ARM LDP/STP copy                                     :   1605.8 MB/s
 ARM STP fill                                         :   5371.3 MB/s (0.3%)
 ARM STNP fill                                        :   5205.6 MB/s (6.6%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)                 :    211.2 MB/s (0.1%)
 NEON LDP/STP 2-pass copy (from framebuffer)          :    216.6 MB/s
 NEON LD1/ST1 copy (from framebuffer)                 :     57.6 MB/s
 NEON LD1/ST1 2-pass copy (from framebuffer)          :     57.6 MB/s
 ARM LDP/STP copy (from framebuffer)                  :    111.3 MB/s
 ARM LDP/STP 2-pass copy (from framebuffer)           :    112.9 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.8 ns          /     6.5 ns 
    131072 :    5.8 ns          /     9.1 ns 
    262144 :    6.9 ns          /    10.2 ns 
    524288 :    8.4 ns          /    12.0 ns 
   1048576 :   83.5 ns          /   129.8 ns 
   2097152 :  124.6 ns          /   168.2 ns 
   4194304 :  149.1 ns          /   185.7 ns 
   8388608 :  162.2 ns          /   193.3 ns 
  16777216 :  169.8 ns          /   198.0 ns 
  33554432 :  173.7 ns          /   201.1 ns 
  67108864 :  175.9 ns          /   203.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    3.8 ns          /     6.5 ns 
    131072 :    5.8 ns          /     9.1 ns 
    262144 :    6.9 ns          /    10.2 ns 
    524288 :    8.4 ns          /    12.1 ns 
   1048576 :   84.1 ns          /   129.7 ns 
   2097152 :  123.9 ns          /   167.5 ns 
   4194304 :  144.5 ns          /   180.2 ns 
   8388608 :  154.7 ns          /   184.9 ns 
  16777216 :  159.8 ns          /   186.9 ns 
  33554432 :  162.3 ns          /   187.8 ns 
  67108864 :  163.3 ns          /   188.3 ns 

##########################################################################

OpenSSL 1.1.1f, built on 31 Mar 2020
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     151341.37k   454634.43k   894198.27k  1208377.00k  1347089.75k  1354164.91k
aes-128-cbc     151394.46k   454847.72k   894354.35k  1209247.06k  1347431.08k  1356589.74k
aes-192-cbc     144519.69k   405723.82k   731562.41k   932772.18k  1014194.18k  1019576.32k
aes-192-cbc     144563.21k   406214.42k   731756.03k   933220.69k  1014628.35k  1018762.58k
aes-256-cbc     140278.26k   374453.87k   634580.22k   780679.17k   836960.26k   840592.04k
aes-256-cbc     140321.37k   374688.58k   634921.90k   781125.97k   837416.28k   839559.85k

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 64000000 - 64000000 - - - - -

RAM size:    3815 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        906    99    889    882  |      18991   100   1627   1620
23:        888    99    913    905  |      18585   100   1615   1608
24:        875    99    949    941  |      18221   100   1606   1600
25:        865    99    997    988  |      17885   100   1598   1592
----------------------------------  | ------------------------------
Avr:              99    937    929  |              100   1611   1605
Tot:              99   1274   1267

##########################################################################

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - - - - - -

RAM size:    3815 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2804   333    819   2728  |      75184   394   1629   6414
23:       2733   336    830   2785  |      73791   395   1616   6385
24:       2699   336    863   2903  |      72039   395   1603   6324
25:       2685   339    906   3067  |      70755   394   1597   6297
----------------------------------  | ------------------------------
Avr:             336    854   2870  |              394   1611   6355
Tot:             365   1233   4613

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - - - - - -

RAM size:    3815 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2813   334    819   2737  |      75174   394   1628   6414
23:       2722   332    834   2773  |      73597   394   1614   6368
24:       2710   337    866   2914  |      71988   394   1605   6320
25:       2690   338    908   3072  |      70841   395   1596   6305
----------------------------------  | ------------------------------
Avr:             335    857   2874  |              394   1611   6351
Tot:             365   1234   4613

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs LE)

LE
CPU Freq: 64000000 - - - - 256000000 - - -

RAM size:    3815 MB,  # CPU hardware threads:   4
RAM usage:    882 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       2814   335    818   2738  |      75054   393   1627   6403
23:       2733   335    832   2786  |      73603   394   1615   6368
24:       2710   337    864   2915  |      72055   394   1604   6325
25:       2674   337    907   3054  |      70748   394   1597   6296
----------------------------------  | ------------------------------
Avr:             336    855   2873  |              394   1611   6348
Tot:             365   1233   4611

Compression: 2870,2874,2873
Decompression: 6355,6351,6348
Total: 4613,4613,4611

##########################################################################

Testing clockspeeds again. System health now:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
05:06:08: 1800MHz  3.57  84%   1%  82%   0%   0%   0%  55.1°C

Checking cpufreq OPP:

Cpufreq OPP: 1800    Measured: 1784.114/1786.761/1774.367
Cpufreq OPP: 1704    Measured: 939.844/923.792/928.170
Cpufreq OPP: 1608    Measured: 1596.526/1595.145/1596.486
Cpufreq OPP: 1512    Measured: 1301.455/1482.343/1267.817
Cpufreq OPP: 1398    Measured: 1388.704/1389.869/1389.540
Cpufreq OPP: 1200    Measured: 1371.802/1102.617/1192.317
Cpufreq OPP: 1000    Measured: 646.940/625.561/637.904
Cpufreq OPP:  666    Measured: 658.342/548.027/657.319
Cpufreq OPP:  500    Measured: 332.636/317.573/302.023
Cpufreq OPP:  250    Measured: 247.438/248.257/247.217
Cpufreq OPP:  100    Measured: 96.882/97.533/97.656

##########################################################################

System health while running tinymembench:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:47:22: 1800MHz  0.49   8%   2%   4%   0%   1%   0%  39.6°C
04:49:23: 1800MHz  0.99  25%   0%  24%   0%   0%   0%  49.0°C
04:51:23: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  42.4°C
04:53:23: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  41.7°C

System health while running OpenSSL benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:54:28: 1800MHz  1.00  16%   1%  14%   0%   0%   0%  42.6°C
04:54:38: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  42.8°C
04:54:48: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  42.9°C
04:54:58: 1800MHz  1.00  25%   0%  25%   0%   0%   0%  43.3°C
04:55:08: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  42.9°C
04:55:18: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.1°C
04:55:28: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.3°C
04:55:38: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.7°C
04:55:48: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.0°C
04:55:58: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.3°C
04:56:08: 1800MHz  1.00  25%   0%  24%   0%   0%   0%  43.7°C

System health while running 7-zip single core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
04:56:16: 1800MHz  1.00  17%   1%  15%   0%   0%   0%  43.9°C
04:57:16: 1800MHz  2.49  25%   0%  24%   0%   0%   0%  42.7°C
04:58:16: 1800MHz  3.23  25%   0%  24%   0%   0%   0%  42.9°C
04:59:16: 1800MHz  3.33  25%   0%  24%   0%   0%   0%  43.0°C
05:00:16: 1800MHz  3.15  25%   0%  24%   0%   0%   0%  43.1°C
05:01:16: 1800MHz  3.02  25%   0%  24%   0%   0%   0%  43.2°C

System health while running 7-zip multi core benchmark:

Time        CPU    load %cpu %sys %usr %nice %io %irq   Temp
05:01:38: 1800MHz  3.35  19%   0%  17%   0%   0%   0%  43.8°C
05:01:59: 1800MHz  3.60  91%   0%  90%   0%   0%   0%  50.1°C
05:02:19: 1800MHz  3.86  90%   0%  89%   0%   0%   0%  50.7°C
05:02:39: 1800MHz  3.90  90%   0%  88%   0%   0%   0%  48.6°C
05:02:59: 1800MHz  3.94  84%   1%  82%   0%   0%   0%  51.9°C
05:03:19: 1800MHz  4.02  92%   0%  90%   0%   0%   0%  52.5°C
05:03:42: 1800MHz  3.93  92%   0%  90%   0%   0%   0%  54.2°C
05:04:07: 1800MHz  4.00  91%   0%  89%   0%   0%   0%  54.6°C
05:04:27: 1800MHz  4.12  85%   0%  83%   0%   0%   0%  53.3°C
05:04:48: 1800MHz  3.98  93%   0%  91%   0%   0%   0%  54.5°C
05:05:08: 1800MHz  4.13  91%   0%  90%   0%   0%   0%  54.1°C
05:05:28: 1800MHz  3.93  90%   0%  88%   0%   0%   0%  54.2°C
05:05:48: 1800MHz  3.71  90%   0%  88%   0%   0%   0%  54.6°C
05:06:08: 1800MHz  3.57  84%   1%  82%   0%   0%   0%  55.1°C

##########################################################################

Linux 5.10.60-meson64 (radxa-zero) 	08/26/2021 	_aarch64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          30.00    0.01    1.26    0.40    0.00   68.33

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1          10.41       235.22       508.17         0.00     388009     838272          0
mmcblk2           0.12         2.57         0.00         0.00       4244          0          0
mmcblk2boot0      0.05         0.21         0.00         0.00        348          0          0
mmcblk2boot1      0.05         0.21         0.00         0.00        348          0          0
zram0             0.34         1.37         0.00         0.00       2264          4          0
zram1             0.17         0.27         0.95         0.00        444       1572          0

              total        used        free      shared  buff/cache   available
Mem:          3.7Gi       245Mi       3.0Gi       5.0Mi       529Mi       3.4Gi
Swap:         1.9Gi          0B       1.9Gi

Filename				Type		Size	Used	Priority
/dev/zram0                             	partition	1953412	0	5

Architecture:                    aarch64
CPU op-mode(s):                  32-bit, 64-bit
Byte Order:                      Little Endian
CPU(s):                          4
On-line CPU(s) list:             0-3
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
NUMA node(s):                    1
Vendor ID:                       ARM
Model:                           4
Model name:                      Cortex-A53
Stepping:                        r0p4
CPU max MHz:                     1800.0000
CPU min MHz:                     100.0000
BogoMIPS:                        48.00
NUMA node0 CPU(s):               0-3
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected
Flags:                           fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
