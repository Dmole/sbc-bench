sbc-bench v0.9.8 Allwinner D1 (Tue, 21 Jun 2022 18:32:41 +0000)

Distributor ID:	Ubuntu
Description:	Ubuntu 22.04 LTS
Release:	22.04
Codename:	jammy

/usr/bin/gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0

Uptime: 18:32:44 up 36 min,  4 users,  load average: 0.31, 0.16, 0.11

Linux 5.4.61 (devterm-R01) 	06/21/22 	_riscv64_	(1 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           3.61    0.03    4.43    0.24    0.00   91.68

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           3.07       105.87        12.91         0.00     233875      28524          0

               total        used        free      shared  buff/cache   available
Mem:           960Mi        91Mi       792Mi       1.0Mi        77Mi       852Mi
Swap:          2.0Gi          0B       2.0Gi

Filename				Type		Size		Used		Priority
/swapfile                               file		2097148		0		-2

##########################################################################

Checking cpufreq OPP:

No cpufreq support available. Measured on cpu0: 925 MHz (998.772/904.926/872.906)

##########################################################################

Hardware sensors:

axp20x_battery-isa-0000
in0:           4.17 V  
curr1:         1.05 A  

##########################################################################

Executing benchmark on cpu0:

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :   1227.7 MB/s (1.2%)
 C copy backwards (32 byte blocks)                    :    291.0 MB/s (2.2%)
 C copy backwards (64 byte blocks)                    :    194.3 MB/s (1.7%)
 C copy                                               :   1288.5 MB/s (1.1%)
 C copy prefetched (32 bytes step)                    :   1284.4 MB/s (2.0%)
 C copy prefetched (64 bytes step)                    :   1284.4 MB/s (1.3%)
 C 2-pass copy                                        :    858.6 MB/s (2.1%)
 C 2-pass copy prefetched (32 bytes step)             :    844.5 MB/s (1.1%)
 C 2-pass copy prefetched (64 bytes step)             :    857.3 MB/s (0.7%)
 C fill                                               :   2604.1 MB/s (0.8%)
 C fill (shuffle within 16 byte blocks)               :    336.3 MB/s (1.4%)
 C fill (shuffle within 32 byte blocks)               :    327.4 MB/s (2.2%)
 C fill (shuffle within 64 byte blocks)               :    329.4 MB/s (1.4%)
 ---
 standard memcpy                                      :   1221.7 MB/s (3.0%)
 standard memset                                      :   2638.7 MB/s (1.5%)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.1 ns 
      8192 :    0.1 ns          /     0.6 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.2 ns          /     0.3 ns 
     65536 :   74.6 ns          /   117.5 ns 
    131072 :  110.9 ns          /   153.8 ns 
    262144 :  129.9 ns          /   166.6 ns 
    524288 :  138.4 ns          /   171.5 ns 
   1048576 :  143.8 ns          /   173.9 ns 
   2097152 :  171.0 ns          /   216.0 ns 
   4194304 :  189.3 ns          /   252.2 ns 
   8388608 :  220.5 ns          /   304.3 ns 
  16777216 :  251.7 ns          /   369.6 ns 
  33554432 :  279.5 ns          /   423.3 ns 
  67108864 :  297.9 ns          /   458.4 ns 

##########################################################################

Executing ramlat on cpu0, results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 4.119 5.238 4.034 5.435 2.011 2.150 4.264 8.231 
         8k: 4.653 5.721 4.013 4.997 2.185 2.260 4.214 8.620 
        16k: 4.291 5.501 4.042 5.304 2.000 2.213 4.512 8.684 
        32k: 4.349 5.445 4.041 5.405 2.078 2.190 4.426 8.493 
        64k: 160.1 178.3 156.0 181.0 152.2 157.7 166.7 220.8 
       128k: 155.0 180.9 155.3 178.6 160.6 155.7 164.5 225.0 
       256k: 155.2 176.0 161.8 174.2 158.2 153.7 171.4 224.4 
       512k: 159.4 181.9 158.5 177.4 161.6 158.4 179.3 228.8 
      1024k: 173.4 178.9 160.8 183.0 156.0 159.6 168.8 220.8 
      2048k: 178.3 197.8 172.1 201.5 171.9 181.6 196.9 245.2 
      4096k: 175.9 198.4 173.7 203.0 168.5 171.1 186.3 245.3 
      8192k: 176.3 199.6 170.8 212.1 178.6 185.0 186.1 263.2 
     16384k: 265.8 284.7 270.1 300.9 257.5 267.5 275.5 339.2 

##########################################################################

Executing benchmark twice on cluster 0

OpenSSL 3.0.2, built on 15 Mar 2022 (Library: OpenSSL 3.0.2 15 Mar 2022)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc       8654.13k    10926.63k    11286.19k    11520.34k    11720.02k    12031.32k
aes-128-cbc       9144.80k    11067.22k    11916.12k    11859.29k    11791.02k    11616.26k
aes-192-cbc       7987.16k     9812.07k    10231.89k    10082.65k    10278.23k    10556.76k
aes-192-cbc       8086.31k     9507.18k    10153.90k    10509.99k    10502.14k    10425.69k
aes-256-cbc       7478.82k     8727.87k     9053.61k     9161.05k     8781.82k     9076.74k
aes-256-cbc       7343.79k     8583.36k     9066.24k     9262.42k     9218.73k     9005.74k

##########################################################################

Executing benchmark single-threaded on cpu0

7-Zip (a) 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,1 CPU LE)

LE
CPU Freq: 32000000 32000000 32000000 32000000 42666666 128000000 256000000 512000000 1024000000

RAM size:     960 MB,  # CPU hardware threads:   1
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        315    97    318    307  |       7031    97    617    600
23:        249    80    318    254  |       6866    97    615    594
24:        300    97    331    323  |       6736    97    612    591
25:        293    96    347    335  |       6490    96    602    578
----------------------------------  | ------------------------------
Avr:              93    328    305  |               97    611    591
Tot:              95    470    448

Compression: 305
Decompression: 591
Total: 448

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:53:30:   ---      1.42 100%   4%  95%   0%   0%   0%  67.9째C

Checking cpufreq OPP:

No cpufreq support available. Measured on cpu0: 1003 MHz (1016.399/1004.002/990.667)

##########################################################################

Hardware sensors:

axp20x_battery-isa-0000
in0:           4.26 V  
curr1:         1.05 A  

##########################################################################

Thermal source: /sys/devices/virtual/thermal/thermal_zone0/ (cpu_thermal_zone)

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:33:04:   ---      0.69   9%   4%   4%   0%   0%   0%  66.9째C
18:33:52:   ---      0.94 100%   0%  99%   0%   0%   0%  68.9째C
18:34:40:   ---      1.01 100%   0%  99%   0%   0%   0%  67.9째C
18:35:29:   ---      1.19 100%   1%  97%   0%   0%   0%  66.4째C
18:36:17:   ---      1.20 100%   0%  99%   0%   0%   0%  65.7째C
18:37:05:   ---      1.13 100%   0%  98%   0%   0%   0%  66.2째C
18:37:53:   ---      1.14 100%   0%  98%   0%   0%   0%  66.0째C
18:38:41:   ---      1.23 100%   0%  98%   0%   0%   0%  66.2째C
18:39:29:   ---      1.21 100%   0%  98%   0%   0%   0%  66.9째C
18:40:18:   ---      1.17 100%   0%  99%   0%   0%   0%  66.5째C
18:41:07:   ---      1.12 100%   0%  98%   0%   0%   0%  66.8째C
18:41:55:   ---      1.13 100%   0%  99%   0%   0%   0%  67.1째C
18:42:44:   ---      1.13 100%   0%  98%   0%   0%   0%  67.3째C
18:43:32:   ---      1.18 100%   0%  98%   0%   0%   0%  67.3째C
18:44:20:   ---      1.26 100%   0%  98%   0%   0%   0%  67.7째C
18:45:09:   ---      1.19 100%   0%  98%   0%   0%   0%  67.7째C

System health while running ramlat:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:45:37:   ---      1.39  32%   3%  28%   0%   0%   0%  67.6째C
18:45:49:   ---      1.48 100%   0%  98%   0%   0%   0%  67.4째C

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:46:10:   ---      1.64  32%   3%  29%   0%   0%   0%  67.9째C
18:46:34:   ---      1.54 100%   0%  98%   0%   0%   0%  67.6째C
18:46:59:   ---      1.62 100%   0%  98%   0%   0%   0%  66.8째C
18:47:23:   ---      1.46 100%   0%  99%   0%   0%   0%  67.1째C

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
18:47:59:   ---      1.65  35%   3%  31%   0%   0%   0%  66.7째C
18:48:22:   ---      1.53 100%   1%  97%   0%   0%   0%  67.1째C
18:48:45:   ---      1.47 100%   0%  98%   0%   0%   0%  67.0째C
18:49:14:   ---      1.43 100%   3%  96%   0%   0%   0%  67.1째C
18:49:37:   ---      1.66 100%   4%  95%   0%   0%   0%  67.3째C
18:50:01:   ---      1.56 100%   0%  99%   0%   0%   0%  67.5째C
18:50:24:   ---      1.49 100%   4%  94%   0%   0%   0%  67.7째C
18:50:47:   ---      1.41 100%   2%  97%   0%   0%   0%  67.8째C
18:51:10:   ---      1.51 100%   2%  96%   0%   0%   0%  67.5째C
18:51:34:   ---      1.51 100%   4%  95%   0%   0%   0%  67.3째C
18:51:57:   ---      1.43 100%   4%  95%   0%   0%   0%  67.6째C
18:52:20:   ---      1.52 100%   2%  96%   0%   0%   0%  67.2째C
18:52:44:   ---      1.46 100%   3%  96%   0%   0%   0%  67.7째C
18:53:07:   ---      1.45 100%   2%  96%   0%   0%   0%  67.7째C
18:53:30:   ---      1.42 100%   4%  95%   0%   0%   0%  67.9째C

##########################################################################

Linux 5.4.61 (devterm-R01) 	06/21/22 	_riscv64_	(1 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          38.12    0.03    3.58    0.19    0.00   58.07

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk0           2.40        89.62         9.06         0.00     311287      31472          0

               total        used        free      shared  buff/cache   available
Mem:           960Mi        91Mi       714Mi       1.0Mi       154Mi       852Mi
Swap:          2.0Gi          0B       2.0Gi

Filename				Type		Size		Used		Priority
/swapfile                               file		2097148		0		-2

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0       -1        0       -      -         -

Architecture:        riscv64
Byte Order:          Little Endian
CPU(s):              1
On-line CPU(s) list: 0

SoC guess: Allwinner D1
DT compat: allwinner,d1
           arm,sun20iw1p1
           allwinner,sun20iw1p1
 Compiler: /usr/bin/gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0 / riscv64-linux-gnu
 Userland: riscv64
   Kernel: 5.4.61/riscv64
           CONFIG_HZ=100
           CONFIG_HZ_100=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_RCU=y

| Allwinner D1 | ~930 MHz | 5.4 | Ubuntu 22.04 LTS riscv64 | 450 | 8900 | 9040 | 1220 | 2640 | - |