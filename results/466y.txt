sbc-bench v0.9.8 Mediatek MT6580 K9M1-test board (Sat, 30 Jul 2022 16:40:18 +0300)

Distributor ID:	Debian
Description:	Debian GNU/Linux bookworm/sid
Release:	unstable
Codename:	sid

/usr/bin/gcc (Debian 12.1.0-7) 12.1.0

Uptime: 16:40:20 up 3 days, 21:15,  1 user,  load average: 0.97, 0.45, 0.23,  0Â°C

Linux 5.19.0-rc4+ (mediatek) 	07/30/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.34    0.00    0.08    0.38    0.00   99.20

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           3.62        35.07        37.57        23.66   11773502   12611048    7942840

               total        used        free      shared  buff/cache   available
Mem:           878Mi       174Mi       569Mi       0.0Ki       134Mi       683Mi
Swap:          2.0Gi       0.0Ki       2.0Gi

Filename				Type		Size		Used		Priority
/swapfile                               file		2097148		512		-2

##########################################################################

Checking cpufreq OPP (Cortex-A7):

No cpufreq support available. Measured on cpu1: 1286 MHz (1299.278/1299.262/1261.978)

##########################################################################

Executing benchmark on cpu0 (Cortex-A7):

tinymembench v0.4.9 (simple benchmark for memory throughput and latency)

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 3: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                     :    376.6 MB/s
 C copy backwards (32 byte blocks)                    :   1407.0 MB/s (4.2%)
 C copy backwards (64 byte blocks)                    :   1341.3 MB/s
 C copy                                               :   1385.9 MB/s (0.5%)
 C copy prefetched (32 bytes step)                    :   1405.5 MB/s (5.2%)
 C copy prefetched (64 bytes step)                    :   1465.1 MB/s (1.5%)
 C 2-pass copy                                        :   1026.5 MB/s (1.6%)
 C 2-pass copy prefetched (32 bytes step)             :   1097.1 MB/s (4.1%)
 C 2-pass copy prefetched (64 bytes step)             :   1142.4 MB/s (2.5%)
 C fill                                               :   4107.0 MB/s (0.2%)
 C fill (shuffle within 16 byte blocks)               :   4184.9 MB/s (0.3%)
 C fill (shuffle within 32 byte blocks)               :    515.2 MB/s (1.9%)
 C fill (shuffle within 64 byte blocks)               :    539.9 MB/s
 ---
 standard memcpy                                      :   1249.2 MB/s
 standard memset                                      :   3296.8 MB/s
 ---
 NEON read                                            :   1869.9 MB/s
 NEON read prefetched (32 bytes step)                 :   2053.1 MB/s
 NEON read prefetched (64 bytes step)                 :   2129.9 MB/s
 NEON read 2 data streams                             :    458.3 MB/s
 NEON read 2 data streams prefetched (32 bytes step)  :    946.8 MB/s
 NEON read 2 data streams prefetched (64 bytes step)  :   1064.3 MB/s
 NEON copy                                            :   1354.7 MB/s
 NEON copy prefetched (32 bytes step)                 :   1408.8 MB/s (0.4%)
 NEON copy prefetched (64 bytes step)                 :   1474.9 MB/s
 NEON unrolled copy                                   :   1333.1 MB/s (0.3%)
 NEON unrolled copy prefetched (32 bytes step)        :   1264.5 MB/s
 NEON unrolled copy prefetched (64 bytes step)        :   1361.8 MB/s
 NEON copy backwards                                  :   1398.0 MB/s (0.6%)
 NEON copy backwards prefetched (32 bytes step)       :   1461.4 MB/s (0.5%)
 NEON copy backwards prefetched (64 bytes step)       :   1506.9 MB/s
 NEON 2-pass copy                                     :   1126.7 MB/s
 NEON 2-pass copy prefetched (32 bytes step)          :   1193.0 MB/s
 NEON 2-pass copy prefetched (64 bytes step)          :   1233.1 MB/s (0.2%)
 NEON unrolled 2-pass copy                            :    950.5 MB/s
 NEON unrolled 2-pass copy prefetched (32 bytes step) :    898.5 MB/s
 NEON unrolled 2-pass copy prefetched (64 bytes step) :    957.0 MB/s
 NEON fill                                            :   4188.0 MB/s (0.3%)
 NEON fill backwards                                  :   4178.2 MB/s
 VFP copy                                             :   1334.7 MB/s
 VFP 2-pass copy                                      :    961.6 MB/s
 ARM fill (STRD)                                      :   3297.5 MB/s
 ARM fill (STM with 8 registers)                      :   4178.7 MB/s
 ARM fill (STM with 4 registers)                      :   3918.7 MB/s
 ARM copy prefetched (incr pld)                       :   1446.2 MB/s
 ARM copy prefetched (wrap pld)                       :   1415.3 MB/s
 ARM 2-pass copy prefetched (incr pld)                :   1090.8 MB/s
 ARM 2-pass copy prefetched (wrap pld)                :   1059.9 MB/s

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.8 ns          /     8.3 ns 
    131072 :    7.5 ns          /    11.7 ns 
    262144 :   19.3 ns          /    32.7 ns 
    524288 :   67.6 ns          /   106.1 ns 
   1048576 :   98.9 ns          /   138.2 ns 
   2097152 :  118.2 ns          /   154.5 ns 
   4194304 :  127.9 ns          /   161.3 ns 
   8388608 :  133.9 ns          /   166.5 ns 
  16777216 :  140.4 ns          /   175.2 ns 
  33554432 :  152.5 ns          /   194.9 ns 
  67108864 :  170.1 ns          /   227.7 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A7), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.310 2.310 2.504 2.550 2.310 2.310 3.175 6.448 
         8k: 2.310 2.310 2.502 2.550 2.315 2.310 3.177 6.447 
        16k: 2.310 2.310 2.502 2.551 2.309 2.309 3.176 6.449 
        32k: 5.601 6.655 6.384 6.465 5.921 6.417 12.08 23.37 
        64k: 10.40 14.45 10.66 15.52 10.54 15.17 23.99 52.71 
       128k: 11.87 17.43 12.70 14.89 11.91 15.47 28.36 59.25 
       256k: 50.83 74.43 51.07 76.68 53.33 76.91 136.7 253.6 
       512k: 104.8 123.5 104.4 125.5 105.8 121.7 213.4 410.8 
      1024k: 133.6 140.5 134.2 142.9 133.7 139.8 249.8 480.1 
      2048k: 142.2 148.0 142.3 150.5 142.1 147.0 269.2 513.9 
      4096k: 143.7 150.5 143.8 152.3 143.8 150.1 273.7 521.6 
      8192k: 145.0 154.2 145.2 156.7 145.0 152.8 277.8 527.4 
     16384k: 147.1 159.8 147.2 162.8 147.1 158.9 287.8 538.5 

##########################################################################

Executing benchmark twice on cluster 0 (Cortex-A7)

OpenSSL 3.0.5, built on 5 Jul 2022 (Library: OpenSSL 3.0.5 5 Jul 2022)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc      21291.00k    29354.04k    32468.71k    33354.50k    33619.86k    33573.59k
aes-128-cbc      21871.95k    29608.61k    32607.60k    33454.52k    33668.85k    33726.00k
aes-192-cbc      19188.31k    25472.34k    27846.85k    28507.00k    28688.33k    28718.27k
aes-192-cbc      19474.52k    25637.70k    27904.00k    28501.22k    28720.99k    28451.55k
aes-256-cbc      17849.18k    22854.14k    24621.76k    25130.87k    25297.22k    25305.39k
aes-256-cbc      17810.43k    22839.84k    24660.20k    25152.98k    25299.94k    25305.39k

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A7)

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 32000000 32000000 21333333 32000000 64000000 256000000 256000000 512000000 1024000000

RAM size:     878 MB,  # CPU hardware threads:   4
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        668   100    651    651  |      12461   100   1064   1064
23:        641   100    654    654  |      12261   100   1061   1061
24:        620   100    667    667  |      12056   100   1058   1058
25:        593   100    678    677  |      11784   100   1050   1049
----------------------------------  | ------------------------------
Avr:             100    663    662  |              100   1059   1058
Tot:             100    861    860

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-3

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 32000000 32000000 32000000 32000000 42666666 256000000 512000000 1024000000 1024000000

RAM size:     878 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1858   303    597   1807  |      47127   386   1040   4021
23:       1843   311    604   1878  |      46912   391   1039   4059
24:       1829   320    614   1967  |      44889   381   1035   3941
----------------------------------  | ------------------------------
Avr:             311    605   1884  |              386   1038   4007
Tot:             349    822   2946

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 32000000 32000000 64000000 - - 256000000 512000000 512000000 1024000000

RAM size:     878 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1793   292    598   1745  |      46582   382   1041   3974
23:       1656   277    609   1687  |      45914   383   1039   3973
24:       1824   320    614   1962  |      44076   374   1034   3869
----------------------------------  | ------------------------------
Avr:             296    607   1798  |              380   1038   3939
Tot:             338    822   2868

7-Zip (a) [32] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,32 bits,4 CPUs LE)

LE
CPU Freq: 32000000 32000000 32000000 64000000 128000000 256000000 512000000 512000000 1024000000

RAM size:     878 MB,  # CPU hardware threads:   4
RAM usage:    450 MB,  # Benchmark threads:      4

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1887   307    598   1837  |      47356   388   1042   4040
23:       1852   312    604   1887  |      46381   386   1039   4013
24:       1839   321    615   1978  |      46073   390   1037   4045
----------------------------------  | ------------------------------
Avr:             314    606   1901  |              388   1039   4033
Tot:             351    823   2967

Compression: 1884,1798,1901
Decompression: 4007,3939,4033
Total: 2946,2868,2967

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:57:45:   ---      4.00  88%   0%  87%   0%   0%   0%     0Â°C

Checking cpufreq OPP (Cortex-A7):

No cpufreq support available. Measured on cpu1: 1298 MHz (1299.621/1299.441/1297.727)

##########################################################################

System health while running tinymembench:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:40:24:   ---      0.97   0%   0%   0%   0%   0%   0%    --
16:41:04:   ---      1.41  32%   0%  25%   0%   6%   0%    --
16:41:44:   ---      1.94  44%   0%  29%   0%  14%   0%    --
16:42:24:   ---      1.68  28%   0%  25%   0%   3%   0%    --
16:43:04:   ---      1.61  25%   0%  25%   0%   0%   0%    --
16:43:44:   ---      1.31  25%   0%  25%   0%   0%   0%    --
16:44:24:   ---      1.16  25%   0%  24%   0%   0%   0%    --
16:45:04:   ---      1.08  25%   0%  25%   0%   0%   0%    --
16:45:44:   ---      1.13  25%   0%  25%   0%   0%   0%    --
16:46:24:   ---      1.11  25%   0%  25%   0%   0%   0%    --
16:47:04:   ---      1.06  25%   0%  25%   0%   0%   0%    --

System health while running ramlat:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:47:44:   ---      1.03   0%   0%   0%   0%   0%   0%    --
16:47:47:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:47:50:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:47:53:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:47:56:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:47:59:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:48:02:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:48:05:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:48:08:   ---      1.02  25%   0%  25%   0%   0%   0%    --
16:48:11:   ---      1.02  25%   0%  25%   0%   0%   0%    --

System health while running OpenSSL benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:48:12:   ---      1.02   0%   0%   0%   0%   0%   0%    --
16:48:28:   ---      1.01  25%   0%  25%   0%   0%   0%    --
16:48:44:   ---      1.01  25%   0%  25%   0%   0%   0%    --
16:49:00:   ---      1.01  25%   0%  25%   0%   0%   0%    --
16:49:16:   ---      1.00  25%   0%  25%   0%   0%   0%    --
16:49:32:   ---      1.07  29%   0%  27%   0%   0%   0%    --
16:49:48:   ---      1.05  25%   0%  25%   0%   0%   0%    --

System health while running 7-zip single core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:50:01:   ---      1.05   0%   0%   0%   0%   0%   0%    --
16:50:16:   ---      1.03  25%   0%  24%   0%   0%   0%    --
16:50:31:   ---      1.03  25%   0%  24%   0%   0%   0%    --
16:50:46:   ---      1.02  25%   0%  24%   0%   0%   0%    --
16:51:01:   ---      1.02  25%   0%  24%   0%   0%   0%    --
16:51:16:   ---      1.30  25%   0%  24%   0%   0%   0%    --
16:51:31:   ---      1.30  25%   0%  24%   0%   0%   0%    --
16:51:46:   ---      1.30  25%   0%  24%   0%   0%   0%    --
16:52:01:   ---      1.24  25%   0%  24%   0%   0%   0%    --
16:52:16:   ---      1.42  29%   0%  28%   0%   0%   0%    --
16:52:31:   ---      1.55  27%   0%  27%   0%   0%   0%    --
16:52:46:   ---      1.56  26%   0%  25%   0%   0%   0%    --

System health while running 7-zip multi core benchmark:

Time      CPU n/a    load %cpu %sys %usr %nice %io %irq   Temp
16:53:00:   ---      1.44   0%   0%   0%   0%   0%   0%    --
16:53:32:   ---      2.68  81%   0%  81%   0%   0%   0%    --
16:54:03:   ---      3.17  88%   0%  87%   0%   0%   0%    --
16:54:34:   ---      3.64  90%   1%  89%   0%   0%   0%    --
16:55:07:   ---      3.51  79%   0%  78%   0%   0%   0%    --
16:55:37:   ---      3.61  87%   0%  86%   0%   0%   0%    --
16:56:09:   ---      3.89  87%   1%  86%   0%   0%   0%    --
16:56:42:   ---      3.71  81%   0%  81%   0%   0%   0%    --
16:57:13:   ---      3.91  90%   0%  90%   0%   0%   0%    --
16:57:45:   ---      4.00  88%   0%  87%   0%   0%   0%    --

##########################################################################

dmesg output while running the benchmarks:

[336466.063806] mt6580_fmradio: TurnON!
[336475.596598] mt6580_fmradio: Tune 106.4
[336486.048447] mt6580_fmradio: Ok! RDS lovk
[336509.443975] mt6580_fmradio: Tune 100.9
[336511.036944] mt6580_fmradio: Ok! RDS lovk
[336514.810134] mt6580_fmradio: Tune 100.8
[336516.229873] mt6580_fmradio: Ok! RDS lovk
[336523.607260] mt6580_fmradio: Tune 100.0
[336525.648943] mt6580_fmradio: Ok! RDS lovk
[336533.990946] mt6580_fmradio: Tune 99.8
[336540.014032] mt6580_fmradio: Tune 99.5
[336542.904346] mt6580_fmradio: Tune 99.1
[336548.065385] mt6580_fmradio: Tune 98.4
[336551.030754] mt6580_fmradio: Ok! RDS lovk
[336566.305114] ///kagami&tsukasa
[336577.002841] mt6580_fmradio: Turn OFF
[336590.847810] mt6580_fmradio: dsp ver 0x6580
[336624.694228] mt6580_vcodec: echo mt6580_fmradio: dsp ver 0x6580 >/dev/kmsgSart Viseo Codecs1! H364 1280z720

##########################################################################

Linux 5.19.0-rc4+ (mediatek) 	07/30/22 	_armv7l_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.47    0.00    0.08    0.38    0.00   99.07

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           3.63        35.21        37.61        23.78   11856778   12665020    8009528

               total        used        free      shared  buff/cache   available
Mem:           878Mi       174Mi       494Mi       0.0Ki       209Mi       683Mi
Swap:          2.0Gi       0.0Ki       2.0Gi

Filename				Type		Size		Used		Priority
/swapfile                               file		2097148		512		-2

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0       -      -     Cortex-A7 / r0p3
  1        0        0       -      -     Cortex-A7 / r0p3
  2        0        0       -      -     Cortex-A7 / r0p3
  3        0        0       -      -     Cortex-A7 / r0p3

Architecture:                    armv7l
Byte Order:                      Little Endian
CPU(s):                          4
On-line CPU(s) list:             0-3
Vendor ID:                       ARM
Model name:                      Cortex-A7
Model:                           3
Thread(s) per core:              1
Core(s) per socket:              4
Socket(s):                       1
Stepping:                        r0p3
BogoMIPS:                        2596.86
Flags:                           half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae
Vulnerability Itlb multihit:     Not affected
Vulnerability L1tf:              Not affected
Vulnerability Mds:               Not affected
Vulnerability Meltdown:          Not affected
Vulnerability Mmio stale data:   Not affected
Vulnerability Spec store bypass: Not affected
Vulnerability Spectre v1:        Mitigation; __user pointer sanitization
Vulnerability Spectre v2:        Not affected
Vulnerability Srbds:             Not affected
Vulnerability Tsx async abort:   Not affected

SoC guess: Mediatek MT6580
DT compat: mizudec,mt6580-k9m1test
           mediatek,mt6580
 Compiler: /usr/bin/gcc (Debian 12.1.0-7) 12.1.0 / arm-linux-gnueabihf
 Userland: armhf
   Kernel: 5.19.0-rc4+/armv7l

| Mediatek MT6580 K9M1-test board | ~1290 MHz | 5.19 | Debian GNU/Linux bookworm/sid armhf | 2930 | 21580 | 25300 | 1250 | 3300 | - |